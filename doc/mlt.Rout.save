
R version 3.4.3 (2017-11-30) -- "Kite-Eating Tree"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## ----setup, echo = FALSE, results = "hide", message = FALSE--------------
> set.seed(290875)
> 
> sapply(c("mlt", "survival", "eha", "prodlim", "truncreg", "lattice", "gridExtra",
+          "MASS", "nnet", "HSAUR3", "sandwich", "flexsurv", "grid", "latticeExtra", 
+          "colorspace", "multcomp"), library, char = TRUE)
Loading required package: basefun
Loading required package: variables
Loading required package: maxLik
Loading required package: miscTools

Please cite the 'maxLik' package as:
Henningsen, Arne and Toomet, Ott (2011). maxLik: A package for maximum likelihood estimation in R. Computational Statistics 26(3), 443-458. DOI 10.1007/s00180-010-0217-1.

If you have questions, suggestions, or comments regarding the 'maxLik' package, please use a forum or 'tracker' at maxLik's R-Forge site:
https://r-forge.r-project.org/projects/maxlik/
Loading required package: tools

Attaching package: ‘flexsurv’

The following objects are masked from ‘package:eha’:

    dgompertz, dllogis, hgompertz, Hgompertz, hllogis, Hllogis, hlnorm,
    Hlnorm, hweibull, Hweibull, pgompertz, pllogis, qgompertz, qllogis,
    rgompertz, rllogis


Attaching package: ‘grid’

The following object is masked from ‘package:variables’:

    unit

Loading required package: RColorBrewer
Loading required package: mvtnorm
Loading required package: TH.data

Attaching package: ‘TH.data’

The following object is masked from ‘package:HSAUR3’:

    birds

The following object is masked from ‘package:MASS’:

    geyser

$mlt
 [1] "mlt"       "basefun"   "variables" "stats"     "graphics"  "grDevices"
 [7] "utils"     "datasets"  "methods"   "base"     

$survival
 [1] "survival"  "mlt"       "basefun"   "variables" "stats"     "graphics" 
 [7] "grDevices" "utils"     "datasets"  "methods"   "base"     

$eha
 [1] "eha"       "survival"  "mlt"       "basefun"   "variables" "stats"    
 [7] "graphics"  "grDevices" "utils"     "datasets"  "methods"   "base"     

$prodlim
 [1] "prodlim"   "eha"       "survival"  "mlt"       "basefun"   "variables"
 [7] "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"  
[13] "base"     

$truncreg
 [1] "truncreg"  "maxLik"    "miscTools" "prodlim"   "eha"       "survival" 
 [7] "mlt"       "basefun"   "variables" "stats"     "graphics"  "grDevices"
[13] "utils"     "datasets"  "methods"   "base"     

$lattice
 [1] "lattice"   "truncreg"  "maxLik"    "miscTools" "prodlim"   "eha"      
 [7] "survival"  "mlt"       "basefun"   "variables" "stats"     "graphics" 
[13] "grDevices" "utils"     "datasets"  "methods"   "base"     

$gridExtra
 [1] "gridExtra" "lattice"   "truncreg"  "maxLik"    "miscTools" "prodlim"  
 [7] "eha"       "survival"  "mlt"       "basefun"   "variables" "stats"    
[13] "graphics"  "grDevices" "utils"     "datasets"  "methods"   "base"     

$MASS
 [1] "MASS"      "gridExtra" "lattice"   "truncreg"  "maxLik"    "miscTools"
 [7] "prodlim"   "eha"       "survival"  "mlt"       "basefun"   "variables"
[13] "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"  
[19] "base"     

$nnet
 [1] "nnet"      "MASS"      "gridExtra" "lattice"   "truncreg"  "maxLik"   
 [7] "miscTools" "prodlim"   "eha"       "survival"  "mlt"       "basefun"  
[13] "variables" "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[19] "methods"   "base"     

$HSAUR3
 [1] "HSAUR3"    "tools"     "nnet"      "MASS"      "gridExtra" "lattice"  
 [7] "truncreg"  "maxLik"    "miscTools" "prodlim"   "eha"       "survival" 
[13] "mlt"       "basefun"   "variables" "stats"     "graphics"  "grDevices"
[19] "utils"     "datasets"  "methods"   "base"     

$sandwich
 [1] "sandwich"  "HSAUR3"    "tools"     "nnet"      "MASS"      "gridExtra"
 [7] "lattice"   "truncreg"  "maxLik"    "miscTools" "prodlim"   "eha"      
[13] "survival"  "mlt"       "basefun"   "variables" "stats"     "graphics" 
[19] "grDevices" "utils"     "datasets"  "methods"   "base"     

$flexsurv
 [1] "flexsurv"  "sandwich"  "HSAUR3"    "tools"     "nnet"      "MASS"     
 [7] "gridExtra" "lattice"   "truncreg"  "maxLik"    "miscTools" "prodlim"  
[13] "eha"       "survival"  "mlt"       "basefun"   "variables" "stats"    
[19] "graphics"  "grDevices" "utils"     "datasets"  "methods"   "base"     

$grid
 [1] "grid"      "flexsurv"  "sandwich"  "HSAUR3"    "tools"     "nnet"     
 [7] "MASS"      "gridExtra" "lattice"   "truncreg"  "maxLik"    "miscTools"
[13] "prodlim"   "eha"       "survival"  "mlt"       "basefun"   "variables"
[19] "stats"     "graphics"  "grDevices" "utils"     "datasets"  "methods"  
[25] "base"     

$latticeExtra
 [1] "latticeExtra" "RColorBrewer" "grid"         "flexsurv"     "sandwich"    
 [6] "HSAUR3"       "tools"        "nnet"         "MASS"         "gridExtra"   
[11] "lattice"      "truncreg"     "maxLik"       "miscTools"    "prodlim"     
[16] "eha"          "survival"     "mlt"          "basefun"      "variables"   
[21] "stats"        "graphics"     "grDevices"    "utils"        "datasets"    
[26] "methods"      "base"        

$colorspace
 [1] "colorspace"   "latticeExtra" "RColorBrewer" "grid"         "flexsurv"    
 [6] "sandwich"     "HSAUR3"       "tools"        "nnet"         "MASS"        
[11] "gridExtra"    "lattice"      "truncreg"     "maxLik"       "miscTools"   
[16] "prodlim"      "eha"          "survival"     "mlt"          "basefun"     
[21] "variables"    "stats"        "graphics"     "grDevices"    "utils"       
[26] "datasets"     "methods"      "base"        

$multcomp
 [1] "multcomp"     "TH.data"      "mvtnorm"      "colorspace"   "latticeExtra"
 [6] "RColorBrewer" "grid"         "flexsurv"     "sandwich"     "HSAUR3"      
[11] "tools"        "nnet"         "MASS"         "gridExtra"    "lattice"     
[16] "truncreg"     "maxLik"       "miscTools"    "prodlim"      "eha"         
[21] "survival"     "mlt"          "basefun"      "variables"    "stats"       
[26] "graphics"     "grDevices"    "utils"        "datasets"     "methods"     
[31] "base"        

> 
> if (!file.exists("analysis/DVC.rda")) {
+     download.file("https://zenodo.org/record/17179/files/DVC.tgz", "DVC.tgz")
+     untar("DVC.tgz", file = "analysis/DVC.rda", compressed = "gzip")
+ }
> load("analysis/DVC.rda")
> dvc <- c(margin.table(obs, 2))
> 
> logLik.phreg <- function(object) {
+     ret <- object$loglik[2]
+     attr(ret, "df") <- length(coef(object))
+     class(ret) <- "logLik"
+     ret
+ }
> vcov.phreg <- function(object) object$var
> 
> trellis.par.set(list(plot.symbol = list(col=1,pch=20, cex=0.7),
+                      box.rectangle = list(col=1),
+                      box.umbrella = list(lty=1, col=1),
+                      strip.background = list(col = "white")))
Warning message:
In trellis.par.set(list(plot.symbol = list(col = 1, pch = 20, cex = 0.7),  :
  Note: The default device has been opened to honour attempt to modify trellis settings
> ltheme <- canonical.theme(color = FALSE)     ## in-built B&W theme
> ltheme$strip.background$col <- "transparent" ## change strip bg
> lattice.options(default.theme = ltheme)
> 
> knitr::opts_chunk$set(echo = TRUE, results = 'markup', error = FALSE,
+                       warning = FALSE, message = FALSE,
+                       tidy = FALSE, cache = FALSE, size = "small",
+                       fig.width = 6, fig.height = 4, fig.align = "center",
+                       out.width = NULL, ###'.6\\linewidth', 
+                       out.height = NULL,
+                       fig.scap = NA)
> knitr::render_sweave()  # use Sweave environments
> knitr::set_header(highlight = '')  # do not \usepackage{Sweave}
> ## R settings
> options(prompt = "R> ", continue = "+  ", useFancyQuotes = FALSE)  # JSS style
R> options(width = 75)
R> 
R> RC <- function(...) {
+      ret <- do.call("cbind", list(...))
+      mlt <- which(colnames(ret) == "mlt")
+      for (i in (1:ncol(ret))[-mlt]) {
+          nm <- colnames(ret)[i]
+          ret <- cbind(ret, (ret[,i] - ret[,mlt]) / ret[,mlt])
+          colnames(ret)[ncol(ret)] <- paste("(", nm, " - mlt)/mlt", sep = "")
+      }
+      print(ret, digits = 5)
+      return(invisible(ret))
+  }
R> 
R> ## ----citation, echo = FALSE----------------------------------------------
R> year <- substr(packageDescription("mlt.docreg")$Date, 1, 4)
R> version <- packageDescription("mlt.docreg")$Version
R> 
R> ## ----geyser-var, echo = TRUE---------------------------------------------
R> library("mlt")
R> var_d <- numeric_var("duration", support = c(1.0, 5.0), 
+                       add = c(-1, 1), bounds = c(0, Inf))
R> 
R> ## ----geyser-basis, echo = TRUE-------------------------------------------
R> B_d <- Bernstein_basis(var = var_d, order = 8, ui = "increasing")
R> 
R> ## ----geyser-ctm, echo = TRUE---------------------------------------------
R> ctm_d <- ctm(response = B_d, todistr = "Normal")
R> 
R> ## ----geyser-grid, echo = TRUE--------------------------------------------
R> str(nd_d <- mkgrid(ctm_d, 200))
List of 1
 $ duration: num [1:200] 0 0.0302 0.0603 0.0905 0.1206 ...
R> 
R> ## ----geyser-data, echo = TRUE--------------------------------------------
R> data("geyser", package = "TH.data")
R> head(geyser)
  waiting        duration
1      80        4.016667
2      71        2.150000
3      57 [4.000000, Inf]
4      80 [4.000000, Inf]
5      75 [4.000000, Inf]
6      77 [0.000000,   2]
R> 
R> ## ----geyser-fit, echo = TRUE---------------------------------------------
R> mlt_d <- mlt(ctm_d, data = geyser)
R> logLik(mlt_d)
'log Lik.' -317.766 (df=9)
R> 
R> ## ----geyser-density, echo = TRUE-----------------------------------------
R> nd_d$d <- predict(mlt_d, newdata = nd_d, type = "density")
R> 
R> ## ----geyser-plot, echo = FALSE-------------------------------------------
R> plot(d ~ duration, data = nd_d, type = "l", ylab = "Density", xlab = "Duration time")
R> 
R> ## ----CHFLS-1-------------------------------------------------------------
R> data("CHFLS", package = "HSAUR3")
R> polr_CHFLS_1 <- polr(R_happy ~ 1, data = CHFLS)
R> 
R> ## ----CHFLS-1-basefun-----------------------------------------------------
R> nl <- nlevels(CHFLS$R_happy)
R> b_happy <- as.basis(~ R_happy, data = CHFLS, remove_intercept = TRUE,
+                      contrasts.arg = list(R_happy = function(n) 
+                          contr.treatment(n, base = nl)),
+                      ui = diff(diag(nl - 1)), ci = rep(0, nl - 2))
R> 
R> ## ----CHFLS-1-basefun-basis-----------------------------------------------
R> b_happy <- as.basis(CHFLS$R_happy)
R> 
R> ## ----CHFLS-1-ctm---------------------------------------------------------
R> ctm_CHFLS_1 <- ctm(response = b_happy, todist = "Logistic")
R> 
R> ## ----CHFLS-1-mlt---------------------------------------------------------
R> mlt_CHFLS_1 <- mlt(model = ctm_CHFLS_1, data = CHFLS)
R> 
R> ## ----CHFLS-1-cmpr--------------------------------------------------------
R> logLik(polr_CHFLS_1)
'log Lik.' -1328.241 (df=3)
R> logLik(mlt_CHFLS_1)
'log Lik.' -1328.241 (df=3)
R> RC(polr = polr_CHFLS_1$zeta, mlt = coef(mlt_CHFLS_1))
                                polr     mlt (polr - mlt)/mlt
Very unhappy|Not too happy   -4.6874 -4.6874       1.0136e-06
Not too happy|Somewhat happy -1.9034 -1.9034      -1.9208e-07
Somewhat happy|Very happy     1.4993  1.4993      -1.7416e-06
R> 
R> ## ----CHFLS-1-pred--------------------------------------------------------
R> RC(polr = predict(polr_CHFLS_1, newdata = data.frame(1), type = "prob"),
+     mlt = c(predict(mlt_CHFLS_1, newdata = data.frame(1), 
+                     type = "density", q = mkgrid(b_happy)[[1]])),
+     ML = xtabs(~ R_happy, data = CHFLS) / nrow(CHFLS))
                    polr       mlt        ML (polr - mlt)/mlt
Very unhappy   0.0091265 0.0091265 0.0091265      -4.7077e-06
Not too happy  0.1205998 0.1205997 0.1205997       6.9851e-07
Somewhat happy 0.6877444 0.6877449 0.6877445      -6.2653e-07
Very happy     0.1825293 0.1825289 0.1825293       2.1345e-06
               (ML - mlt)/mlt
Very unhappy      -4.6171e-06
Not too happy      6.0289e-07
Somewhat happy    -6.1198e-07
Very happy         2.1384e-06
R> 
R> ## ----geyser-w------------------------------------------------------------
R> var_w <- numeric_var("waiting", support = c(40.0, 100), add = c(-5, 15), 
+                       bounds = c(0, Inf))
R> c(sapply(nd_w <- mkgrid(var_w, 100), range))
[1]  35 115
R> 
R> ## ----geyser-bernstein----------------------------------------------------
R> B_w <- Bernstein_basis(var_w, order = 8, ui = "increasing")
R> 
R> ## ----geyser-w-ctm, echo = TRUE-------------------------------------------
R> ctm_w <- ctm(response = B_w, todistr = "Normal")
R> 
R> ## ----geyser-w-fit, echo = TRUE-------------------------------------------
R> mlt_w <- mlt(ctm_w, data = geyser)
R> 
R> ## ----geyser-w-distribution, echo = TRUE----------------------------------
R> nd_w$d <- predict(mlt_w, newdata = nd_w, type = "distribution")
R> 
R> ## ----geyser-w-plot, echo = FALSE-----------------------------------------
R> layout(matrix(1:2, ncol = 2))
R> plot(ecdf(geyser$waiting), col = "grey", xlab = "Waiting times", ylab = "Distribution", 
+       main = "", cex = .75)
R> lines(nd_w$waiting, nd_w$d)
R> B_w_40 <- Bernstein_basis(order = 40, var = var_w, ui = "incre")
R> ctm_w_40 <- ctm(B_w_40, todistr = "Normal")
R> mlt_w_40 <- mlt(ctm_w_40, data = geyser)
R> nd_w$d2 <- predict(mlt_w_40, q = nd_w$waiting, type = "distribution")
R> lines(nd_w$waiting, nd_w$d2, lty = 2)
R> legend("bottomright", lty = 1:2, legend = c("M = 8", "M = 40"), bty = "n")
R> plot(nd_w$waiting, predict(mlt_w, q = nd_w$waiting, type = "density"), type = "l",
+       ylim = c(0, .04), xlab = "Waiting times", ylab = "Density")
R> lines(nd_w$waiting, predict(mlt_w_40, q = nd_w$waiting, type = "density"), lty = 2)
R> rug(geyser$waiting, col = rgb(.1, .1, .1, .1))
R> 
R> ## ----dvc-----------------------------------------------------------------
R> var_dvc <- numeric_var("dvc", support = min(dvc):max(dvc))
R> B_dvc <- Bernstein_basis(var_dvc, order = 6, ui = "increasing")
R> dvc_mlt <- mlt(ctm(B_dvc), data = data.frame(dvc = dvc))
R> 
R> ## ----dvc-predict---------------------------------------------------------
R> q <- support(var_dvc)[[1]]
R> p <- predict(dvc_mlt, newdata = data.frame(1), q = q,
+               type = "distribution")
R> 
R> ## ----dvc-plot, echo = FALSE----------------------------------------------
R> plot(ecdf(dvc), col = "grey", xlab = "Number of Roe Deer-Vehicle Collisions",
+       ylab = "Distribution", main = "", cex = .75)
R> lines(q, p, col = "blue")
R> lines(q, ppois(q, lambda = mean(dvc)), col = "darkred")
R> legend(400, .3, pch = c(20, NA, NA), lty = c(NA, 1, 1), 
+         legend = c("ECDF", "Transformation Model", "Poisson"), bty = "n", cex = .8,
+         col = c("grey", "blue", "darkred"))
R> 
R> ## ----CHFLS-2, cache = TRUE-----------------------------------------------
R> polr_CHFLS_2 <- polr(R_happy ~ R_age + R_income, data = CHFLS)
R> 
R> ## ----CHFLS-2-base--------------------------------------------------------
R> b_R <- as.basis(~ R_age + R_income, data = CHFLS, remove_intercept = TRUE, 
+                  negative = TRUE)
R> 
R> ## ----CHFLS-2-ctm---------------------------------------------------------
R> ctm_CHFLS_2 <- ctm(response = b_happy, shifting = b_R, 
+                     todistr = "Logistic")
R> mlt_CHFLS_2 <- mlt(ctm_CHFLS_2, data = CHFLS, scale = TRUE)
R> 
R> ## ----CHFLS-2-cmpr--------------------------------------------------------
R> logLik(polr_CHFLS_2)
'log Lik.' -1322.021 (df=5)
R> logLik(mlt_CHFLS_2)
'log Lik.' -1322.021 (df=5)
R> RC(polr = c(polr_CHFLS_2$zeta, coef(polr_CHFLS_2)), 
+     mlt = coef(mlt_CHFLS_2))
                                    polr         mlt (polr - mlt)/mlt
Very unhappy|Not too happy   -4.80159236 -4.80157928       2.7237e-06
Not too happy|Somewhat happy -2.01169559 -2.01170305      -3.7091e-06
Somewhat happy|Very happy     1.41270713  1.41270342       2.6245e-06
R_age                        -0.00627896 -0.00627915      -2.9964e-05
R_income                      0.00023501  0.00023501      -5.5093e-06
R> 
R> ## ----GBSG2-1, echo = TRUE------------------------------------------------
R> data("GBSG2", package = "TH.data")
R> GBSG2y <- numeric_var("y", support = c(100.0, max(GBSG2$time)), 
+                        bounds = c(0, Inf))
R> GBSG2$y <- with(GBSG2, Surv(time, cens))
R> 
R> ## ----GBSG2-1-Cox---------------------------------------------------------
R> B_GBSG2y <- Bernstein_basis(var = GBSG2y, order = 10, ui = "increasing")
R> fm_GBSG2 <- Surv(time, cens) ~ horTh + age + menostat + tsize + tgrade +
+                                 pnodes + progrec + estrec
R> ctm_GBSG2_1 <- ctm(B_GBSG2y, shifting = fm_GBSG2[-2L], data = GBSG2,
+                     todistr = "MinExtrVal")
R> 
R> ## ----GBSG2-1-xbasis, eval = FALSE----------------------------------------
R> ## as.basis(fm_GBSG2[-2L], data = GBSG2, remove_intercept = TRUE)
R> 
R> ## ----GBSG2-1-mlt---------------------------------------------------------
R> mlt_GBSG2_1 <- mlt(ctm_GBSG2_1, data = GBSG2, scale = TRUE)
R> 
R> ## ----GBSG2-1-coxph-------------------------------------------------------
R> coxph_GBSG2_1 <- coxph(fm_GBSG2, data = GBSG2, ties = "breslow")
R> cf <- coef(coxph_GBSG2_1)
R> RC(coxph = cf, mlt = coef(mlt_GBSG2_1)[names(cf)])
                   coxph         mlt (coxph - mlt)/mlt
horThyes     -0.34624162 -0.34870794       -0.00707272
age          -0.00945341 -0.00993200       -0.04818719
menostatPost  0.25815655  0.26764267       -0.03544325
tsize         0.00779833  0.00776595        0.00416918
tgrade.L      0.55108381  0.56022306       -0.01631359
tgrade.Q     -0.20110602 -0.20194242       -0.00414178
pnodes        0.04878180  0.04876198        0.00040649
progrec      -0.00221749 -0.00221054        0.00314617
estrec        0.00019782  0.00018299        0.08103062
R> 
R> ## ----GBSG2-coxph_mlt, echo = FALSE, results = "hide", cache = TRUE-------
R> ndtmp <- as.data.frame(mkgrid(GBSG2y, 100))
R> 
R> ord <- c(1:30, 35, 40, 45, 50)
R> p <- vector(mode = "list", length = length(ord))
R> CF <- c()
R> ll <- numeric(length(ord))
R> tm <- numeric(length(ord))
R> 
R> for (i in 1:length(ord)) {
+      print(i)
+      B_GBSG2ytmp <- Bernstein_basis(var = GBSG2y, order = ord[i], ui = "increasing")
+      ctmi <- ctm(B_GBSG2ytmp, shifting = fm_GBSG2[-2L], data = GBSG2,
+                     todistr = "MinExtrVal")
+      tm[i] <- system.time(mlti <- mlt(ctmi, data = GBSG2, scale = TRUE))[1]
+  
+      ll[i] <- logLik(mlti)
+      p[[i]] <- predict(mlti, newdata = ndtmp, type = "trafo", terms = "bresponse")
+  
+      cf <- coef(mlti)
+      cf <- cf[-grep("Bs", names(cf))]
+      CF <- rbind(CF, cf)
+  }
[1] 1
[1] 2
[1] 3
[1] 4
[1] 5
[1] 6
[1] 7
[1] 8
[1] 9
[1] 10
[1] 11
[1] 12
[1] 13
[1] 14
[1] 15
[1] 16
[1] 17
[1] 18
[1] 19
[1] 20
[1] 21
[1] 22
[1] 23
[1] 24
[1] 25
[1] 26
[1] 27
[1] 28
[1] 29
[1] 30
[1] 31
[1] 32
[1] 33
[1] 34
R> colnames(CF) <- names(cf)
R> 
R> of <- model.matrix(coxph_GBSG2_1) %*% coef(coxph_GBSG2_1) 
R> coxphtmp <- coxph(Surv(time, cens) ~ 1  + offset(of), data = GBSG2)
R> b <- survfit(coxphtmp)
R> layout(matrix(1:2, nc = 2))
R> col <- rgb(.1, .1, .1, .1)
R> ylim <- range(unlist(p)[is.finite(unlist(p))])
R> plot(ndtmp$y, p[[1]], type = "l", ylim =  ylim, col = col, xlab = "Survival Time (days)",
+       ylab = "Log-cumulative Hazard")
R> out <- sapply(p, function(y) lines(ndtmp$y, y, col = col))
R> lines(b$time, log(b$cumhaz), col = "red")
R> 
R> ylim <- range(CF)
R> plot(ord, CF[,1], ylim = ylim, col = col[1], xlab = "Order M",
+       ylab = "Coefficients", type = "n")
R> for (i in 1:ncol(CF)) {
+      points(ord, CF[,i], cex = .5, pch = 19)
+      abline(h = coef(coxph_GBSG2_1)[i], col = "darkgrey")
+  }
R> # text(20, coef(coxph_GBSG2_1) + .1, names(coef(coxph_GBSG2_1)))
R> 
R> ## ----GBSG2-1-fss, cache = TRUE-------------------------------------------
R> kn <- log(support(GBSG2y)$y)
R> fss_GBSG2_1 <- flexsurvspline(fm_GBSG2, data = GBSG2, scale = "hazard", 
+                                k = 9, bknots = kn)
R> logLik(fss_GBSG2_1)
'log Lik.' -2555.856 (df=20)
R> logLik(mlt_GBSG2_1)
'log Lik.' -2559.151 (df=20)
R> cf <- coef(coxph_GBSG2_1)
R> RC(coxph = cf, mlt = coef(mlt_GBSG2_1)[names(cf)],
+     fss = coef(fss_GBSG2_1)[names(cf)])
                   coxph         mlt         fss (coxph - mlt)/mlt
horThyes     -0.34624162 -0.34870794 -0.34733633       -0.00707272
age          -0.00945341 -0.00993200 -0.00978958       -0.04818719
menostatPost  0.25815655  0.26764267  0.26722049       -0.03544325
tsize         0.00779833  0.00776595  0.00790516        0.00416918
tgrade.L      0.55108381  0.56022306  0.55542849       -0.01631359
tgrade.Q     -0.20110602 -0.20194242 -0.20784996       -0.00414178
pnodes        0.04878180  0.04876198  0.04859337        0.00040649
progrec      -0.00221749 -0.00221054 -0.00221124        0.00314617
estrec        0.00019782  0.00018299  0.00018913        0.08103062
             (fss - mlt)/mlt
horThyes         -0.00393339
age              -0.01433934
menostatPost     -0.00157740
tsize             0.01792585
tgrade.L         -0.00855832
tgrade.Q          0.02925357
pnodes           -0.00345795
progrec           0.00031467
estrec            0.03355982
R> 
R> ## ----GBSG2-1-fss-plot, echo = FALSE--------------------------------------
R> p1 <- summary(fss_GBSG2_1, newdata = GBSG2[1,], ci = FALSE)
R> p2 <- predict(mlt_GBSG2_1, newdata = GBSG2[1, all.vars(fm_GBSG2[-2L])], 
+                q = p1[[1]]$time, type = "survivor")
R> plot(p1[[1]]$time, p1[[1]]$est, type = "l", lty = 1, xlab = "Survival Time (days)", 
+       ylab = "Probability", ylim = c(0, 1))
R> lines(p1[[1]]$time, p2[,1], lty = 2)
R> p3 <- survfit(coxph_GBSG2_1, newdata = GBSG2[1,])
R> lines(p3$time, p3$surv, lty = 3)
R> legend("topright", lty = 1:3, legend = c("flexsurvspline", "mlt", "coxph"), bty = "n")
R> 
R> ## ----GBSG2-2-------------------------------------------------------------
R> ly <- log_basis(GBSG2y, ui = "increasing")
R> ctm_GBSG2_2 <- ctm(ly, shifting = fm_GBSG2[-2L], data = GBSG2, 
+                     negative = TRUE, todistr = "MinExtrVal")
R> mlt_GBSG2_2 <- mlt(ctm_GBSG2_2, data = GBSG2, fixed = c("log(y)" = 1), 
+                     scale = TRUE)
R> 
R> ## ----GBSG2-2-exp---------------------------------------------------------
R> survreg_GBSG2_2 <- survreg(fm_GBSG2, data = GBSG2, dist = "exponential")
R> phreg_GBSG2_2 <- phreg(fm_GBSG2, data = GBSG2, dist = "weibull", 
+                         shape = 1)
R> logLik(survreg_GBSG2_2)
'log Lik.' -2599.383 (df=10)
R> logLik(phreg_GBSG2_2)
'log Lik.' -2599.383 (df=10)
R> logLik(mlt_GBSG2_2)
'log Lik.' -2599.383 (df=10)
R> RC(survreg = coef(survreg_GBSG2_2)[names(cf)], 
+     phreg = -coef(phreg_GBSG2_2)[names(cf)], 
+     mlt = coef(mlt_GBSG2_2)[names(cf)])
                 survreg       phreg         mlt (survreg - mlt)/mlt
horThyes      0.33216174  0.33216174  0.33216140          1.0292e-06
age           0.00941967  0.00941967  0.00941963          4.1572e-06
menostatPost -0.26853589 -0.26853589 -0.26853648         -2.2114e-06
tsize        -0.00731794 -0.00731794 -0.00731801         -8.3585e-06
tgrade.L     -0.51935212 -0.51935212 -0.51934917          5.6731e-06
tgrade.Q      0.21392176  0.21392176  0.21392108          3.1617e-06
pnodes       -0.04616647 -0.04616647 -0.04616636          2.3501e-06
progrec       0.00206709  0.00206709  0.00206711         -1.0394e-05
estrec       -0.00017885 -0.00017885 -0.00017883          1.1399e-04
             (phreg - mlt)/mlt
horThyes            1.0292e-06
age                 4.1571e-06
menostatPost       -2.2114e-06
tsize              -8.3585e-06
tgrade.L            5.6730e-06
tgrade.Q            3.1617e-06
pnodes              2.3501e-06
progrec            -1.0394e-05
estrec              1.1399e-04
R> 
R> ## ----GBSG2-3-------------------------------------------------------------
R> mlt_GBSG2_3 <- mlt(ctm_GBSG2_2, data = GBSG2, scale = TRUE)
R> survreg_GBSG2_3 <- survreg(fm_GBSG2, data = GBSG2, dist = "weibull")
R> phreg_GBSG2_3 <- phreg(fm_GBSG2, data = GBSG2, dist = "weibull")
R> logLik(survreg_GBSG2_3)
'log Lik.' -2579.695 (df=11)
R> logLik(phreg_GBSG2_3)
'log Lik.' -2579.695 (df=11)
R> logLik(mlt_GBSG2_3)
'log Lik.' -2579.695 (df=11)
R> RC(survreg = coef(survreg_GBSG2_3)[names(cf)] / survreg_GBSG2_3$scale, 
+     phreg = - coef(phreg_GBSG2_3)[names(cf)], 
+     mlt = coef(mlt_GBSG2_3)[names(cf)])
                 survreg       phreg        mlt (survreg - mlt)/mlt
horThyes      0.37309092  0.37309092  0.3730891          4.9645e-06
age           0.00947993  0.00947993  0.0094803         -3.4725e-05
menostatPost -0.27090274 -0.27090274 -0.2709161         -4.9430e-05
tsize        -0.00801490 -0.00801490 -0.0080153         -4.8819e-05
tgrade.L     -0.57279926 -0.57279926 -0.5727666          5.6947e-05
tgrade.Q      0.20505972  0.20505972  0.2050385          1.0359e-04
pnodes       -0.05280165 -0.05280165 -0.0528004          2.3167e-05
progrec       0.00228486  0.00228486  0.0022848          3.2566e-05
estrec       -0.00024843 -0.00024843 -0.0002484          1.3247e-04
             (phreg - mlt)/mlt
horThyes            4.9645e-06
age                -3.4725e-05
menostatPost       -4.9430e-05
tsize              -4.8819e-05
tgrade.L            5.6947e-05
tgrade.Q            1.0359e-04
pnodes              2.3167e-05
progrec             3.2566e-05
estrec              1.3247e-04
R> 
R> ## ----BostonHousing-lm----------------------------------------------------
R> data("BostonHousing2", package = "mlbench")
R> lm_BH <- lm(cmedv ~ crim + zn + indus + chas + nox + rm + age + dis + 
+              rad + tax + ptratio + b + lstat, data = BostonHousing2)
R> 
R> ## ----BostonHousing-mlt---------------------------------------------------
R> BostonHousing2$medvc <- with(BostonHousing2, Surv(cmedv, cmedv < 50))
R> var_m <- numeric_var("medvc", support = c(10.0, 40.0), bounds = c(0, Inf))
R> fm_BH <- medvc ~ crim + zn + indus + chas + nox + rm + age + 
+                   dis + rad + tax + ptratio + b + lstat
R> 
R> ## ----BostonHousng-mlt-linear---------------------------------------------
R> B_m <- polynomial_basis(var_m, coef = c(TRUE, TRUE), 
+                          ui = matrix(c(0, 1), nrow = 1), ci = 0)
R> ctm_BH <- ctm(B_m, shift = fm_BH[-2L], data = BostonHousing2, 
+                todistr = "Normal")
R> lm_BH_2 <- mlt(ctm_BH, data = BostonHousing2, scale = TRUE)
R> logLik(lm_BH_2)
'log Lik.' -1496.301 (df=15)
R> 
R> ## ----BostonHousing-ctm---------------------------------------------------
R> B_m <- Bernstein_basis(var_m, order = 6, ui = "increasing")
R> ctm_BH <- ctm(B_m, shift = fm_BH[-2L], data = BostonHousing2, 
+                todistr = "Normal")
R> mlt_BH <- mlt(ctm_BH, data = BostonHousing2, scale = TRUE)
R> logLik(mlt_BH)
'log Lik.' -1324.698 (df=20)
R> 
R> ## ----BostonHousing-plot, echo = FALSE, results = "hide"------------------
R> q <- 3:52
R> m <- predict(lm_BH, data = BostonHousing2)
R> s <- summary(lm_BH)$sigma
R> d <- sapply(m, function(m) pnorm(q, mean = m, sd = s))
R> nd <- expand.grid(q = q, lp = m)
R> nd$d <- c(d)
R> 
R> pfun <- function(x, y, z, subscripts, at, ...) {
+      panel.contourplot(x, y, z, subscripts, at = 1:9/10, ...)
+      panel.xyplot(x = m, y = BostonHousing2$cmedv, pch = 20,   
+                   col = rgb(.1, .1, .1, .1),  ...)   
+  }
R> p1 <- contourplot(d ~ lp + q, data = nd, panel = pfun, 
+                    xlab = "Linear predictor", ylab = "Observed", 
+                    main = "Normal Linear Model")
R> 
R> d <- predict(mlt_BH, newdata = BostonHousing2, q = q, type = "distribution")
R> lp <- c(predict(mlt_BH, newdata = BostonHousing2, q = 1, terms = "bshift"))
R> nd <- expand.grid(q = q, lp = -lp)
R> nd$d <- c(d)
R> pfun <- function(x, y, z, subscripts, at, ...) {
+      panel.contourplot(x, y, z, subscripts, at = 1:9/10, ...)
+      panel.xyplot(x = -lp, y = BostonHousing2$cmedv, pch = 20, 
+                   col = rgb(.1, .1, .1, .1), ...)   
+  }
R> p2 <- contourplot(d ~ lp + q, data = nd, panel = pfun, xlab = "Linear predictor", ylab = "Observed", main = "Linear Transformation Model")
R> grid.arrange(p1, p2, nrow = 1)
R> 
R> ## ----PSID1976------------------------------------------------------------
R> data("PSID1976", package = "AER")
R> PSID1976$nwincome <- with(PSID1976, (fincome - hours * wage)/1000)
R> PSID1976$hours <- as.double(PSID1976$hours)
R> PSID1976_0 <- subset(PSID1976, participation == "yes")
R> fm_PSID1976 <- hours ~ nwincome + education + experience + 
+                         I(experience^2) + age + youngkids + oldkids
R> 
R> ## ----PSID1976-truncreg---------------------------------------------------
R> tr_PSID1976 <- truncreg(fm_PSID1976, data = PSID1976_0)
R> 
R> ## ----PSID1976-mlt--------------------------------------------------------
R> PSID1976_0$hours <- R(PSID1976_0$hours, tleft = 0)
R> b_hours <- as.basis(~ hours, data = PSID1976, 
+                      ui = matrix(c(0, 1), nr  = 1), ci = 0)
R> ctm_PSID1976_1 <- ctm(b_hours, shift = fm_PSID1976[-2L], 
+                        data = PSID1976_0, todistr = "Normal") 
R> mlt_PSID1976_1 <- mlt(ctm_PSID1976_1, data = PSID1976_0, scale = TRUE)
R> 
R> ## ----PSID1976-cmpr-------------------------------------------------------
R> logLik(tr_PSID1976)
'log Lik.' -3391.478 (df=9)
R> logLik(mlt_PSID1976_1)
'log Lik.' -3390.648 (df=9)
R> cf <- coef(mlt_PSID1976_1)
R> RC(truncreg = coef(tr_PSID1976),
+     mlt = c(-cf[-grep("hours", names(cf))], 1) / cf["hours"])
                  truncreg        mlt (truncreg - mlt)/mlt
(Intercept)     2055.71277 2123.56614           -0.0319526
nwincome          -0.50115    0.15365           -4.2616537
education        -31.26965  -29.85120            0.0475172
experience        73.00661   72.61009            0.0054609
I(experience^2)   -0.96951   -0.94364            0.0274208
age              -25.33598  -27.44358           -0.0767978
youngkids       -318.85212 -484.70140           -0.3421679
oldkids          -91.61953 -102.65171           -0.1074719
sigma            822.47929  850.76319           -0.0332453
R> 
R> ## ----PSID1976-mlt-ctm----------------------------------------------------
R> var_h <- numeric_var("hours", support = range(PSID1976_0$hours$exact),
+                       bounds = c(0, Inf))
R> B_hours <- Bernstein_basis(var_h, order = 6, ui = "increasing")
R> ctm_PSID1976_2 <- ctm(B_hours, shift = fm_PSID1976[-2L], 
+                        data = PSID1976_0, todistr = "Normal")
R> mlt_PSID1976_2 <- mlt(ctm_PSID1976_2, data = PSID1976_0, 
+                        scale = TRUE)
R> logLik(mlt_PSID1976_2)
'log Lik.' -3375.477 (df=14)
R> 
R> ## ----CHFLS-3, cache = TRUE-----------------------------------------------
R> b_health <- as.basis(~ R_health - 1, data = CHFLS)
R> ctm_CHFLS_3 <- ctm(b_happy, interacting = b_health, todist = "Logistic")
R> mlt_CHFLS_3 <- mlt(ctm_CHFLS_3, data = CHFLS, scale = TRUE)
R> logLik(mlt_CHFLS_3)
'log Lik.' -1192.226 (df=15)
R> predict(mlt_CHFLS_3, newdata = mkgrid(mlt_CHFLS_3), type = "distribution")
                R_health
R_happy               Poor   Not good        Fair        Good    Excellent
  Very unhappy   0.1999991 0.05035963 0.008676796 0.001718215 5.012443e-08
  Not too happy  0.5999982 0.38129488 0.154013080 0.073883186 7.602344e-02
  Somewhat happy 0.8999975 0.93525179 0.913232107 0.862542897 5.614034e-01
  Very happy     1.0000000 1.00000000 1.000000000 1.000000000 1.000000e+00
R> 
R> ## ----CHFLS-4, cache = TRUE-----------------------------------------------
R> ctm_CHFLS_4 <- ctm(b_happy, interacting = b_health, shifting = b_R, 
+                     todist = "Logistic")
R> mlt_CHFLS_4 <- mlt(ctm_CHFLS_4, data = CHFLS, scale = TRUE)
R> coef(mlt_CHFLS_4)[c("R_age", "R_income")]
       R_age     R_income 
0.0117386981 0.0002492629 
R> 
R> ## ----GBSG2-4-------------------------------------------------------------
R> b_horTh <- as.basis(GBSG2$horTh)
R> ctm_GBSG2_4 <- ctm(B_GBSG2y, interacting = b_horTh, 
+                     todistr = "MinExtrVal")
R> mlt_GBSG2_4 <- mlt(ctm_GBSG2_4, data = GBSG2)
R> 
R> ## ----GBSG2-strata-plot, echo = FALSE, results = "hide"-------------------
R> nd <- expand.grid(s <- mkgrid(mlt_GBSG2_4, 100))
R> nd$mlt_S <- c(predict(mlt_GBSG2_4, newdata = s, type = "survivor"))
R> nd$KM_S <- unlist(predict(prodlim(Surv(time, cens) ~ horTh, data = GBSG2), 
+       	             newdata = data.frame(horTh = s$horTh), times = s$y))
R> plot(nd$y, nd$mlt_S, ylim = c(0, 1), xlab = "Survival time (days)",
+       ylab = "Probability", type = "n", las = 1)
R> with(subset(nd, horTh == "no"), lines(y, mlt_S, col = "grey", lty = 2))
R> with(subset(nd, horTh == "yes"), lines(y, mlt_S, lty = 2))
R> with(subset(nd, horTh == "no"), lines(y, KM_S, type = "s", col = "grey"))
R> with(subset(nd, horTh == "yes"), lines(y, KM_S, type = "s"))
R> legend(250, 0.4, lty = c(1, 1, 2, 2), col = c("black", "grey", "black", "grey"),
+         legend = c("hormonal therapy, KM", "no hormonal therapy, KM", 
+                    "hormonal therapy, MLT", "no hormonal therapy, MLT"), bty = "n", cex = .75)
R> 
R> ## ----GBSG2-5-------------------------------------------------------------
R> ctm_GBSG2_5 <- ctm(B_GBSG2y, interacting = b_horTh, shifting = ~ age, 
+                     data = GBSG2, todistr = "MinExtrVal")
R> mlt_GBSG2_5 <- mlt(ctm_GBSG2_5, data = GBSG2, scale = TRUE)
R> 
R> ## ----GBSG2-5-coxph-------------------------------------------------------
R> coxph_GBSG2_5 <- coxph(Surv(time, cens) ~ age + strata(horTh), 
+                         data = GBSG2)
R> cf <- coef(coxph_GBSG2_5)
R> RC(coxph = cf, mlt = coef(mlt_GBSG2_5)[names(cf)])
          coxph         mlt (coxph - mlt)/mlt
age -0.00036957 -0.00046447          -0.20432
R> 
R> ## ----CHFLS-5, cache = TRUE-----------------------------------------------
R> contrasts(CHFLS$R_health) <- "contr.treatment"
R> b_health <- as.basis(~ R_health, data = CHFLS)
R> ctm_CHFLS_5 <- ctm(b_happy, interacting = b_health, todist = "Logistic")
R> mlt_CHFLS_5 <- mlt(ctm_CHFLS_5, data = CHFLS, scale = TRUE)
Warning messages:
1: contrasts dropped from factor R_health 
2: contrasts dropped from factor R_health 
3: contrasts dropped from factor R_health 
4: contrasts dropped from factor R_health 
R> predict(mlt_CHFLS_5, newdata = mkgrid(mlt_CHFLS_5), type = "distribution")
                R_health
R_happy               Poor   Not good        Fair        Good    Excellent
  Very unhappy   0.2001065 0.05036008 0.008680778 0.001712238 5.612700e-07
  Not too happy  0.6001098 0.38129239 0.154015362 0.073877847 7.602102e-02
  Somewhat happy 0.9003905 0.93524848 0.913234513 0.862546398 5.614128e-01
  Very happy     1.0000000 1.00000000 1.000000000 1.000000000 1.000000e+00
R> logLik(mlt_CHFLS_5)
'log Lik.' -1192.226 (df=15)
R> 
R> ## ----CHFLS-6, cache = TRUE-----------------------------------------------
R> b_R <- as.basis(~ R_age + R_income, data = CHFLS, remove_intercept = TRUE, 
+                  scale = TRUE)
R> ctm_CHFLS_6 <- ctm(b_happy, interacting = b_R, todist = "Logistic")  
R> mlt_CHFLS_6 <- mlt(ctm_CHFLS_6, data = CHFLS, scale = TRUE)

warning: solve(): system seems singular; attempting approx solution
R> logLik(mlt_CHFLS_6)
'log Lik.' -1472.42 (df=6)
R> 
R> ## ----CHFLS-7, cache = TRUE-----------------------------------------------
R> ctm_CHFLS_7 <- ctm(b_happy, interacting = c(h = b_health, R = b_R), 
+      todist = "Logistic")  
R> mlt_CHFLS_7 <- mlt(ctm_CHFLS_7, data = CHFLS, scale = TRUE)
Warning messages:
1: contrasts dropped from factor R_health 
2: contrasts dropped from factor R_health 
3: contrasts dropped from factor R_health 
4: contrasts dropped from factor R_health 
R> logLik(mlt_CHFLS_7)
'log Lik.' -1182.778 (df=21)
R> 
R> ## ----iris-1--------------------------------------------------------------
R> fm_iris <- Species ~ Sepal.Length + Sepal.Width + 
+                       Petal.Length + Petal.Width
R> multinom_iris <- nnet::multinom(fm_iris, data = iris, trace = FALSE)
R> logLik(multinom_iris)
'log Lik.' -5.949867 (df=10)
R> iris$oSpecies <- ordered(iris$Species)
R> b_Species <- as.basis(iris$oSpecies)
R> b_x <- as.basis(fm_iris[-2L], data = iris, scale = TRUE)
R> ctm_iris <- ctm(b_Species, interacting = b_x,
+                  todistr = "Logistic")
R> mlt_iris <- mlt(ctm_iris, data = iris, scale = TRUE)
R> logLik(mlt_iris)
'log Lik.' -5.950196 (df=10)
R> p1 <- predict(mlt_iris, newdata = iris, q = sort(unique(iris$oSpecies)), 
+                type = "density")
R> p2 <- predict(multinom_iris, newdata = iris, type = "prob")
R> max(abs(t(p1) - p2))
[1] 0.00327083
R> 
R> ## ----GBSG2-6-------------------------------------------------------------
R> ctm_GBSG2_6 <- ctm(B_GBSG2y, shifting = ~ horTh, data = GBSG2, 
+                     todistr = "MinExtrVal")
R> mlt_GBSG2_6 <- mlt(ctm_GBSG2_6, data = GBSG2)
R> logLik(mlt_GBSG2_6)
'log Lik.' -2607.361 (df=12)
R> 
R> ## ----GBSG2-7-------------------------------------------------------------
R> b_horTh <- as.basis(~ horTh, data = GBSG2)
R> ctm_GBSG2_7 <- ctm(B_GBSG2y, interacting = b_horTh, 
+                     todistr = "MinExtrVal")
R> nd <- data.frame(y = GBSG2$time[1:2], horTh = unique(GBSG2$horTh))
R> attr(model.matrix(ctm_GBSG2_7, data = nd), "constraint")
$ui
20 x 22 sparse Matrix of class "dgCMatrix"
                                                                     
 [1,] -1  1  .  .  .  .  .  .  .  . .  .  .  .  .  .  .  .  .  .  . .
 [2,]  . -1  1  .  .  .  .  .  .  . .  .  .  .  .  .  .  .  .  .  . .
 [3,]  .  . -1  1  .  .  .  .  .  . .  .  .  .  .  .  .  .  .  .  . .
 [4,]  .  .  . -1  1  .  .  .  .  . .  .  .  .  .  .  .  .  .  .  . .
 [5,]  .  .  .  . -1  1  .  .  .  . .  .  .  .  .  .  .  .  .  .  . .
 [6,]  .  .  .  .  . -1  1  .  .  . .  .  .  .  .  .  .  .  .  .  . .
 [7,]  .  .  .  .  .  . -1  1  .  . .  .  .  .  .  .  .  .  .  .  . .
 [8,]  .  .  .  .  .  .  . -1  1  . .  .  .  .  .  .  .  .  .  .  . .
 [9,]  .  .  .  .  .  .  .  . -1  1 .  .  .  .  .  .  .  .  .  .  . .
[10,]  .  .  .  .  .  .  .  .  . -1 1  .  .  .  .  .  .  .  .  .  . .
[11,] -1  1  .  .  .  .  .  .  .  . . -1  1  .  .  .  .  .  .  .  . .
[12,]  . -1  1  .  .  .  .  .  .  . .  . -1  1  .  .  .  .  .  .  . .
[13,]  .  . -1  1  .  .  .  .  .  . .  .  . -1  1  .  .  .  .  .  . .
[14,]  .  .  . -1  1  .  .  .  .  . .  .  .  . -1  1  .  .  .  .  . .
[15,]  .  .  .  . -1  1  .  .  .  . .  .  .  .  . -1  1  .  .  .  . .
[16,]  .  .  .  .  . -1  1  .  .  . .  .  .  .  .  . -1  1  .  .  . .
[17,]  .  .  .  .  .  . -1  1  .  . .  .  .  .  .  .  . -1  1  .  . .
[18,]  .  .  .  .  .  .  . -1  1  . .  .  .  .  .  .  .  . -1  1  . .
[19,]  .  .  .  .  .  .  .  . -1  1 .  .  .  .  .  .  .  .  . -1  1 .
[20,]  .  .  .  .  .  .  .  .  . -1 1  .  .  .  .  .  .  .  .  . -1 1

$ci
 [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

R> mlt_GBSG2_7 <- mlt(ctm_GBSG2_7, data = GBSG2)
R> logLik(mlt_GBSG2_7)
'log Lik.' -2605.949 (df=22)
R> 
R> ## ----GBSG2-deviation-plot, echo = FALSE, results = "hide"----------------
R> 
R> s <- mkgrid(mlt_GBSG2_7, 15)
R> s$y <- s$y[s$y > 100 & s$y < 2400]
R> nd <- expand.grid(s)
R> K <- model.matrix(ctm_GBSG2_7, data = nd)
R> Kyes <- K[nd$horTh == "yes",]
R> Kyes[,grep("Intercept", colnames(K))] <- 0  
R> gh <- glht(parm(coef(mlt_GBSG2_7), vcov(mlt_GBSG2_7)), Kyes)
R> ci <- confint(gh)
R> coxy <- s$y
R> 
R> K <- matrix(0, nrow = 1, ncol = length(coef(mlt_GBSG2_6)))
R> K[,length(coef(mlt_GBSG2_6))] <- 1
R> ci2 <- confint(glht(mlt_GBSG2_6, K))
R> 
R> plot(coxy, ci$confint[, "Estimate"], ylim = range(ci$confint), type = "n",
+       xlab = "Survival time (days)", ylab = "Log-hazard ratio", las = 1)
R> polygon(c(coxy, rev(coxy)), c(ci$confint[,"lwr"], rev(ci$confint[, "upr"])),
+          border = NA, col = rgb(.1, .1, .1, .1))
R> lines(coxy, ci$confint[, "Estimate"], lty = 1, lwd = 1)
R> lines(coxy, rep(ci2$confint[,"Estimate"], length(coxy)), lty = 2, lwd = 1) 
R> lines(coxy, rep(0, length(coxy)), lty = 3)
R> polygon(c(coxy[c(1, length(coxy))], rev(coxy[c(1, length(coxy))])),
+          rep(ci2$confint[,c("lwr", "upr")], c(2, 2)),
+          border = NA, col = rgb(.1, .1, .1, .1))
R> legend("bottomright", lty = 1:2, lwd = 1, legend = c("time-varying log-hazard ratio",
+         "time-constant log-hazard ratio"), bty = "n", cex = .75)
R> 
R> ## ----GBSG2-8, echo = TRUE, cache = TRUE----------------------------------
R> var_a <- numeric_var("age", support = range(GBSG2$age))
R> B_age <- Bernstein_basis(var_a, order = 3)
R> b_horTh <- as.basis(GBSG2$horTh)
R> ctm_GBSG2_8 <- ctm(B_GBSG2y, 
+                     interacting = b(horTh = b_horTh, age = B_age), 
+                     todistr = "MinExtrVal")
R> mlt_GBSG2_8  <- mlt(ctm_GBSG2_8, data = GBSG2)
R> logLik(mlt_GBSG2_8)
'log Lik.' -2588.757 (df=88)
R> 
R> ## ----GBSG2-8-plot, echo = FALSE------------------------------------------
R> nlev <- c(no = "without hormonal therapy", yes = "with hormonal therapy")
R> levels(nd$horTh) <- nlev[match(levels(nd$horTh), names(nlev))]
R> s <- mkgrid(mlt_GBSG2_8, 100)
R> nd <- expand.grid(s)
R> nd$s <- c(predict(mlt_GBSG2_8, newdata = s, type = "survivor"))
R> contourplot(s ~ age + y | horTh, data = nd, at = 1:9 / 10,
+              ylab = "Survival time (days)", xlab = "Age (years)",
+              scales = list(x = list(alternating = c(1, 1))))
R> 
R> ## ----head, echo = TRUE, cache = TRUE-------------------------------------
R> data("db", package = "gamlss.data")
R> db$lage <- with(db, age^(1/3))
R> var_head <- numeric_var("head", support = quantile(db$head, c(.1, .9)),
+                         bounds = range(db$head))
R> B_head <- Bernstein_basis(var_head, order = 3, ui = "increasing")
R> var_lage <- numeric_var("lage", support = quantile(db$lage, c(.1, .9)),
+                          bounds = range(db$lage))
R> B_age <- Bernstein_basis(var_lage, order = 3, ui = "none")
R> ctm_head <- ctm(B_head, interacting = B_age)
R> mlt_head <- mlt(ctm_head, data = db, scale = TRUE)
R> 
R> ## ----head-plot, echo = FALSE---------------------------------------------
R> pr <- expand.grid(s <- mkgrid(ctm_head, 100))
R> pr$p <- c(predict(mlt_head, newdata = s, type = "distribution"))
R> pr$lage <- pr$lage^3
R> pr$cut <- factor(pr$lage > 2.5)
R> levels(pr$cut) <- c("Age < 2.5 yrs", "Age > 2.5 yrs")
R> pfun <- function(x, y, z, subscripts, at, ...) {
+      panel.contourplot(x, y, z, subscripts,
+          at = c(0.4, 2, 10, 25, 50, 75, 90, 98, 99.6)/ 100, ...)
+      panel.xyplot(x = db$age, y = db$head, pch = 20,
+                   col = rgb(.1, .1, .1, .1), ...)
+  }
R> print(contourplot(p ~ lage + head | cut, data = pr, panel = pfun, region = FALSE,
+              xlab = "Age (years)", ylab = "Head circumference (cm)",
+              scales = list(x = list(relation = "free"))))
R> 
R> ## ----BostonHousing-dr-sumconstr, cache = TRUE----------------------------
R> b_BH_s <- as.basis(fm_BH[-2L], data = BostonHousing2, scale = TRUE)
R> ctm_BHi <- ctm(B_m, interacting = b_BH_s, sumconstr = TRUE)
R> mlt_BHi <- mlt(ctm_BHi, data = BostonHousing2)
R> logLik(mlt_BHi)
'log Lik.' -1224.118 (df=98)
R> 
R> ## ----BostonHousing-dr, cache = TRUE--------------------------------------
R> ctm_BHi2 <- ctm(B_m, interacting = b_BH_s, sumconstr = FALSE)
R> mlt_BHi2 <- mlt(ctm_BHi2, data = BostonHousing2)
R> logLik(mlt_BHi2)
'log Lik.' -1274.375 (df=98)
R> 
R> ## ----Boston-Housing-dr-plot, echo = FALSE, fig.height = 3----------------
R> q <- mkgrid(var_m, 100)[[1]]
R> tr <- predict(mlt_BH, newdata = BostonHousing2[, all.vars(fm_BH[-2L])],
+                q = q, type = "density")
R> tri <- predict(mlt_BHi, newdata = BostonHousing2[, all.vars(fm_BH[-2L])],
+                q = q, type = "density")
R> tri2 <- predict(mlt_BHi2, newdata = BostonHousing2[, all.vars(fm_BH[-2L])],
+                q = q, type = "density")
R> layout(matrix(1:3, ncol = 3))
R> Q <- matrix(q, nrow = length(q), ncol = ncol(tr))
R> ylim <- range(c(tr, tri))
R> matplot(Q, tr, ylim = ylim, xlab = "Median Value", ylab = "Density",
+          type = "l", col = rgb(.1, .1, .1, .1), lty = 1, main = "mlt_BH") 
R> matplot(Q, tri, ylim = ylim, xlab = "Median Value", ylab = "Density",
+          type = "l", col = rgb(.1, .1, .1, .1), lty = 1, main = "mlt_BHi")
R> matplot(Q, tri2, ylim = ylim, xlab = "Median Value", ylab = "Density",
+          type = "l", col = rgb(.1, .1, .1, .1), lty = 1, main = "mlt_BHi2")
R> 
R> ## ----treepipit, echo = TRUE, cache = TRUE--------------------------------
R> data("treepipit", package = "coin")
R> treepipit$ocounts <- ordered(treepipit$counts)
R> B_cs <- Bernstein_basis(var = numeric_var("coverstorey", support = 1:110), 
+                          order = 4)
R> B_c <- as.basis(treepipit$ocounts)
R> ctm_treepipit <- ctm(B_c, interacting = B_cs)
R> mlt_treepipit <- mlt(ctm_treepipit, data = treepipit, scale = TRUE,
+                       optim = mltoptim()["spg"])
R> 
R> ## ----mgcv, echo = FALSE, results = "hide"--------------------------------
R> library("mgcv") ### masks nnet::multinom
Loading required package: nlme

Attaching package: 'nlme'

The following object is masked from 'package:mlt':

    coef<-

This is mgcv 1.8-23. For overview type 'help("mgcv-package")'.

Attaching package: 'mgcv'

The following object is masked from 'package:nnet':

    multinom

R> 
R> ## ----treepipit-gam-------------------------------------------------------
R> gam_treepipit <- gam(counts ~ s(coverstorey), data = treepipit, 
+                       family = "poisson")
R> 
R> ## ----treepipit-plot, echo = FALSE, fig.height = 3------------------------
R> s <- mkgrid(ctm_treepipit, 100)
R> s$ocounts <- s$ocounts[1:5]
R> nd <- expand.grid(s)
R> nd$p <- c(predict(mlt_treepipit, newdata = s, type = "distribution"))
R> 
R> ### produce a table
R> tpt <- xtabs(~ counts + coverstorey, data = treepipit)
R> 
R> ### construct a data frame with frequencies
R> treepipit2 <- sapply(as.data.frame(tpt, stringsAsFactors = FALSE),
+                       as.integer)
R> 
R> s <- mkgrid(ctm_treepipit, 10)
R> s$ocounts <- s$ocounts[1]
R> K <- model.matrix(ctm_treepipit, data = expand.grid(s))
R> #g <- glht(parm(coef(mod), vcov(mod)), linfct = K)
R> #confint(g)
R> nd$lambda <- predict(gam_treepipit, newdata = nd, type = "response")
R> 
R> layout(matrix(1:3, nr = 1))
R> par("mai" = par("mai") * c(1, .95, 1, .85))
R> xlim <- range(treepipit[, "coverstorey"]) * c(0.98, 1.05)
R> xlab <- "Cover storey"
R> ylab <- "Number of tree pipits (TP)"
R> ### scatterplot again; plots are proportional to number of plots
R> plot(counts ~ coverstorey, data = treepipit2, cex = sqrt(Freq),
+       ylim = c(-.5, 5), xlab = xlab, ylab = ylab, col = "darkgrey", 
+       xlim = xlim, las = 1, main = "Observations")
R> 
R> plot(c(0, 110), c(0, 1), type = "n", xlab = xlab, ylab = "Conditional probability",
+       xlim = xlim, las = 1, main = "MLT")
R> with(subset(nd, ocounts == "0"), lines(coverstorey, p, lty = 1))
R> with(subset(nd, ocounts == "1"), lines(coverstorey, p, lty = 2))
R> with(subset(nd, ocounts == "2"), lines(coverstorey, p, lty = 3))
R> with(subset(nd, ocounts == "3"), lines(coverstorey, p, lty = 4))
R> with(subset(nd, ocounts == "4"), lines(coverstorey, p, lty = 5))
R> abline(h = 1, lty = 6)
R> legend("bottomright", lty = 1:6, legend = c(expression(TP == 0),
+                                              expression(TP <= 1),
+                                              expression(TP <= 2),
+                                              expression(TP <= 3),
+                                              expression(TP <= 4),
+                                              expression(TP <= 5)), bty = "n")
R> 
R> plot(c(0, 110), c(0, 1), type = "n", xlab = xlab, ylab = "Conditional probability",
+       xlim = xlim, las = 1, main = "GAM")
R> with(subset(nd, ocounts == "0"), lines(coverstorey, ppois(0, lambda), lty = 1))
R> with(subset(nd, ocounts == "1"), lines(coverstorey, ppois(1, lambda), lty = 2))
R> with(subset(nd, ocounts == "2"), lines(coverstorey, ppois(2, lambda), lty = 3))
R> with(subset(nd, ocounts == "3"), lines(coverstorey, ppois(3, lambda), lty = 4))
R> with(subset(nd, ocounts == "4"), lines(coverstorey, ppois(4, lambda), lty = 5))
R> abline(h = 1, lty = 6)
R> 
R> ## ----CHFLS-2-cmpr-estfun-------------------------------------------------
R> sc_polr <- estfun(polr_CHFLS_2)
R> sc_mlt <- -estfun(mlt_CHFLS_2)[,c(4, 5, 1:3)]
R> summary((sc_polr - sc_mlt) / 
+          pmax(sqrt(.Machine$double.eps), sc_mlt))
     R_age            R_income         Very unhappy|Not too happy
 Min.   :-6484.9   Min.   :-168809.6   Min.   :  0.00            
 1st Qu.:-1296.4   1st Qu.: -11288.0   1st Qu.:  0.00            
 Median : -231.0   Median :   -575.6   Median :  0.00            
 Mean   : -710.6   Mean   :  -2095.6   Mean   : 13.12            
 3rd Qu.:    0.0   3rd Qu.:      0.0   3rd Qu.:  0.00            
 Max.   : 6113.3   Max.   :1421703.2   Max.   :115.78            
 Not too happy|Somewhat happy Somewhat happy|Very happy
 Min.   :-42.139              Min.   :-131.370         
 1st Qu.:-21.276              1st Qu.:   0.000         
 Median : -6.376              Median :   0.000         
 Mean   :-10.019              Mean   :   4.493         
 3rd Qu.:  0.000              3rd Qu.:   0.000         
 Max.   : 32.054              Max.   :  67.507         
R> 
R> ## ----CHFLS-2-cmpr-2------------------------------------------------------
R> RC(polr = sqrt(diag(vcov(polr_CHFLS_2))),
+     mlt = sqrt(diag(vcov(mlt_CHFLS_2)))[c(4, 5, 1:3)])

Re-fitting to get Hessian

                                   polr        mlt (polr - mlt)/mlt
R_age                        5.6840e-03 5.6845e-03      -0.00007372
R_income                     8.5091e-05 7.0993e-05       0.19858100
Very unhappy|Not too happy   3.5362e-01 3.5227e-01       0.00385550
Not too happy|Somewhat happy 2.4196e-01 2.4005e-01       0.00797315
Somewhat happy|Very happy    2.3724e-01 2.3550e-01       0.00739456
R> 
R> ## ----CHFLS-2-cmpr-3------------------------------------------------------
R> cftest(polr_CHFLS_2)

Re-fitting to get Hessian


Re-fitting to get Hessian


	 Simultaneous Tests for General Linear Hypotheses

Fit: polr(formula = R_happy ~ R_age + R_income, data = CHFLS)

Linear Hypotheses:
                Estimate Std. Error z value Pr(>|z|)   
R_age == 0    -6.279e-03  5.684e-03  -1.105  0.26930   
R_income == 0  2.350e-04  8.509e-05   2.762  0.00575 **
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
(Univariate p values reported)

R> cftest(mlt_CHFLS_2, parm = names(coef(polr_CHFLS_2)))

	 Simultaneous Tests for General Linear Hypotheses

Fit: mlt(model = ctm_CHFLS_2, data = CHFLS, scale = TRUE)

Linear Hypotheses:
                Estimate Std. Error z value Pr(>|z|)    
R_age == 0    -6.279e-03  5.684e-03  -1.105 0.269326    
R_income == 0  2.350e-04  7.099e-05   3.310 0.000932 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
(Univariate p values reported)

R> 
R> ## ----GBSG2-1-coxph-cmpr--------------------------------------------------
R> cf <- coef(coxph_GBSG2_1)
R> RC(coxph = sqrt(diag(vcov(coxph_GBSG2_1))),
+     mlt = sqrt(diag(vcov(mlt_GBSG2_1)))[names(cf)],
+     fss = sqrt(diag(vcov(fss_GBSG2_1)))[names(cf)])
                  coxph        mlt        fss (coxph - mlt)/mlt
horThyes     0.12907328 0.12937336 0.12903432       -0.00231954
age          0.00930024 0.00931233 0.00928994       -0.00129758
menostatPost 0.18347998 0.18368050 0.18333000       -0.00109164
tsize        0.00393906 0.00393833 0.00393726        0.00018401
tgrade.L     0.18984428 0.18989980 0.18990681       -0.00029239
tgrade.Q     0.12196457 0.12201979 0.12202983       -0.00045250
pnodes       0.00744800 0.00741501 0.00743872        0.00444864
progrec      0.00057348 0.00057401 0.00055537       -0.00091413
estrec       0.00045037 0.00045155 0.00043096       -0.00261472
             (fss - mlt)/mlt
horThyes         -2.6206e-03
age              -2.4040e-03
menostatPost     -1.9082e-03
tsize            -2.7272e-04
tgrade.L          3.6917e-05
tgrade.Q          8.2337e-05
pnodes            3.1970e-03
progrec          -3.2467e-02
estrec           -4.5598e-02
R> 
R> ## ----GBSG2-1-coxph-cmpr-cftest-------------------------------------------
R> cftest(coxph_GBSG2_1)

	 Simultaneous Tests for General Linear Hypotheses

Fit: coxph(formula = fm_GBSG2, data = GBSG2, ties = "breslow")

Linear Hypotheses:
                    Estimate Std. Error z value Pr(>|z|)    
horThyes == 0     -0.3462416  0.1290733  -2.683  0.00731 ** 
age == 0          -0.0094534  0.0093002  -1.016  0.30941    
menostatPost == 0  0.2581565  0.1834800   1.407  0.15943    
tsize == 0         0.0077983  0.0039391   1.980  0.04773 *  
tgrade.L == 0      0.5510838  0.1898443   2.903  0.00370 ** 
tgrade.Q == 0     -0.2011060  0.1219646  -1.649  0.09917 .  
pnodes == 0        0.0487818  0.0074480   6.550 5.77e-11 ***
progrec == 0      -0.0022175  0.0005735  -3.867  0.00011 ***
estrec == 0        0.0001978  0.0004504   0.439  0.66049    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
(Univariate p values reported)

R> cftest(mlt_GBSG2_1, parm = names(cf))

	 Simultaneous Tests for General Linear Hypotheses

Fit: mlt(model = ctm_GBSG2_1, data = GBSG2, scale = TRUE)

Linear Hypotheses:
                    Estimate Std. Error z value Pr(>|z|)    
horThyes == 0     -0.3487079  0.1293734  -2.695 0.007031 ** 
age == 0          -0.0099320  0.0093123  -1.067 0.286178    
menostatPost == 0  0.2676427  0.1836805   1.457 0.145086    
tsize == 0         0.0077660  0.0039383   1.972 0.048622 *  
tgrade.L == 0      0.5602231  0.1898998   2.950 0.003177 ** 
tgrade.Q == 0     -0.2019424  0.1220198  -1.655 0.097925 .  
pnodes == 0        0.0487620  0.0074150   6.576 4.83e-11 ***
progrec == 0      -0.0022105  0.0005740  -3.851 0.000118 ***
estrec == 0        0.0001830  0.0004515   0.405 0.685294    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
(Univariate p values reported)

R> cftest(fss_GBSG2_1, parm = names(cf))

	 Simultaneous Tests for General Linear Hypotheses

Fit: flexsurvspline(formula = fm_GBSG2, data = GBSG2, k = 9, bknots = kn, 
    scale = "hazard")

Linear Hypotheses:
                    Estimate Std. Error z value Pr(>|z|)    
horThyes == 0     -0.3473363  0.1290343  -2.692  0.00711 ** 
age == 0          -0.0097896  0.0092899  -1.054  0.29198    
menostatPost == 0  0.2672205  0.1833300   1.458  0.14495    
tsize == 0         0.0079052  0.0039373   2.008  0.04467 *  
tgrade.L == 0      0.5554285  0.1899068   2.925  0.00345 ** 
tgrade.Q == 0     -0.2078500  0.1220298  -1.703  0.08852 .  
pnodes == 0        0.0485934  0.0074387   6.532 6.47e-11 ***
progrec == 0      -0.0022112  0.0005554  -3.982 6.85e-05 ***
estrec == 0        0.0001891  0.0004310   0.439  0.66076    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
(Univariate p values reported)

R> 
R> ## ----geyser-w-band-------------------------------------------------------
R> cb_w <- confband(mlt_w, newdata = data.frame(1), K = 20, cheat = 100)
R> 
R> ## ----geyser-w-cbplot, echo = FALSE---------------------------------------
R> layout(matrix(1:2, ncol = 2))
R> #i <- (cb_w[, "q"] > 45 & cb_w[, "q"] < 110)
R> #cb_w[-i, "lwr"] <- NA
R> #cb_w[-i, "upr"] <- NA
R> plot(cb_w[, "q"], cb_w[, "Estimate"], xlab = "Waiting times", ylab = "Transformation", 
+       main = "", type = "l")
R> 
R> q <- cb_w[, "q"]
R> lwr <- cb_w[, "lwr"]
R> upr <-  cb_w[, "upr"]
R> polygon(c(q, rev(q)), c(lwr, rev(upr)),
+          border = NA, col = "lightblue") ### rgb(.1, .1, .1, .1))
R> 
R> lines(cb_w[, "q"], cb_w[, "Estimate"])
R> rug(geyser$waiting, col = rgb(.1, .1, .1, .1))
R> plot(cb_w[, "q"], pnorm(cb_w[, "Estimate"]), xlab = "Waiting times", ylab = "Distribution", 
+       main = "", cex = .5, type = "n")
R> polygon(c(q, rev(q)), c(pnorm(lwr), rev(pnorm(upr))),                                     
+          border = NA, col = "lightblue") ### rgb(.1, .1, .1, .1))
R> lines(cb_w[, "q"], pnorm(cb_w[, "Estimate"]))
R> 
R> # lines(cb_w[, "q"], pnorm(cb_w[, "lwr"]))
R> # lines(cb_w[, "q"], pnorm(cb_w[, "upr"]))
R> rug(geyser$waiting, col = rgb(.1, .1, .1, .1))
R> 
R> ## ----geyser-w-simulate, results = "hide", cache = TRUE-------------------
R> new_w <- simulate(mlt_w, nsim = 100)
R> llr <- numeric(length(new_w))
R> pdist <- vector(mode = "list", length = length(new_w))
R> pdens <- vector(mode = "list", length = length(new_w))
R> ngeyser <- geyser
R> q <- mkgrid(var_w, 100)[[1]]
R> for (i in 1:length(new_w)) {
+      ngeyser$waiting <- new_w[[i]]
+      mlt_i <- mlt(ctm_w, data = ngeyser, scale = TRUE, 
+                   theta = coef(mlt_w))
+      llr[[i]] <- logLik(mlt_i) - logLik(mlt_i, parm = coef(mlt_w))
+      pdist[[i]] <- predict(mlt_i, newdata = data.frame(1), 
+                            type = "distribution", q = q)
+      pdens[[i]] <- predict(mlt_i, newdata = data.frame(1), 
+                            type = "density", q = q)
+  }
R> 
R> ## ----geyser-w-simulate-plot, echo = FALSE--------------------------------
R> i <- which(llr < quantile(llr, prob = .95))
R> tpdist <- pdist[i]
R> tpdens <- pdens[i]
R> layout(matrix(1:2, ncol = 2))
R> plot(q, tpdist[[1]], type = "n", xlab = "Waiting times", ylab = "Distribution")
R> polygon(c(q, rev(q)), c(pnorm(lwr), rev(pnorm(upr))),
+          border = NA, col = "lightblue")
R> tmp <- sapply(tpdist, function(x) lines(q, x, col = rgb(.1, .1, .1, .1)))
R> plot(q, tpdens[[1]], type = "n", ylim = range(unlist(pdens)),
+       xlab = "Waiting times", ylab = "Density")
R> tmp <- sapply(tpdens, function(x) lines(q, x, col = rgb(.1, .1, .1, .1)))
R> 
R> ## ----variables-factor----------------------------------------------------
R> f_eye <- factor_var("eye", desc = "eye color", 
+                      levels = c("blue", "brown", "green", "grey", "mixed"))
R> 
R> ## ----variables-factor-methods--------------------------------------------
R> variable.names(f_eye)
[1] "eye"
R> desc(f_eye)
[1] "eye color"
R> variables::unit(f_eye)
[1] NA
R> support(f_eye)
$eye
[1] blue  brown green grey  mixed
Levels: blue brown green grey mixed

R> bounds(f_eye)
$eye
[1] NA

R> is.bounded(f_eye)
[1] TRUE
R> 
R> ## ----variables-factor-mkgrid---------------------------------------------
R> mkgrid(f_eye)
$eye
[1] blue  brown green grey  mixed
Levels: blue brown green grey mixed

R> 
R> ## ----variables-ordered---------------------------------------------------
R> o_temp <- ordered_var("temp", desc = "temperature", 
+                        levels = c("cold", "lukewarm", "warm", "hot"))
R> 
R> ## ----variables-ordered-methods-------------------------------------------
R> variable.names(o_temp)
[1] "temp"
R> desc(o_temp)
[1] "temperature"
R> variables::unit(o_temp)
[1] NA
R> support(o_temp)
$temp
[1] cold     lukewarm warm     hot     
Levels: cold < lukewarm < warm < hot

R> bounds(o_temp) 
$temp
[1] cold hot 
Levels: cold < lukewarm < warm < hot

R> is.bounded(o_temp)
[1] TRUE
R> mkgrid(o_temp)
$temp
[1] cold     lukewarm warm     hot     
Levels: cold < lukewarm < warm < hot

R> 
R> ## ----variables-fd--------------------------------------------------------
R> v_age <- numeric_var("age", desc = "age of patient", 
+                       unit = "years", support = 25:75)
R> 
R> ## ----variables-fd-methods------------------------------------------------
R> variable.names(v_age)
[1] "age"
R> desc(v_age)
[1] "age of patient"
R> variables::unit(v_age)
[1] "years"
R> support(v_age)
$age
 [1] 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
[24] 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
[47] 71 72 73 74 75

R> bounds(v_age) 
$age
[1] 25 75

R> is.bounded(v_age)
[1] TRUE
R> 
R> ## ----variables-fd-mkgrid-------------------------------------------------
R> mkgrid(v_age)
$age
 [1] 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
[24] 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
[47] 71 72 73 74 75

R> 
R> ## ----variables-c---------------------------------------------------------
R> v_temp <- numeric_var("ztemp", desc = "Zurich daytime temperature", 
+                        unit = "Celsius", support = c(-10.0, 35.0), 
+                        add = c(-5, 5), bounds = c(-273.15, Inf))
R> 
R> ## ----variables-c-methods-------------------------------------------------
R> variable.names(v_temp)
[1] "ztemp"
R> desc(v_temp)
[1] "Zurich daytime temperature"
R> variables::unit(v_temp)
[1] "Celsius"
R> support(v_temp)
$ztemp
[1] -10  35

R> bounds(v_temp) 
$ztemp
[1] -273.15     Inf

R> is.bounded(v_temp)
[1] TRUE
R> 
R> ## ----variables-c-mkgrid--------------------------------------------------
R> mkgrid(v_temp, n = 20)
$ztemp
 [1] -15.0000000 -12.1052632  -9.2105263  -6.3157895  -3.4210526
 [6]  -0.5263158   2.3684211   5.2631579   8.1578947  11.0526316
[11]  13.9473684  16.8421053  19.7368421  22.6315789  25.5263158
[16]  28.4210526  31.3157895  34.2105263  37.1052632  40.0000000

R> 
R> ## ----variables-vars------------------------------------------------------
R> vars <- c(f_eye, o_temp, v_age, v_temp)
R> 
R> ## ----variables-vars-methods----------------------------------------------
R> variable.names(vars)
    eye    temp     age   ztemp 
  "eye"  "temp"   "age" "ztemp" 
R> desc(vars) 
                         eye                         temp 
                 "eye color"                "temperature" 
                         age                        ztemp 
            "age of patient" "Zurich daytime temperature" 
R> variables::unit(vars)
      eye      temp       age     ztemp 
       NA        NA   "years" "Celsius" 
R> support(vars)
$eye
[1] blue  brown green grey  mixed
Levels: blue brown green grey mixed

$temp
[1] cold     lukewarm warm     hot     
Levels: cold < lukewarm < warm < hot

$age
 [1] 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
[24] 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
[47] 71 72 73 74 75

$ztemp
[1] -10  35

R> bounds(vars)
$eye
[1] NA

$temp
[1] cold hot 
Levels: cold < lukewarm < warm < hot

$age
[1] 25 75

$ztemp
[1] -273.15     Inf

R> is.bounded(vars)
  eye  temp   age ztemp 
 TRUE  TRUE  TRUE  TRUE 
R> mkgrid(vars, n = 20)
$eye
[1] blue  brown green grey  mixed
Levels: blue brown green grey mixed

$temp
[1] cold     lukewarm warm     hot     
Levels: cold < lukewarm < warm < hot

$age
 [1] 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
[24] 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
[47] 71 72 73 74 75

$ztemp
 [1] -15.0000000 -12.1052632  -9.2105263  -6.3157895  -3.4210526
 [6]  -0.5263158   2.3684211   5.2631579   8.1578947  11.0526316
[11]  13.9473684  16.8421053  19.7368421  22.6315789  25.5263158
[16]  28.4210526  31.3157895  34.2105263  37.1052632  40.0000000

R> 
R> ## ----variables-vars-expand-----------------------------------------------
R> nd <- expand.grid(mkgrid(vars))
R> 
R> ## ----variables-check-----------------------------------------------------
R> check(vars, data = nd)
[1] TRUE
R> 
R> ## ----basefun-polynom-----------------------------------------------------
R> xvar <- numeric_var("x", support = c(0.1, pi), bounds= c(0, Inf))
R> x <- as.data.frame(mkgrid(xvar, n = 20))
R> class(pb <- polynomial_basis(xvar, coef = c(TRUE, TRUE, FALSE, TRUE)))
[1] "polynomial_basis" "basis"            "function"        
R> 
R> ## ----basefun-polynom-fun-------------------------------------------------
R> head(pb(x))
     (Intercept)         x x^2         x^3
[1,]           1 0.0000000   0 0.000000000
[2,]           1 0.1653470   0 0.004520524
[3,]           1 0.3306940   0 0.036164195
[4,]           1 0.4960409   0 0.122054158
[5,]           1 0.6613879   0 0.289313560
[6,]           1 0.8267349   0 0.565065547
R> 
R> ## ----basefun-polynom-mm--------------------------------------------------
R> head(model.matrix(pb, data = x))
     (Intercept)         x x^2         x^3
[1,]           1 0.0000000   0 0.000000000
[2,]           1 0.1653470   0 0.004520524
[3,]           1 0.3306940   0 0.036164195
[4,]           1 0.4960409   0 0.122054158
[5,]           1 0.6613879   0 0.289313560
[6,]           1 0.8267349   0 0.565065547
R> 
R> ## ----basefun-polynom-pred------------------------------------------------
R> predict(pb, newdata = x, coef = c(1, 2, 0, 1.75))
 [1]  1.000000  1.338605  1.724675  2.205677  2.829075  3.642335  4.692922
 [8]  6.028303  7.695942  9.743305 12.217857 15.167065 18.638393 22.679308
[15] 27.337274 32.659757 38.694222 45.488136 53.088963 61.544169
R> 
R> ## ----basefun-polynom-pred-deriv------------------------------------------
R> predict(pb, newdata = x, coef = c(1, 2, 0, 1.75), deriv = c(x = 1L))
 [1]  2.000000  2.143533  2.574132  3.291797  4.296528  5.588326  7.167189
 [8]  9.033118 11.186114 13.626175 16.353303 19.367496 22.668756 26.257082
[15] 30.132473 34.294931 38.744455 43.481045 48.504701 53.815423
R> 
R> ## ----basefun-log---------------------------------------------------------
R> class(lb <- log_basis(xvar, ui = "increasing"))
[1] "log_basis" "basis"     "function" 
R> head(X <- model.matrix(lb, data = x))
     (Intercept)      log(x)
[1,]           1 -36.0436534
[2,]           1  -1.7997091
[3,]           1  -1.1065619
[4,]           1  -0.7010968
[5,]           1  -0.4134147
[6,]           1  -0.1902712
R> 
R> ## ----basefun-log-constr--------------------------------------------------
R> attr(X, "constraint")
$ui
     [,1] [,2]
[1,]    0    1

$ci
[1] 0

R> 
R> ## ----basefun-log-pred----------------------------------------------------
R> predict(lb, newdata = x, coef = c(1, 2))
 [1] -71.0873068  -2.5994182  -1.2131238  -0.4021936   0.1731705
 [6]   0.6194576   0.9841008   1.2924021   1.5594649   1.7950310
[11]   2.0057520   2.1963724   2.3703951   2.5304805   2.6786965
[16]   2.8166822   2.9457593   3.0670085   3.1813253   3.2894598
R> predict(lb, newdata = x, coef = c(1, 2), deriv = c(x = 1L))
 [1] 9.007199e+15 1.209578e+01 6.047888e+00 4.031925e+00 3.023944e+00
 [6] 2.419155e+00 2.015963e+00 1.727968e+00 1.511972e+00 1.343975e+00
[11] 1.209578e+00 1.099616e+00 1.007981e+00 9.304443e-01 8.639840e-01
[16] 8.063850e-01 7.559860e-01 7.115162e-01 6.719875e-01 6.366198e-01
R> 
R> ## ----basefun-Bernstein---------------------------------------------------
R> class(bb <- Bernstein_basis(xvar, order = 3, ui = "increasing"))
[1] "Bernstein_basis" "basis"           "function"       
R> head(X <- model.matrix(bb, data = x))
        Bs1(x)      Bs2(x)      Bs3(x)       Bs4(x)
[1,] 1.0986325 -0.09863254 0.000000000 0.000000e+00
[2,] 0.9369214  0.06171364 0.001354996 9.916843e-06
[3,] 0.7892824  0.19433218 0.015949084 4.363204e-04
[4,] 0.6580299  0.29552260 0.044239941 2.207583e-03
[5,] 0.5421999  0.36817664 0.083335831 6.287617e-03
[6,] 0.4408286  0.41518604 0.130345023 1.364033e-02
R> 
R> ## ----basefun-Bernstein-constr--------------------------------------------
R> cf <- c(1, 2, 2.5, 2.6)
R> (cnstr <- attr(X, "constraint"))
$ui
3 x 4 sparse Matrix of class "dgCMatrix"
               
[1,] -1  1  . .
[2,]  . -1  1 .
[3,]  .  . -1 1

$ci
[1] 0 0 0

R> all(cnstr$ui %*% cf > cnstr$ci)
[1] TRUE
R> 
R> ## ----basefun-Bernstein-predict-------------------------------------------
R> predict(bb, newdata = x, coef = cf)
 [1] 0.9013675 1.0637620 1.2189539 1.3654146 1.5032406 1.6325281 1.7533736
 [8] 1.8658735 1.9701242 2.0662220 2.1542634 2.2343447 2.3065623 2.3710127
[15] 2.4277922 2.4769972 2.5187240 2.5530692 2.5801291 2.6000000
R> predict(bb, newdata = x, coef = cf, deriv = c(x = 1))
 [1] 0.98632537 0.96518023 0.91208351 0.85956975 0.80763896 0.75629112
 [7] 0.70552625 0.65534435 0.60574540 0.55672942 0.50829640 0.46044634
[13] 0.41317925 0.36649512 0.32039395 0.27487574 0.22994050 0.18558821
[19] 0.14181889 0.09863254
R> 
R> ## ----basefun-as.basis----------------------------------------------------
R> iv <- as.vars(iris)
R> fb <- as.basis(~ Species + Sepal.Length + Sepal.Width,  data = iv,
+                 remove_intercept = TRUE, negative = TRUE, 
+                 contrasts.args =  list(Species = "contr.sum"))
R> class(fb)
[1] "formula_basis" "basis"         "function"     
R> head(model.matrix(fb, data = iris))
  Speciesversicolor Speciesvirginica Sepal.Length Sepal.Width
1                 0                0         -5.1        -3.5
2                 0                0         -4.9        -3.0
3                 0                0         -4.7        -3.2
4                 0                0         -4.6        -3.1
5                 0                0         -5.0        -3.6
6                 0                0         -5.4        -3.9
R> 
R> ## ----basefun-c-----------------------------------------------------------
R> class(blb <- c(bern = bb, 
+                 log = log_basis(xvar, ui = "increasing", 
+                                 remove_intercept = TRUE)))
[1] "cbind_bases" "bases"      
R> head(X <- model.matrix(blb, data = x))
        Bs1(x)      Bs2(x)      Bs3(x)       Bs4(x)      log(x)
[1,] 1.0986325 -0.09863254 0.000000000 0.000000e+00 -36.0436534
[2,] 0.9369214  0.06171364 0.001354996 9.916843e-06  -1.7997091
[3,] 0.7892824  0.19433218 0.015949084 4.363204e-04  -1.1065619
[4,] 0.6580299  0.29552260 0.044239941 2.207583e-03  -0.7010968
[5,] 0.5421999  0.36817664 0.083335831 6.287617e-03  -0.4134147
[6,] 0.4408286  0.41518604 0.130345023 1.364033e-02  -0.1902712
R> attr(X, "constraint")
$ui
4 x 5 sparse Matrix of class "dgCMatrix"
                 
[1,] -1  1  . . .
[2,]  . -1  1 . .
[3,]  .  . -1 1 .
[4,]  .  .  . . 1

$ci
[1] 0 0 0 0

R> 
R> ## ----basefun-b-----------------------------------------------------------
R> fb <- as.basis(~ g, data = factor_var("g", levels = LETTERS[1:2]))
R> class(bfb <- b(bern = bb, f = fb))
[1] "box_bases" "bases"    
R> nd <- expand.grid(mkgrid(bfb, n = 10))
R> head(X <- model.matrix(bfb, data = nd))
     Bs1(x):(Intercept) Bs2(x):(Intercept) Bs3(x):(Intercept)
[1,]          1.0986325        -0.09863254         0.00000000
[2,]          0.7739072         0.20707468         0.01846902
[3,]          0.5184574         0.38073757         0.09320027
[4,]          0.3264921         0.44297161         0.20033547
[5,]          0.1889422         0.42098449         0.31266696
[6,]          0.0967384         0.34198388         0.40298705
     Bs4(x):(Intercept) Bs1(x):gB Bs2(x):gB Bs3(x):gB Bs4(x):gB
[1,]       0.0000000000         0         0         0         0
[2,]       0.0005490848         0         0         0         0
[3,]       0.0076047915         0         0         0         0
[4,]       0.0302008070         0         0         0         0
[5,]       0.0774063566         0         0         0         0
[6,]       0.1582906656         0         0         0         0
R> attr(X, "constraint")
$ui
14 x 8 sparse Matrix of class "dgCMatrix"
                           
 [1,] -1  1  . .  .  .  . .
 [2,]  . -1  1 .  .  .  . .
 [3,]  .  . -1 1  .  .  . .
 [4,]  .  .  . . -1  1  . .
 [5,]  .  .  . .  . -1  1 .
 [6,]  .  .  . .  .  . -1 1
 [7,]  1  .  . .  .  .  . .
 [8,]  .  1  . .  .  .  . .
 [9,]  .  .  1 .  .  .  . .
[10,]  .  .  . 1  .  .  . .
[11,]  .  .  . .  1  .  . .
[12,]  .  .  . .  .  1  . .
[13,]  .  .  . .  .  .  1 .
[14,]  .  .  . .  .  .  . 1

$ci
 [1]    0    0    0    0    0    0 -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf

R> 
R> ## ----basefun-b-sumconstr-------------------------------------------------
R> bfb <- b(bern = bb, f = fb, sumconstr = TRUE)
R> head(X <- model.matrix(bfb, data = nd))
     Bs1(x):(Intercept) Bs2(x):(Intercept) Bs3(x):(Intercept)
[1,]          1.0986325        -0.09863254         0.00000000
[2,]          0.7739072         0.20707468         0.01846902
[3,]          0.5184574         0.38073757         0.09320027
[4,]          0.3264921         0.44297161         0.20033547
[5,]          0.1889422         0.42098449         0.31266696
[6,]          0.0967384         0.34198388         0.40298705
     Bs4(x):(Intercept) Bs1(x):gB Bs2(x):gB Bs3(x):gB Bs4(x):gB
[1,]       0.0000000000         0         0         0         0
[2,]       0.0005490848         0         0         0         0
[3,]       0.0076047915         0         0         0         0
[4,]       0.0302008070         0         0         0         0
[5,]       0.0774063566         0         0         0         0
[6,]       0.1582906656         0         0         0         0
R> attr(X, "constraint")
$ui
6 x 8 sparse Matrix of class "dgTMatrix"
                          
[1,] -1  1  . .  .  .  . .
[2,]  . -1  1 .  .  .  . .
[3,]  .  . -1 1  .  .  . .
[4,] -1  1  . . -1  1  . .
[5,]  . -1  1 .  . -1  1 .
[6,]  .  . -1 1  .  . -1 1

$ci
[1] 0 0 0 0 0 0

R> 
R> ## ----R-ordered-----------------------------------------------------------
R> head(R(sort(unique(CHFLS$R_happy))))
[1] (NA,  1] ( 1,  2] ( 2,  3] ( 3, NA]
R> 
R> ## ----R-integer-----------------------------------------------------------
R> R(1:5, bounds = c(1, 5))
[1] (NA,  1] ( 1,  2] ( 2,  3] ( 3,  4] ( 4, NA]
R> 
R> ## ----R-numeric-----------------------------------------------------------
R> x <- rnorm(10)
R> xt <- round(x[x > -1 & x <= 2], 3)
R> xl <- xt - sample(c(Inf, (0:(length(xt) - 2)) / length(xt)), 
+                    replace = FALSE)
R> xr <- xt + sample(c(Inf, (0:(length(xt) - 2)) / length(xt)), 
+                    replace = FALSE)
R> R(c(1.2, rep(NA, length(xt))), cleft = c(NA, xl), cright = c(NA, xr), 
+    tleft = -1, tright = 2)
 [1] {1.2| (-1, 2]}                     
 [2] {( 0.1432222,  1.0321111]| (-1, 2]}
 [3] {(-1.0756667, -0.4090000]| (-1, 2]}
 [4] {(-0.1165556,        Inf]| (-1, 2]}
 [5] {(-0.9402222, -0.1624444]| (-1, 2]}
 [6] {(      -Inf,  1.0344444]| (-1, 2]}
 [7] {(-0.6343333,  0.3656667]| (-1, 2]}
 [8] {( 1.5048889,  1.9493333]| (-1, 2]}
 [9] {(-0.3340000, -0.1117778]| (-1, 2]}
[10] {(-0.3704444,  0.8517778]| (-1, 2]}
R> 
R> ## ----R-Surv--------------------------------------------------------------
R> head(geyser$duration)
[1] 4.016667        2.150000        [4.000000, Inf] [4.000000, Inf]
[5] [4.000000, Inf] [0.000000,   2]
R> head(R(geyser$duration))
[1] 4.016667  2.150000  ( 4, Inf] ( 4, Inf] ( 4, Inf] ( 0,   2]
R> 
R> ## ----mlt-chi-p-----------------------------------------------------------
R> pY <- function(x) pchisq(x, df = 20)
R> dY <- function(x) dchisq(x, df = 20)
R> qY <- function(p) qchisq(p, df = 20)
R> 
R> ## ----mlt-chi-B-----------------------------------------------------------
R> yvar <- numeric_var("y", support = qY(c(.001, 1 - .001)), 
+                      bounds = c(0, Inf))
R> By <- Bernstein_basis(yvar, order = ord <- 15, ui = "increasing")
R> 
R> ## ----mlt-chi-mlt---------------------------------------------------------
R> mod <- ctm(By)
R> 
R> ## ----mlt-chi-trafo-------------------------------------------------------
R> h <- function(x) qnorm(pY(x))
R> x <- seq(from = support(yvar)[["y"]][1], to = support(yvar)[["y"]][2], 
+           length.out = ord + 1)
R> 
R> ## ----mlt-chi-coef--------------------------------------------------------
R> mlt::coef(mod) <- h(x)
R> 
R> ## ----mlt-chi-sim---------------------------------------------------------
R> d <- as.data.frame(mkgrid(yvar, n = 500))
R> d$grid <- d$y
R> d$y <- simulate(mod, newdata = d)
R> 
R> ## ----mlt-chi-fit---------------------------------------------------------
R> fmod <- mlt(mod, data = d, scale = TRUE)
R> 
R> ## ----mlt-chi-model-------------------------------------------------------
R> coef(mod)
     Bs1(y)      Bs2(y)      Bs3(y)      Bs4(y)      Bs5(y)      Bs6(y) 
-3.09023231 -2.24395775 -1.56832579 -0.99651738 -0.49547433 -0.04621458 
     Bs7(y)      Bs8(y)      Bs9(y)     Bs10(y)     Bs11(y)     Bs12(y) 
 0.36325683  0.74104644  1.09291321  1.42310925  1.73487215  2.03072963 
    Bs13(y)     Bs14(y)     Bs15(y)     Bs16(y) 
 2.31269685  2.58240889  2.84121268  3.09023231 
R> coef(fmod)
    Bs1(y)     Bs2(y)     Bs3(y)     Bs4(y)     Bs5(y)     Bs6(y) 
-3.6264891 -1.8047059 -1.8047058 -1.6462021  0.1056733  0.1056734 
    Bs7(y)     Bs8(y)     Bs9(y)    Bs10(y)    Bs11(y)    Bs12(y) 
 0.1056734  0.6375211  1.5386218  1.5386218  1.5386219  1.5386218 
   Bs13(y)    Bs14(y)    Bs15(y)    Bs16(y) 
 2.2786435  2.5994792  2.5994794  3.5607816 
R> logLik(fmod)
'log Lik.' -1601.633 (df=16)
R> logLik(fmod, parm = coef(mod))
'log Lik.' -1605.297 (df=16)
R> 
R> ## ----mlt-chi-plot--------------------------------------------------------
R> ## compute true density
R> d$dtrue <- dY(d$grid)
R> d$dest <- predict(fmod, q = sort(d$grid), type = "density")
R> plot(mod, newdata = d, type = "density", col = "black", 
+       xlab = "y", ylab = "Density", ylim = c(0, max(d$dest)))
R> lines(d$grid, d$dtrue, lty = 2)
R> lines(sort(d$grid), d$dest[order(d$grid)], lty = 3)
R> legend("topright", lty = 1:3, bty = "n", 
+         legend = c("True", "Approximated", "Estimated"))
R> 
R> ## ----mlt-coef, echo = FALSE, results = "hide"----------------------------
R> ### print coefs for regression tests
R> objs <- ls()
R> mltobj <- objs[grep("^mlt_", objs)]
R> sapply(mltobj, function(m) eval(parse(text = paste("coef(", m, ")"))))
$mlt_BH
   Bs1(medvc)    Bs2(medvc)    Bs3(medvc)    Bs4(medvc)    Bs5(medvc) 
-11.065961212  -9.169217032  -7.492169090  -4.460820782  -4.460820782 
   Bs6(medvc)    Bs7(medvc)          crim            zn         indus 
 -3.672323293  -3.407426633   0.043695172  -0.007386482  -0.011534241 
        chas1           nox            rm           age           dis 
 -0.604227560   4.854164935  -0.485064861   0.002666899   0.313188132 
          rad           tax       ptratio             b         lstat 
 -0.079214987   0.003680147   0.223960713  -0.002630374   0.164968520 

$mlt_BHi
Bs1(medvc):(Intercept) Bs2(medvc):(Intercept) Bs3(medvc):(Intercept) 
           -12.2635117             -6.4756624             -3.7102107 
Bs4(medvc):(Intercept) Bs5(medvc):(Intercept) Bs6(medvc):(Intercept) 
             1.9309480              1.9309483              3.4256043 
Bs7(medvc):(Intercept)        Bs1(medvc):crim        Bs2(medvc):crim 
             4.0542863              3.1593072              3.7356934 
       Bs3(medvc):crim        Bs4(medvc):crim        Bs5(medvc):crim 
             3.7356946              3.7356955              3.7356956 
       Bs6(medvc):crim        Bs7(medvc):crim          Bs1(medvc):zn 
             3.7357036              3.7357097             -1.5418132 
         Bs2(medvc):zn          Bs3(medvc):zn          Bs4(medvc):zn 
            -1.3228545             -1.3228543             -1.3228542 
         Bs5(medvc):zn          Bs6(medvc):zn          Bs7(medvc):zn 
            -1.3228542             -0.9766453             -0.9766453 
      Bs1(medvc):indus       Bs2(medvc):indus       Bs3(medvc):indus 
            -0.4864715             -0.4864707             -0.3069960 
      Bs4(medvc):indus       Bs5(medvc):indus       Bs6(medvc):indus 
            -0.3069839             -0.3069827             -0.3069822 
      Bs7(medvc):indus       Bs1(medvc):chas1       Bs2(medvc):chas1 
            -0.3069822             -0.6020510             -0.6020506 
      Bs3(medvc):chas1       Bs4(medvc):chas1       Bs5(medvc):chas1 
            -0.5473012             -0.2751531             -0.2751518 
      Bs6(medvc):chas1       Bs7(medvc):chas1         Bs1(medvc):nox 
            -0.2751503             -0.2751503              2.6366611 
        Bs2(medvc):nox         Bs3(medvc):nox         Bs4(medvc):nox 
             2.6366614              2.4490731              2.4490730 
        Bs5(medvc):nox         Bs6(medvc):nox         Bs7(medvc):nox 
             2.4490730              2.4490751              2.4490751 
         Bs1(medvc):rm          Bs2(medvc):rm          Bs3(medvc):rm 
             0.0109978             -2.5125270             -2.5125272 
         Bs4(medvc):rm          Bs5(medvc):rm          Bs6(medvc):rm 
            -6.8436316             -6.8436316             -6.8436283 
         Bs7(medvc):rm         Bs1(medvc):age         Bs2(medvc):age 
            -6.8436283              1.8542256              1.8542264 
        Bs3(medvc):age         Bs4(medvc):age         Bs5(medvc):age 
             1.6572005              0.3471699              0.3471698 
        Bs6(medvc):age         Bs7(medvc):age         Bs1(medvc):dis 
            -0.1175286             -0.1175287              3.2391712 
        Bs2(medvc):dis         Bs3(medvc):dis         Bs4(medvc):dis 
             4.4415774              4.4415993              4.4416002 
        Bs5(medvc):dis         Bs6(medvc):dis         Bs7(medvc):dis 
             4.4416002              4.4416036              4.8167088 
        Bs1(medvc):rad         Bs2(medvc):rad         Bs3(medvc):rad 
            -1.0992546             -1.0992541             -3.4800768 
        Bs4(medvc):rad         Bs5(medvc):rad         Bs6(medvc):rad 
            -3.4800964             -3.4800964             -3.8218682 
        Bs7(medvc):rad         Bs1(medvc):tax         Bs2(medvc):tax 
            -3.9371667              4.5448519              2.3036318 
        Bs3(medvc):tax         Bs4(medvc):tax         Bs5(medvc):tax 
             2.3036293              2.3036286              2.3036286 
        Bs6(medvc):tax         Bs7(medvc):tax     Bs1(medvc):ptratio 
             1.6154484              1.1020649              2.1802969 
    Bs2(medvc):ptratio     Bs3(medvc):ptratio     Bs4(medvc):ptratio 
             2.1802674              2.1802552              2.1802519 
    Bs5(medvc):ptratio     Bs6(medvc):ptratio     Bs7(medvc):ptratio 
             2.1802518              2.1802482              2.1802482 
          Bs1(medvc):b           Bs2(medvc):b           Bs3(medvc):b 
            -0.5380320             -1.5611066             -0.9064252 
          Bs4(medvc):b           Bs5(medvc):b           Bs6(medvc):b 
            -0.9064252             -0.9064253             -0.9064271 
          Bs7(medvc):b       Bs1(medvc):lstat       Bs2(medvc):lstat 
            -0.9064271              5.4922733              5.4922736 
      Bs3(medvc):lstat       Bs4(medvc):lstat       Bs5(medvc):lstat 
             5.4922737              5.4922737              7.1366024 
      Bs6(medvc):lstat       Bs7(medvc):lstat 
             7.2768718              7.2768718 

$mlt_BHi2
Bs1(medvc):(Intercept) Bs2(medvc):(Intercept) Bs3(medvc):(Intercept) 
            -3.4124892             -3.4124892             -3.4124892 
Bs4(medvc):(Intercept) Bs5(medvc):(Intercept) Bs6(medvc):(Intercept) 
            -3.4124892             -3.4124892             -3.4124892 
Bs7(medvc):(Intercept)        Bs1(medvc):crim        Bs2(medvc):crim 
            -3.4124891              3.0090084              3.8308198 
       Bs3(medvc):crim        Bs4(medvc):crim        Bs5(medvc):crim 
             3.8308198              3.8308198              3.8308198 
       Bs6(medvc):crim        Bs7(medvc):crim          Bs1(medvc):zn 
             3.8308198              3.8308198             -1.3775217 
         Bs2(medvc):zn          Bs3(medvc):zn          Bs4(medvc):zn 
            -1.3702749             -1.3702749             -1.3702749 
         Bs5(medvc):zn          Bs6(medvc):zn          Bs7(medvc):zn 
            -1.3702749             -0.6258536             -0.6258536 
      Bs1(medvc):indus       Bs2(medvc):indus       Bs3(medvc):indus 
            -1.3217605             -1.3217605             -0.2232794 
      Bs4(medvc):indus       Bs5(medvc):indus       Bs6(medvc):indus 
            -0.2232794             -0.2232794             -0.2232794 
      Bs7(medvc):indus       Bs1(medvc):chas1       Bs2(medvc):chas1 
            -0.2232794             -2.0522944             -0.4636334 
      Bs3(medvc):chas1       Bs4(medvc):chas1       Bs5(medvc):chas1 
            -0.4636334             -0.4636334             -0.4636334 
      Bs6(medvc):chas1       Bs7(medvc):chas1         Bs1(medvc):nox 
            -0.4636334             -0.4636334              2.1029629 
        Bs2(medvc):nox         Bs3(medvc):nox         Bs4(medvc):nox 
             2.1029629              2.1029629              2.1029629 
        Bs5(medvc):nox         Bs6(medvc):nox         Bs7(medvc):nox 
             2.1029629              2.1029629              2.1029629 
         Bs1(medvc):rm          Bs2(medvc):rm          Bs3(medvc):rm 
            -3.1528395             -3.1528395             -3.1528395 
         Bs4(medvc):rm          Bs5(medvc):rm          Bs6(medvc):rm 
            -3.1528395             -3.1528395             -3.1528395 
         Bs7(medvc):rm         Bs1(medvc):age         Bs2(medvc):age 
            -3.1251293              0.8569801              0.8569801 
        Bs3(medvc):age         Bs4(medvc):age         Bs5(medvc):age 
             0.8569801              0.8569801              0.8569801 
        Bs6(medvc):age         Bs7(medvc):age         Bs1(medvc):dis 
             0.8569801              0.8569801            -10.3400660 
        Bs2(medvc):dis         Bs3(medvc):dis         Bs4(medvc):dis 
             4.8294890              4.8294890              4.8294890 
        Bs5(medvc):dis         Bs6(medvc):dis         Bs7(medvc):dis 
             4.8294890              4.9610542              6.9356988 
        Bs1(medvc):rad         Bs2(medvc):rad         Bs3(medvc):rad 
            -2.0069100             -2.0069100             -2.0069100 
        Bs4(medvc):rad         Bs5(medvc):rad         Bs6(medvc):rad 
            -2.0069100             -2.0069100             -2.0069100 
        Bs7(medvc):rad         Bs1(medvc):tax         Bs2(medvc):tax 
            -2.0069100              2.1529244              2.1529244 
        Bs3(medvc):tax         Bs4(medvc):tax         Bs5(medvc):tax 
             2.1529244              2.1529244              2.1529244 
        Bs6(medvc):tax         Bs7(medvc):tax     Bs1(medvc):ptratio 
             2.1529244              2.1529244              2.0308085 
    Bs2(medvc):ptratio     Bs3(medvc):ptratio     Bs4(medvc):ptratio 
             2.0308085              2.0308085              2.0308085 
    Bs5(medvc):ptratio     Bs6(medvc):ptratio     Bs7(medvc):ptratio 
             2.0308085              2.0308085              2.0308085 
          Bs1(medvc):b           Bs2(medvc):b           Bs3(medvc):b 
            -1.4671349             -1.4671349             -1.4483641 
          Bs4(medvc):b           Bs5(medvc):b           Bs6(medvc):b 
             1.8073736              1.8073736              1.8849373 
          Bs7(medvc):b       Bs1(medvc):lstat       Bs2(medvc):lstat 
             1.8849373              3.5168160              5.1775086 
      Bs3(medvc):lstat       Bs4(medvc):lstat       Bs5(medvc):lstat 
             5.1775086              7.2205477              7.2286188 
      Bs6(medvc):lstat       Bs7(medvc):lstat 
            11.4484465             11.4484465 

$mlt_CHFLS_1
 R_happy1  R_happy2  R_happy3 
-4.687404 -1.903382  1.499307 

$mlt_CHFLS_2
     R_happy1      R_happy2      R_happy3         R_age      R_income 
-4.8015792815 -2.0117030470  1.4127034214 -0.0062791500  0.0002350103 

$mlt_CHFLS_3
     R_happy1:R_healthPoor      R_happy2:R_healthPoor 
                -1.3863001                  0.4054574 
     R_happy3:R_healthPoor  R_happy1:R_healthNot good 
                 2.1971963                 -2.9368934 
 R_happy2:R_healthNot good  R_happy3:R_healthNot good 
                -0.4840557                  2.6703097 
     R_happy1:R_healthFair      R_happy2:R_healthFair 
                -4.7383883                 -1.7034664 
     R_happy3:R_healthFair      R_happy1:R_healthGood 
                 2.3537534                 -6.3647499 
     R_happy2:R_healthGood      R_happy3:R_healthGood 
                -2.5285151                  1.8365730 
R_happy1:R_healthExcellent R_happy2:R_healthExcellent 
               -16.8087573                 -2.4976449 
R_happy3:R_healthExcellent 
                 0.2468595 

$mlt_CHFLS_4
     R_happy1:R_healthPoor      R_happy2:R_healthPoor 
             -7.878334e-01               1.036896e+00 
     R_happy3:R_healthPoor  R_happy1:R_healthNot good 
              2.842218e+00              -2.346332e+00 
 R_happy2:R_healthNot good  R_happy3:R_healthNot good 
              1.151174e-01               3.288188e+00 
     R_happy1:R_healthFair      R_happy2:R_healthFair 
             -4.130466e+00              -1.084932e+00 
     R_happy3:R_healthFair      R_happy1:R_healthGood 
              3.019141e+00              -5.768581e+00 
     R_happy2:R_healthGood      R_happy3:R_healthGood 
             -1.931205e+00               2.469532e+00 
R_happy1:R_healthExcellent R_happy2:R_healthExcellent 
             -1.627857e+01              -1.932606e+00 
R_happy3:R_healthExcellent                      R_age 
              8.231066e-01               1.173870e-02 
                  R_income 
              2.492629e-04 

$mlt_CHFLS_5
      R_happy1:(Intercept)       R_happy2:(Intercept) 
                -1.3856289                  0.4059227 
      R_happy3:(Intercept)  R_happy1:R_healthNot good 
                 2.2015709                 -1.5512553 
 R_happy2:R_healthNot good  R_happy3:R_healthNot good 
                -0.8899890                  0.4686843 
     R_happy1:R_healthFair      R_happy2:R_healthFair 
                -3.3522965                 -2.1093716 
     R_happy3:R_healthFair      R_happy1:R_healthGood 
                 0.1522129                 -4.9826117 
     R_happy2:R_healthGood      R_happy3:R_healthGood 
                -2.9345159                 -0.3649683 
R_happy1:R_healthExcellent R_happy2:R_healthExcellent 
               -13.0074344                 -2.9036021 
R_happy3:R_healthExcellent 
                -1.9546731 

$mlt_CHFLS_6
   R_happy1:R_age    R_happy2:R_age    R_happy3:R_age R_happy1:R_income 
        -6.757678         -2.415284          3.020064        -47.149200 
R_happy2:R_income R_happy3:R_income 
       -17.918465          1.867982 

$mlt_CHFLS_7
      R_happy1:(Intercept)       R_happy2:(Intercept) 
                -0.8881610                  0.9376374 
      R_happy3:(Intercept)  R_happy1:R_healthNot good 
                 2.5687731                 -1.5641998 
 R_happy2:R_healthNot good  R_happy3:R_healthNot good 
                -0.9328285                  0.4470915 
     R_happy1:R_healthFair      R_happy2:R_healthFair 
                -3.2910876                 -2.0868050 
     R_happy3:R_healthFair      R_happy1:R_healthGood 
                 0.1581435                 -4.9276963 
     R_happy2:R_healthGood      R_happy3:R_healthGood 
                -2.9380331                 -0.3856781 
R_happy1:R_healthExcellent R_happy2:R_healthExcellent 
               -16.4281756                 -2.9418094 
R_happy3:R_healthExcellent             R_happy1:R_age 
                -2.0232593                 -0.5181904 
            R_happy2:R_age             R_happy3:R_age 
                -0.5181905                 -0.5181905 
         R_happy1:R_income          R_happy2:R_income 
                -6.2638922                 -5.7218897 
         R_happy3:R_income 
                -1.8011714 

$mlt_d
Bs1(duration) Bs2(duration) Bs3(duration) Bs4(duration) Bs5(duration) 
   -4.1804827    -0.5363118    -0.3758452    -0.3758452    -0.3758452 
Bs6(duration) Bs7(duration) Bs8(duration) Bs9(duration) 
   -0.3758451    -0.3758452    -0.2232097     2.0039945 

$mlt_GBSG2_1
      Bs1(y)       Bs2(y)       Bs3(y)       Bs4(y)       Bs5(y) 
-5.518462046 -1.027669099 -1.027669098 -1.027669045 -0.798157931 
      Bs6(y)       Bs7(y)       Bs8(y)       Bs9(y)      Bs10(y) 
-0.344847794 -0.344847775 -0.344847716 -0.125348943  0.288646612 
     Bs11(y)     horThyes          age menostatPost        tsize 
 0.288646683 -0.348707936 -0.009932002  0.267642672  0.007765951 
    tgrade.L     tgrade.Q       pnodes      progrec       estrec 
 0.560223057 -0.201942422  0.048761983 -0.002210539  0.000182990 

$mlt_GBSG2_2
  (Intercept)        log(y)      horThyes           age  menostatPost 
-7.8167973946  1.0000000000  0.3321613987  0.0094196279 -0.2685364805 
        tsize      tgrade.L      tgrade.Q        pnodes       progrec 
-0.0073180055 -0.5193491728  0.2139210794 -0.0461663603  0.0020671109 
       estrec 
-0.0001788297 

$mlt_GBSG2_3
  (Intercept)        log(y)      horThyes           age  menostatPost 
-1.065457e+01  1.390271e+00  3.730891e-01  9.480255e-03 -2.709161e-01 
        tsize      tgrade.L      tgrade.Q        pnodes       progrec 
-8.015296e-03 -5.727666e-01  2.050385e-01 -5.280043e-02  2.284781e-03 
       estrec 
-2.483986e-04 

$mlt_GBSG2_4
  Bs1(y):horThno   Bs2(y):horThno   Bs3(y):horThno   Bs4(y):horThno 
     -5.18145169      -0.88001649      -0.88001650      -0.88001653 
  Bs5(y):horThno   Bs6(y):horThno   Bs7(y):horThno   Bs8(y):horThno 
     -0.81270831      -0.24023157      -0.24023085      -0.24009860 
  Bs9(y):horThno  Bs10(y):horThno  Bs11(y):horThno  Bs1(y):horThyes 
     -0.09255314      -0.09255304       0.56749035      -6.02955136 
 Bs2(y):horThyes  Bs3(y):horThyes  Bs4(y):horThyes  Bs5(y):horThyes 
     -1.23942349      -1.23942334      -1.23914100      -0.99096682 
 Bs6(y):horThyes  Bs7(y):horThyes  Bs8(y):horThyes  Bs9(y):horThyes 
     -0.76049579      -0.76038676      -0.76027656      -0.15632534 
Bs10(y):horThyes Bs11(y):horThyes 
     -0.15632527      -0.15632528 

$mlt_GBSG2_5
  Bs1(y):horThno   Bs2(y):horThno   Bs3(y):horThno   Bs4(y):horThno 
   -5.1575639382    -0.8574865147    -0.8574864585    -0.8574864435 
  Bs5(y):horThno   Bs6(y):horThno   Bs7(y):horThno   Bs8(y):horThno 
   -0.7850002360    -0.2173599517    -0.2173576796    -0.2173058255 
  Bs9(y):horThno  Bs10(y):horThno  Bs11(y):horThno  Bs1(y):horThyes 
   -0.0674622523    -0.0674622490     0.5938699286    -6.0008788039 
 Bs2(y):horThyes  Bs3(y):horThyes  Bs4(y):horThyes  Bs5(y):horThyes 
   -1.2135889011    -1.2135882042    -1.2132936388    -0.9604791310 
 Bs6(y):horThyes  Bs7(y):horThyes  Bs8(y):horThyes  Bs9(y):horThyes 
   -0.7334876320    -0.7334824995    -0.7334824984    -0.1317347655 
Bs10(y):horThyes Bs11(y):horThyes              age 
   -0.1317342796    -0.1317342816    -0.0004644713 

$mlt_GBSG2_6
     Bs1(y)      Bs2(y)      Bs3(y)      Bs4(y)      Bs5(y)      Bs6(y) 
-5.29858883 -0.88356071 -0.88356079 -0.88356063 -0.73450349 -0.28814271 
     Bs7(y)      Bs8(y)      Bs9(y)     Bs10(y)     Bs11(y)    horThyes 
-0.28814276 -0.28814270 -0.09605068  0.24273199  0.24273220 -0.36655665 

$mlt_GBSG2_7
 Bs1(y):(Intercept)  Bs2(y):(Intercept)  Bs3(y):(Intercept) 
        -5.18294895         -0.88330826         -0.88330827 
 Bs4(y):(Intercept)  Bs5(y):(Intercept)  Bs6(y):(Intercept) 
        -0.88330828         -0.80464024         -0.24192394 
 Bs7(y):(Intercept)  Bs8(y):(Intercept)  Bs9(y):(Intercept) 
        -0.24192366         -0.24192359         -0.09063547 
Bs10(y):(Intercept) Bs11(y):(Intercept)     Bs1(y):horThyes 
        -0.09063373          0.56264272         -0.83958689 
    Bs2(y):horThyes     Bs3(y):horThyes     Bs4(y):horThyes 
        -0.35889908         -0.35872703         -0.35833679 
    Bs5(y):horThyes     Bs6(y):horThyes     Bs7(y):horThyes 
        -0.17709734         -0.52028493         -0.52009960 
    Bs8(y):horThyes     Bs9(y):horThyes    Bs10(y):horThyes 
        -0.52001910         -0.06555329         -0.06555499 
   Bs11(y):horThyes 
        -0.71883143 

$mlt_GBSG2_8
  Bs1(y):horThno:Bs1(age)   Bs2(y):horThno:Bs1(age) 
            -3.661718e+00              2.170447e+00 
  Bs3(y):horThno:Bs1(age)   Bs4(y):horThno:Bs1(age) 
             2.170447e+00              2.170447e+00 
  Bs5(y):horThno:Bs1(age)   Bs6(y):horThno:Bs1(age) 
             2.812512e+00              2.812512e+00 
  Bs7(y):horThno:Bs1(age)   Bs8(y):horThno:Bs1(age) 
             2.812512e+00              2.812512e+00 
  Bs9(y):horThno:Bs1(age)  Bs10(y):horThno:Bs1(age) 
             2.812512e+00              4.434989e+00 
 Bs11(y):horThno:Bs1(age)  Bs1(y):horThyes:Bs1(age) 
             4.435303e+00             -1.501710e+00 
 Bs2(y):horThyes:Bs1(age)  Bs3(y):horThyes:Bs1(age) 
            -1.478568e+00             -1.478568e+00 
 Bs4(y):horThyes:Bs1(age)  Bs5(y):horThyes:Bs1(age) 
            -1.478568e+00             -1.478568e+00 
 Bs6(y):horThyes:Bs1(age)  Bs7(y):horThyes:Bs1(age) 
            -4.170573e-01             -4.170545e-01 
 Bs8(y):horThyes:Bs1(age)  Bs9(y):horThyes:Bs1(age) 
            -4.170545e-01             -4.170545e-01 
Bs10(y):horThyes:Bs1(age) Bs11(y):horThyes:Bs1(age) 
            -4.170546e-01             -4.170546e-01 
  Bs1(y):horThno:Bs2(age)   Bs2(y):horThno:Bs2(age) 
            -4.740233e+00             -3.711580e+00 
  Bs3(y):horThno:Bs2(age)   Bs4(y):horThno:Bs2(age) 
            -3.711580e+00             -3.711580e+00 
  Bs5(y):horThno:Bs2(age)   Bs6(y):horThno:Bs2(age) 
            -3.447571e+00             -3.443647e+00 
  Bs7(y):horThno:Bs2(age)   Bs8(y):horThno:Bs2(age) 
            -3.443647e+00             -3.443646e+00 
  Bs9(y):horThno:Bs2(age)  Bs10(y):horThno:Bs2(age) 
            -3.443646e+00             -3.443630e+00 
 Bs11(y):horThno:Bs2(age)  Bs1(y):horThyes:Bs2(age) 
            -3.443500e+00             -4.570905e+00 
 Bs2(y):horThyes:Bs2(age)  Bs3(y):horThyes:Bs2(age) 
            -1.770556e+00             -1.770556e+00 
 Bs4(y):horThyes:Bs2(age)  Bs5(y):horThyes:Bs2(age) 
            -1.770556e+00             -1.770556e+00 
 Bs6(y):horThyes:Bs2(age)  Bs7(y):horThyes:Bs2(age) 
            -1.770555e+00             -1.770554e+00 
 Bs8(y):horThyes:Bs2(age)  Bs9(y):horThyes:Bs2(age) 
            -1.770547e+00             -1.766038e+00 
Bs10(y):horThyes:Bs2(age) Bs11(y):horThyes:Bs2(age) 
            -1.766038e+00             -1.766038e+00 
  Bs1(y):horThno:Bs3(age)   Bs2(y):horThno:Bs3(age) 
            -5.737003e+00              1.645290e-01 
  Bs3(y):horThno:Bs3(age)   Bs4(y):horThno:Bs3(age) 
             1.645290e-01              1.645291e-01 
  Bs5(y):horThno:Bs3(age)   Bs6(y):horThno:Bs3(age) 
             2.465938e-01              1.461050e+00 
  Bs7(y):horThno:Bs3(age)   Bs8(y):horThno:Bs3(age) 
             1.461050e+00              1.461050e+00 
  Bs9(y):horThno:Bs3(age)  Bs10(y):horThno:Bs3(age) 
             1.461050e+00              1.461050e+00 
 Bs11(y):horThno:Bs3(age)  Bs1(y):horThyes:Bs3(age) 
             1.461050e+00             -1.075990e+01 
 Bs2(y):horThyes:Bs3(age)  Bs3(y):horThyes:Bs3(age) 
            -2.446212e-03             -2.434121e-03 
 Bs4(y):horThyes:Bs3(age)  Bs5(y):horThyes:Bs3(age) 
             5.423036e-04              1.827483e-02 
 Bs6(y):horThyes:Bs3(age)  Bs7(y):horThyes:Bs3(age) 
             5.266369e-01              5.266383e-01 
 Bs8(y):horThyes:Bs3(age)  Bs9(y):horThyes:Bs3(age) 
             6.851548e-01              1.800715e+00 
Bs10(y):horThyes:Bs3(age) Bs11(y):horThyes:Bs3(age) 
             1.800715e+00              1.800715e+00 
  Bs1(y):horThno:Bs4(age)   Bs2(y):horThno:Bs4(age) 
            -6.714644e+00             -6.571119e-01 
  Bs3(y):horThno:Bs4(age)   Bs4(y):horThno:Bs4(age) 
            -6.570643e-01             -6.570643e-01 
  Bs5(y):horThno:Bs4(age)   Bs6(y):horThno:Bs4(age) 
            -6.570643e-01             -6.570643e-01 
  Bs7(y):horThno:Bs4(age)   Bs8(y):horThno:Bs4(age) 
            -6.570642e-01              1.420165e-02 
  Bs9(y):horThno:Bs4(age)  Bs10(y):horThno:Bs4(age) 
             1.420165e-02              1.420166e-02 
 Bs11(y):horThno:Bs4(age)  Bs1(y):horThyes:Bs4(age) 
             1.650553e+00             -2.588126e+00 
 Bs2(y):horThyes:Bs4(age)  Bs3(y):horThyes:Bs4(age) 
            -2.588126e+00             -2.588126e+00 
 Bs4(y):horThyes:Bs4(age)  Bs5(y):horThyes:Bs4(age) 
            -1.773253e+00             -1.773253e+00 
 Bs6(y):horThyes:Bs4(age)  Bs7(y):horThyes:Bs4(age) 
            -1.773251e+00             -1.773251e+00 
 Bs8(y):horThyes:Bs4(age)  Bs9(y):horThyes:Bs4(age) 
            -1.773232e+00             -1.246009e+00 
Bs10(y):horThyes:Bs4(age) Bs11(y):horThyes:Bs4(age) 
            -1.246009e+00             -1.246009e+00 

$mlt_head
Bs1(head):Bs1(lage) Bs2(head):Bs1(lage) Bs3(head):Bs1(lage) 
        -0.23466719          2.92754221          6.33833791 
Bs4(head):Bs1(lage) Bs1(head):Bs2(lage) Bs2(head):Bs2(lage) 
         6.33833787         -8.13644856         -5.61089517 
Bs3(head):Bs2(lage) Bs4(head):Bs2(lage) Bs1(head):Bs3(lage) 
         0.04519276          3.96560967         -0.52581856 
Bs2(head):Bs3(lage) Bs3(head):Bs3(lage) Bs4(head):Bs3(lage) 
        -0.52581740          1.66316790          3.57842925 
Bs1(head):Bs4(lage) Bs2(head):Bs4(lage) Bs3(head):Bs4(lage) 
        -6.32776250         -6.32776209         -2.39912983 
Bs4(head):Bs4(lage) 
         0.29634776 

$mlt_i
Bs1(waiting) Bs2(waiting) Bs3(waiting) Bs4(waiting) Bs5(waiting) 
   -4.398056    -0.910168    -0.458087    -0.458087    -0.458087 
Bs6(waiting) Bs7(waiting) Bs8(waiting) Bs9(waiting) 
   -0.458087     0.366581     1.955656     3.761506 

$mlt_iris
 oSpecies1:(Intercept)  oSpecies2:(Intercept) oSpecies1:Sepal.Length 
              9.021935              54.697109              -6.690417 
oSpecies2:Sepal.Length  oSpecies1:Sepal.Width  oSpecies2:Sepal.Width 
              8.872128              25.367282              15.809786 
oSpecies1:Petal.Length oSpecies2:Petal.Length  oSpecies1:Petal.Width 
            -28.795034             -55.135116             -33.512858 
 oSpecies2:Petal.Width 
            -43.290448 

$mlt_PSID1976_1
    (Intercept)           hours        nwincome       education 
  -2.4960719635    0.0011754152   -0.0001806024    0.0350875603 
     experience I(experience^2)             age       youngkids 
  -0.0853470093    0.0011091634    0.0322576068    0.5697254032 
        oldkids 
   0.1206583791 

$mlt_PSID1976_2
     Bs1(hours)      Bs2(hours)      Bs3(hours)      Bs4(hours) 
  -2.346317e+00   -1.321075e+00   -1.321075e+00    8.591752e-01 
     Bs5(hours)      Bs6(hours)      Bs7(hours)        nwincome 
   2.142930e+00    2.142930e+00    2.493904e+00   -3.192131e-05 
      education      experience I(experience^2)             age 
   3.585483e-02   -8.535643e-02    1.056934e-03    3.287872e-02 
      youngkids         oldkids 
   5.513237e-01    1.269289e-01 

$mlt_treepipit
ocounts1:Bs1(coverstorey) ocounts2:Bs1(coverstorey) 
                 1.706076                  2.173477 
ocounts3:Bs1(coverstorey) ocounts4:Bs1(coverstorey) 
                 2.173477                  3.109260 
ocounts5:Bs1(coverstorey) ocounts1:Bs2(coverstorey) 
                 4.980733                 -6.365681 
ocounts2:Bs2(coverstorey) ocounts3:Bs2(coverstorey) 
                -6.365681                 -5.552334 
ocounts4:Bs2(coverstorey) ocounts5:Bs2(coverstorey) 
                -5.552334                 -5.552334 
ocounts1:Bs3(coverstorey) ocounts2:Bs3(coverstorey) 
                12.840436                 13.113641 
ocounts3:Bs3(coverstorey) ocounts4:Bs3(coverstorey) 
                13.113641                 13.113641 
ocounts5:Bs3(coverstorey) ocounts1:Bs4(coverstorey) 
                13.113641                 -8.380348 
ocounts2:Bs4(coverstorey) ocounts3:Bs4(coverstorey) 
                -8.380348                 -8.380348 
ocounts4:Bs4(coverstorey) ocounts5:Bs4(coverstorey) 
                -8.380348                 -8.380348 
ocounts1:Bs5(coverstorey) ocounts2:Bs5(coverstorey) 
                 8.883000                  8.883000 
ocounts3:Bs5(coverstorey) ocounts4:Bs5(coverstorey) 
                13.348335                 13.348335 
ocounts5:Bs5(coverstorey) 
                13.348335 

$mlt_w
Bs1(waiting) Bs2(waiting) Bs3(waiting) Bs4(waiting) Bs5(waiting) 
  -4.8137927   -0.4972391   -0.4972391   -0.4972391   -0.4972391 
Bs6(waiting) Bs7(waiting) Bs8(waiting) Bs9(waiting) 
  -0.4972391    0.4987046    2.3184420    2.6377599 

$mlt_w_40
 Bs1(waiting)  Bs2(waiting)  Bs3(waiting)  Bs4(waiting)  Bs5(waiting) 
   -5.6834318    -2.8097951    -2.8097951    -2.8097952    -2.8097952 
 Bs6(waiting)  Bs7(waiting)  Bs8(waiting)  Bs9(waiting) Bs10(waiting) 
   -2.7562195    -0.8953223    -0.8953223    -0.8953222    -0.8953222 
Bs11(waiting) Bs12(waiting) Bs13(waiting) Bs14(waiting) Bs15(waiting) 
   -0.8953221    -0.8953221    -0.8953219    -0.5541336    -0.4344281 
Bs16(waiting) Bs17(waiting) Bs18(waiting) Bs19(waiting) Bs20(waiting) 
   -0.4344281    -0.4344281    -0.4343453    -0.3888593    -0.3888211 
Bs21(waiting) Bs22(waiting) Bs23(waiting) Bs24(waiting) Bs25(waiting) 
   -0.3888161    -0.3888161    -0.3888161    -0.3888160    -0.3888160 
Bs26(waiting) Bs27(waiting) Bs28(waiting) Bs29(waiting) Bs30(waiting) 
   -0.1406373     0.6929410     0.6929410     0.6929409     0.6929409 
Bs31(waiting) Bs32(waiting) Bs33(waiting) Bs34(waiting) Bs35(waiting) 
    0.6929409     0.6929409     1.2469536     1.6905259     1.6905259 
Bs36(waiting) Bs37(waiting) Bs38(waiting) Bs39(waiting) Bs40(waiting) 
    1.6905259     1.6905259     2.4917956     2.6824863     2.6824863 
Bs41(waiting) 
    2.7396827 

R> 
R> ## ----sessionInfo, echo = FALSE, results = "hide"-------------------------
R> sessionInfo()
R version 3.4.3 (2017-11-30)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 16.04.4 LTS

Matrix products: default
BLAS: /usr/local/lib64/R/lib/libRblas.so
LAPACK: /usr/local/lib64/R/lib/libRlapack.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=de_CH.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=de_CH.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=de_CH.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=de_CH.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] grid      tools     stats     graphics  grDevices utils     datasets 
[8] methods   base     

other attached packages:
 [1] mgcv_1.8-23         nlme_3.1-131        multcomp_1.4-8     
 [4] TH.data_1.0-8       mvtnorm_1.0-7       colorspace_1.3-2   
 [7] latticeExtra_0.6-28 RColorBrewer_1.1-2  flexsurv_1.1       
[10] sandwich_2.4-0      HSAUR3_1.0-8        nnet_7.3-12        
[13] MASS_7.3-50         gridExtra_2.3       lattice_0.20-35    
[16] truncreg_0.2-4      maxLik_1.3-4        miscTools_0.6-22   
[19] prodlim_2018.04.18  eha_2.5.1           survival_2.42-3    
[22] mlt_1.0-2           basefun_1.0-1       variables_1.0-0    

loaded via a namespace (and not attached):
 [1] Rcpp_0.12.17       compiler_3.4.3     gtable_0.2.0      
 [4] Matrix_1.2-14      polynom_1.3-9      knitr_1.20        
 [7] BB_2014.10-1       deSolve_1.21       mstate_0.2.11     
[10] orthopolynom_1.0-5 lava_1.6.1         alabama_2015.3-1  
[13] codetools_0.2-15   splines_3.4.3      numDeriv_2016.8-1 
[16] quadprog_1.5-5     coneproj_1.14      muhaz_1.2.6       
[19] zoo_1.8-1         
R> 
R> 
> proc.time()
   user  system elapsed 
142.900   7.348 150.582 
