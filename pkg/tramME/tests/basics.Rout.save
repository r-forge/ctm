
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("tramME")
Loading required package: tram
Loading required package: mlt
Loading required package: basefun
Loading required package: variables
> 
> oldopt <- options(digits = 4)
> chk <- function(x, y) stopifnot(isTRUE(all.equal(x, y)))
> chkerr <- function(expr) inherits(try(expr, silent = TRUE), "try-error")
> 
> ## nofit
> library("survival")
> data("eortc", package = "coxme")
> fit <- CoxphME(Surv(y, uncens) ~ trt, data = eortc, log_first = TRUE, nofit = TRUE)
Warning message:
In .tramME(formula, data, na.action = na.action, silent = silent,  :
  The model does not contain random effects. Falling back on tram::Coxph
> inherits(fit, "ctm")
[1] TRUE
> names(fit)
[1] "model"    "response" "todistr"  "bases"    "coef"    
> 
> ## setting parameters
> data("sleepstudy", package = "lme4")
> mod <- LmME(Reaction ~ Days + (Days | Subject), data = sleepstudy, nofit = TRUE)
> mod$fitted
[1] FALSE
> chkerr(coef(mod) <- c(1, -1, 0.5))
[1] TRUE
> chkerr(coef(mod) <- c(1, 1))
[1] TRUE
> chkerr(coef(mod) <- c(-1, 0.5, 1)) ## no error
[1] FALSE
> vc <- varcov(mod)
> vc[[1]] <- matrix(c(1, 0.2, 0.6, 2), ncol = 2)
> chkerr(varcov(mod) <- vc)
[1] TRUE
> vc[[1]] <- diag(1, 3)
> chkerr(varcov(mod) <- vc)
[1] TRUE
> vc[[1]] <- matrix(c(1, 0, 0, 2), ncol = 2)
> chkerr(varcov(mod) <- vc) ## no error
[1] FALSE
> 
> ## missing values and subsets
> ## --- when a covariate is missing
> set.seed(100)
> dat1 <- eortc
> idx <- sample(nrow(dat1), 200)
> dat1[idx, "trt"] <- NA
> dat2 <- eortc
> dat2$id <- 1
> dat2[idx, "id"] <- 0
> fit1 <- CoxphME(Surv(y, uncens) ~ trt + (1 | center), data = dat1, log_first = TRUE) ## na.omit is the default
> fit2 <- CoxphME(Surv(y, uncens) ~ trt + (1 | center), data = dat2, subset = id > 0,
+                 log_first = TRUE)
> chk(coef(fit1, with_baseline = TRUE), coef(fit2, with_baseline = TRUE))
> chk(logLik(fit1), logLik(fit2))
> ## --- when the response is missing
> dat1 <- eortc
> dat1[idx, "y"] <- NA
> fit1 <- CoxphME(Surv(y, uncens) ~ trt + (1 | center), data = dat1, log_first = TRUE) ## na.omit is the default
> chk(coef(fit1, with_baseline = TRUE), coef(fit2, with_baseline = TRUE))
> chk(logLik(fit1), logLik(fit2))
> ## --- when the RE grouping variable is missing
> dat1 <- eortc
> dat1[dat1$center <= 10, "center"] <- NA
> fit1 <- CoxphME(Surv(y, uncens) ~ trt + (1 | center), data = dat1, log_first = TRUE) ## na.omit is the default
> fit2 <- CoxphME(Surv(y, uncens) ~ trt + (1 | center), data = eortc, log_first = TRUE, subset = center > 10)
> chk(coef(fit1, with_baseline = TRUE), coef(fit2, with_baseline = TRUE))
> chk(logLik(fit1), logLik(fit2))
> ## --- other na.actions
> try(fit1 <- CoxphME(Surv(y, uncens) ~ trt + (1 | center), data = dat1,
+                     log_first = TRUE, na.action = na.fail))
Error in na.fail.default(structure(list(.index. = 1:2323, trt = c(1L,  : 
  missing values in object
> 
> ## optional parameters
> data("sleepstudy", package = "lme4")
> mod <- BoxCoxME(Reaction ~ Days + (Days | Subject), data = sleepstudy, nofit = TRUE,
+                 order = 10, log_first = TRUE)
> chk(length(coef(mod, with_baseline = TRUE)), 11+1)
> attr(mod$model$response$basis, "log_first")
[1] TRUE
> 
> ## variable names
> variable.names(fit1, which = "response")
[1] "Surv(y, uncens)"
> variable.names(fit1, which = "shifting")
[1] "trt"
> variable.names(fit1, which = "grouping")
[1] "center"
> variable.names(fit1)
[1] "Surv(y, uncens)" "trt"             "center"         
> 
> ## outputs/print methods
> fit1

Mixed-effects Parametric Cox Regression Model

	Formula: Surv(y, uncens) ~ trt + (1 | center)

	Fitted to dataset dat1

	Estimated fixed effects:
	========================

  trt 
0.748 

	Estimated random effects parameters:
	====================================

Grouping factor: center (27 levels)
Standard deviation:
(Intercept) 
      0.341 


	Log-likelihood: -9399 (df = 9)

> summary(fit1)

Mixed-effects Parametric Cox Regression Model

	Formula: Surv(y, uncens) ~ trt + (1 | center)

	Fitted to dataset [0;32mdat1[0m

	Fixed effects:
	==============

    Estimate Std. Error z value Pr(>|z|)    
trt   0.7477     0.0785    9.53   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

	Random effects:
	===============

Grouping factor: center (27 levels)
Standard deviation:
(Intercept) 
      0.341 


	Log-likelihood: -9399 (df = 9)

> mod

Non-normal (Box-Cox-Type) Linear Mixed-effects Regression Model

	Formula: Reaction ~ Days + (Days | Subject)

	Not fitted


> summary(mod)

Non-normal (Box-Cox-Type) Linear Mixed-effects Regression Model

	Formula: Reaction ~ Days + (Days | Subject)

	[0;31mNot fitted[0m

	Fixed effects:
	==============

     Estimate Std. Error z value Pr(>|z|)
Days       NA         NA      NA       NA

	Random effects:
	===============

Grouping factor: Subject (18 levels)
Standard deviation:
(Intercept)        Days 
         NA          NA 

Correlations:
     (Intercept)
Days          NA


	Log-likelihood: NA

> VarCorr(mod)

Grouping factor: Subject (18 levels)
Standard deviation:
(Intercept)        Days 
         NA          NA 

Correlations:
     (Intercept)
Days          NA

> 
> ## weights
> set.seed(100)
> dat1 <- sleepstudy
> dat1$w <- sample(10, nrow(sleepstudy), replace = TRUE)
> fit1 <- LmME(Reaction ~ Days + (Days || Subject), weights = w, data = dat1)
> dat2 <- dat1[rep(seq(nrow(dat1)), dat1$w), ]
> fit2 <- LmME(Reaction ~ Days + (Days || Subject), data = dat2)
> chk(coef(fit1, with_baseline = TRUE), coef(fit2, with_baseline = TRUE))
> chk(logLik(fit1), logLik(fit2))
> VarCorr(fit1)

Grouping factor: Subject (18 levels)
Standard deviation:
(Intercept) 
       1.23 

Grouping factor: Subject (18 levels)
Standard deviation:
 Days 
0.287 

> summary(fit1)

Mixed-effects Normal Linear Regression Model

	Formula: Reaction ~ Days + (Days || Subject)

	Fitted to dataset [0;32mdat1[0m (weighted estimation)

	Fixed effects:
	==============

     Estimate Std. Error z value Pr(>|z|)    
Days   0.4534     0.0693    6.54  6.1e-11 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

	Random effects:
	===============

Grouping factor: Subject (18 levels)
Standard deviation:
(Intercept) 
       1.23 

Grouping factor: Subject (18 levels)
Standard deviation:
 Days 
0.287 


	Log-likelihood: -4821 (df = 5)

> logLik(fit1)
'log Lik.' -4821 (df=5)
> 
> ## RE structures
> mod1 <- LmME(Reaction ~ Days + (Days || Subject), data = sleepstudy, nofit = TRUE)
> mod2 <- LmME(Reaction ~ Days + (Days | Subject), data = sleepstudy, nofit = TRUE)
> chk(lapply(varcov(mod1), dim), list(Subject = c(1L, 1L), Subject = c(1L, 1L)))
> chk(lapply(varcov(mod2), dim), list(Subject = c(2L, 2L)))
> 
> options(oldopt)
> 
> proc.time()
   user  system elapsed 
 11.175   0.097  11.247 
