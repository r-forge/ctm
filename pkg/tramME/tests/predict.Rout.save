
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("tramME")
Loading required package: tram
Loading required package: mlt
Loading required package: basefun
Loading required package: variables
> 
> chk <- function(x, y) stopifnot(isTRUE(all.equal(x, y, check.attributes = FALSE)))
> 
> ## structure of the output
> data("sleepstudy", package = "lme4")
> fit <- LmME(Reaction ~ Days + (1 | Subject), data = sleepstudy)
> nd <- sleepstudy
> nd[["Reaction"]] <- NULL
> pr <- predict(fit, newdata = nd, ranef = unlist(ranef(fit)), K = 100)
> chk(dim(pr), c(100, nrow(nd)))
> pr <- predict(fit)
> chk(length(pr), nrow(sleepstudy))
> pdf(file = NULL)
> pl <- plot(fit)
> dev.off()
null device 
          1 
> chk(dim(pl), c(50, nrow(sleepstudy)))
> 
> ## equality of predicted values
> fit <- BoxCoxME(Reaction ~ Days + (Days | Subject), data = sleepstudy)
> ## -- With predict.tramME method: for the first subject at two reaction values
> nd <- sleepstudy[4, ]
> nd[["Reaction"]] <- NULL
> pr <- predict(fit, newdata = nd, ranef = c(0.2, -0.1), q = c(300, 320), type = "distribution")
> ## -- Manually (NOTE: negative=TRUE)
> nd2 <- merge(data.frame(Reaction = c(300, 320)), nd, by = NULL)
> cf <- coef(fit, with_baseline = TRUE)
> br <- fit$model$response$basis
> bs <- fit$model$fixef$bases$shifting ## NOTE: no interacting; already w/ negative = TRUE
> re <- tramME:::.re_data(~ (Days | Subject), data = nd2, negative = TRUE)
> prtr <- predict(br, newdata = nd2, coef = cf[-length(cf)]) + predict(bs, newdata = nd2, coef = cf[length(cf)]) +
+   + Matrix::crossprod(re$Zt, c(0.2, -0.1))
> pr2 <- pnorm(as.numeric(prtr))
> chk(c(pr), pr2)
> 
> ## check "zero" option of ranef
> nd <- sleepstudy[c(4, 14, 24), ]
> pr1 <- predict(fit, newdata = nd, ranef = rep(0, 6), q = c(300, 320), type = "distribution")
> pr2 <- predict(fit, newdata = nd, ranef = "zero", q = c(300, 320), type = "distribution")
> chk(pr1, pr2)
> 
> ## Prediction with Surv objects as response
> data("eortc", package = "coxme")
> library("survival")
> fit <- CoxphME(Surv(y, uncens) ~ trt + (1 | center/trt), data = eortc, log_first = TRUE)
> pdf(file = NULL)
> pl <- plot(fit, newdata = eortc[1, ], ranef = c(0, 0), type = "survivor", K = 100)
> dev.off()
null device 
          1 
> chk(dim(pl), c(100, 1))
> 
> ## model w/o shift terms
> fit <- BoxCoxME(Reaction ~ 1 + (1 | Subject), data = sleepstudy)
> nd <- sleepstudy
> nd$Reaction <- NULL
> pr <- predict(fit, newdata = nd[1:2, ], ranef = 0, K = 10)
> pr
        
Reaction         [,1]         [,2]
     194 -4.037372700 -4.037372700
     225 -2.331029343 -2.331029343
     255 -0.860354397 -0.860354397
     285  0.001082589  0.001082589
     315  0.592066654  0.592066654
     345  1.117778380  1.117778380
     376  1.682865469  1.682865469
     406  2.223053663  2.223053663
     436  2.763241857  2.763241857
     466  3.303430051  3.303430051
> 
> proc.time()
   user  system elapsed 
  4.256   0.099   4.344 
