
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # Tests for COLR models
> 
> ## Depencies
> library("tramnet")
Loading required package: tram
Loading required package: mlt
Loading required package: basefun
Loading required package: variables
Loading required package: CVXR

Attaching package: 'CVXR'

The following object is masked from 'package:stats':

    power

Loading required package: mlrMBO
Loading required package: mlr
Loading required package: ParamHelpers
Loading required package: smoof
Loading required package: BBmisc

Attaching package: 'BBmisc'

The following object is masked from 'package:base':

    isFALSE

Loading required package: checkmate
> library("survival")
> library("sandwich")
> options(digits = 4)
> 
> ## Exact and Right censored
> data("GBSG2", package = "TH.data")
> GBSG2$surv <- with(GBSG2, Surv(time, cens))
> x <- matrix(1 * (GBSG2$horTh == "yes"), ncol = 1)
> colnames(x) <- "horTh"
> 
> yCOLR <- Colr(surv ~ 1, data = GBSG2, log_first = TRUE, order = 10)
> modCOLR <- tramnet(yCOLR, x, lambda = 0, alpha = 0)
> yCOLRb <- Colr(surv ~ horTh, data = GBSG2, log_first = TRUE, order = 10)
> max(abs(coef(yCOLRb, with_baseline = FALSE) -
+         coef(modCOLR, with_baseline = FALSE)))
[1] 0.0002981
> logLik(yCOLRb)
'log Lik.' -2606 (df=12)
> logLik(modCOLR)
'log Lik.' -2606 (df=NA)
> -modCOLR$result$value
[1] -2606
> logLik(modCOLR, newdata = tramnet:::.get_tramnet_data(modCOLR)[1:10, ])
'log Lik.' -58.96 (df=NA)
> 
> ## methods
> coef(modCOLR, tol = 0, with_baseline = TRUE)
 Bs1(surv)  Bs2(surv)  Bs3(surv)  Bs4(surv)  Bs5(surv)  Bs6(surv)  Bs7(surv) 
  -2.10487   -1.63286   -1.32655   -0.67519   -0.67519   -0.67519   -0.09560 
 Bs8(surv)  Bs9(surv) Bs10(surv) Bs11(surv)      horTh 
  -0.01956   -0.01956    0.46503    0.95694   -0.47951 
> logLik(modCOLR)
'log Lik.' -2606 (df=NA)
> resid(modCOLR)[1:10]
 [1]  0.09361 -0.06443 -0.60494 -0.14745 -0.38459 -0.71567  0.50139  0.61660
 [9] -0.68787  0.58592
> predict(modCOLR, type = "distribution", q = 1)[, 1:10]
 [1] 4.922e-08 3.047e-08 3.047e-08 3.047e-08 4.922e-08 4.922e-08 3.047e-08
 [8] 4.922e-08 4.922e-08 4.922e-08
> predict(modCOLR, type = "quantile", prob = 0.5)[, 1:10]
 [1] 1561 2166 2166 2166 1561 1561 2166 1561 1561 1561
> head(simulate(modCOLR))
Response []
  Date: NULL
  Status: 
  Content-Type: <unknown>
<EMPTY BODY>
> head(estfun(modCOLR))
     Bs1(surv)  Bs2(surv)  Bs3(surv) Bs4(surv) Bs5(surv) Bs6(surv)  Bs7(surv)
[1,] 1.924e-06  6.750e-05  0.0010441  0.009308   0.05231  0.189273  0.4241672
[2,] 8.229e-08  4.316e-06  0.0001001  0.001342   0.01143  0.063517  0.2254410
[3,] 1.108e-01  3.198e-01  0.2811242 -0.108297  -0.44084 -0.432566 -0.2361064
[4,] 2.093e-06  7.235e-05  0.0011018  0.009660   0.05329  0.188429  0.4084517
[5,] 7.299e-02  2.795e-01  0.3919342  0.138432  -0.28375 -0.460490 -0.3353691
[6,] 8.862e-01 -6.615e-01 -0.6705921 -0.223535  -0.04107 -0.004751 -0.0003629
      Bs8(surv)  Bs9(surv) Bs10(surv) Bs11(surv)    horTh
[1,]  4.955e-01  3.004e-02 -6.092e-01 -4.989e-01  0.00000
[2,]  4.632e-01  3.589e-01 -4.145e-01 -7.739e-01 -0.06443
[3,] -7.996e-02 -1.678e-02 -2.012e-03 -1.057e-04 -0.60494
[4,]  4.424e-01 -5.717e-02 -6.775e-01 -5.162e-01 -0.14745
[5,] -1.442e-01 -3.768e-02 -5.569e-03 -3.589e-04  0.00000
[6,] -1.837e-05 -5.961e-07 -1.126e-08 -9.434e-11  0.00000
> plot(modCOLR, type = "survivor")
> plot(modCOLR, type = "density", K = 120)
> print(modCOLR)

Call:
tramnet(model = yCOLR, x = x, lambda = 0, alpha = 0)

Convergence:  optimal
Type:   Continuous Outcome Logistic Regression
Log-Likelihood:  -2606

Coefficients:
horTh 
-0.48 

Sparsity:  1 regression coefficients, 1 of which are non-zero 

Tuning parameters:
lambda  alpha 
     0      0 


> 
> ## left censored
> GBSG2$cens <- as.integer(GBSG2$cens)
> GBSG2$cens[GBSG2$time < 200] <- 2
> GBSG2$time[GBSG2$cens == 2] <- 100
> 
> yCOLR <- Colr(Surv(time, time, cens, type = "interval") ~ 1, data = GBSG2, log_first = TRUE, order = 10)
> modCOLR <- tramnet(yCOLR, x, lambda = 0, alpha = 0)
> yCOLRb <- Colr(Surv(time, time, cens, type = "interval") ~ horTh, data = GBSG2, log_first = TRUE, order = 10)
> max(abs(coef(yCOLRb, with_baseline = FALSE) -
+         coef(modCOLR, with_baseline = FALSE)))
[1] 4.294e-05
> logLik(yCOLRb)
'log Lik.' -2621 (df=12)
> logLik(modCOLR)
'log Lik.' -2621 (df=NA)
> 
> ## methods
> coef(modCOLR, tol = 0, with_baseline = TRUE)
 Bs1(Surv(time, time, cens, type = "interval")) 
                                       -2.01564 
 Bs2(Surv(time, time, cens, type = "interval")) 
                                       -1.86523 
 Bs3(Surv(time, time, cens, type = "interval")) 
                                       -1.06905 
 Bs4(Surv(time, time, cens, type = "interval")) 
                                       -1.02442 
 Bs5(Surv(time, time, cens, type = "interval")) 
                                       -0.53450 
 Bs6(Surv(time, time, cens, type = "interval")) 
                                       -0.53450 
 Bs7(Surv(time, time, cens, type = "interval")) 
                                       -0.29376 
 Bs8(Surv(time, time, cens, type = "interval")) 
                                        0.05462 
 Bs9(Surv(time, time, cens, type = "interval")) 
                                        0.05462 
Bs10(Surv(time, time, cens, type = "interval")) 
                                        0.39896 
Bs11(Surv(time, time, cens, type = "interval")) 
                                        1.00165 
                                          horTh 
                                       -0.44416 
> logLik(modCOLR)
'log Lik.' -2621 (df=NA)
> resid(modCOLR)[1:10]
 [1]  0.11465 -0.02872 -0.56317 -0.10908 -0.34859 -0.66446  0.51779  0.62382
 [9] -0.63626  0.59472
> predict(modCOLR, type = "distribution", q = 1)[, 1:10]
 [1] 0.001754 0.001126 0.001126 0.001126 0.001754 0.001754 0.001126 0.001754
 [9] 0.001754 0.001754
> predict(modCOLR, type = "quantile", prob = 0.5)[, 1:10]
 [1] 1499 2088 2088 2088 1499 1499 2088 1499 1499 1499
> head(simulate(modCOLR))
Response []
  Date: NULL
  Status: 
  Content-Type: <unknown>
<EMPTY BODY>
> head(estfun(modCOLR))
     Bs1(Surv(time, time, cens, type = "interval"))
[1,]                                      1.085e-06
[2,]                                      4.723e-08
[3,]                                      6.766e-02
[4,]                                      1.181e-06
[5,]                                      4.304e-02
[6,]                                      5.821e-01
     Bs2(Surv(time, time, cens, type = "interval"))
[1,]                                      4.112e-05
[2,]                                      2.661e-06
[3,]                                      2.518e-01
[4,]                                      4.412e-05
[5,]                                      2.025e-01
[6,]                                     -4.045e-02
     Bs3(Surv(time, time, cens, type = "interval"))
[1,]                                      0.0006874
[2,]                                      0.0000663
[3,]                                      0.3326984
[4,]                                      0.0007266
[5,]                                      0.3705356
[6,]                                     -0.5785674
     Bs4(Surv(time, time, cens, type = "interval"))
[1,]                                      0.0066314
[2,]                                      0.0009567
[3,]                                      0.0719880
[4,]                                      0.0068976
[5,]                                      0.2643694
[6,]                                     -0.4278858
     Bs5(Surv(time, time, cens, type = "interval"))
[1,]                                       0.040408
[2,]                                       0.008774
[3,]                                      -0.321407
[4,]                                       0.041290
[5,]                                      -0.121610
[6,]                                      -0.158094
     Bs6(Surv(time, time, cens, type = "interval"))
[1,]                                        0.15912
[2,]                                        0.05261
[3,]                                       -0.46372
[4,]                                        0.15918
[5,]                                       -0.41848
[6,]                                       -0.03574
     Bs7(Surv(time, time, cens, type = "interval"))
[1,]                                       0.391729
[2,]                                       0.202435
[3,]                                      -0.325028
[4,]                                       0.380501
[5,]                                      -0.398883
[6,]                                      -0.005268
     Bs8(Surv(time, time, cens, type = "interval"))
[1,]                                      0.5204997
[2,]                                      0.4570870
[3,]                                     -0.1366353
[4,]                                      0.4759771
[5,]                                     -0.2109837
[6,]                                     -0.0005116
     Bs9(Surv(time, time, cens, type = "interval"))
[1,]                                      1.207e-01
[2,]                                      4.231e-01
[3,]                                     -3.512e-02
[4,]                                      3.962e-02
[5,]                                     -6.647e-02
[6,]                                     -3.171e-05
     Bs10(Surv(time, time, cens, type = "interval"))
[1,]                                      -5.770e-01
[2,]                                      -3.482e-01
[3,]                                      -5.119e-03
[4,]                                      -6.462e-01
[5,]                                      -1.173e-02
[6,]                                      -1.141e-06
     Bs11(Surv(time, time, cens, type = "interval"))    horTh
[1,]                                      -5.482e-01  0.00000
[2,]                                      -8.256e-01 -0.02872
[3,]                                      -3.258e-04 -0.56317
[4,]                                      -5.671e-01 -0.10908
[5,]                                      -8.990e-04  0.00000
[6,]                                      -1.820e-08  0.00000
> plot(modCOLR, type = "survivor")
> plot(modCOLR, type = "density", K = 120)
> print(modCOLR)

Call:
tramnet(model = yCOLR, x = x, lambda = 0, alpha = 0)

Convergence:  optimal
Type:   Continuous Outcome Logistic Regression
Log-Likelihood:  -2621

Coefficients:
 horTh 
-0.444 

Sparsity:  1 regression coefficients, 1 of which are non-zero 

Tuning parameters:
lambda  alpha 
     0      0 


> 
> ## Unconditional, stratified
> yCOLR <- Colr(surv | horTh ~ 1, data = GBSG2)
> modCOLR <- tramnet(yCOLR, x = matrix(0, nrow = nrow(GBSG2)), lambda = 0, alpha = 0)
> logLik(yCOLR)
'log Lik.' -2621 (df=14)
> logLik(modCOLR)
'log Lik.' -2621 (df=NA)
> resid(modCOLR)[1:10]
 [1]  0.1078 -0.0525 -0.6240 -0.1474 -0.4002 -0.7503  0.5123  0.6228 -0.7256
[10]  0.5923
> predict(modCOLR, type = "distribution", q = 1)[, 1:10]
 [1] 0.012358 0.007415 0.007415 0.007415 0.012358 0.012358 0.007415 0.012358
 [9] 0.012358 0.012358
> predict(modCOLR, type = "quantile", prob = 0.5)[, 1:10]
 [1] 1511 2123 2123 2123 1511 1511 2123 1511 1511 1511
> head(simulate(modCOLR))
Response []
  Date: NULL
  Status: 
  Content-Type: <unknown>
<EMPTY BODY>
> head(estfun(modCOLR))
     Bs1(surv):(Intercept) Bs2(surv):(Intercept) Bs3(surv):(Intercept)
[1,]              0.025802               0.19208               0.52012
[2,]              0.004869               0.05679               0.25035
[3,]              0.223090              -0.33135              -0.36269
[4,]              0.023454               0.17020               0.44298
[5,]              0.338798              -0.15758              -0.36475
[6,]             -0.163289              -0.51948              -0.06422
     Bs4(surv):(Intercept) Bs5(surv):(Intercept) Bs6(surv):(Intercept)
[1,]              0.520921            -1.580e-01            -6.553e-01
[2,]              0.475355             1.978e-01            -5.163e-01
[3,]             -0.129124            -2.204e-02            -1.851e-03
[4,]              0.397002            -2.328e-01            -6.379e-01
[5,]             -0.174574            -3.794e-02            -3.989e-03
[6,]             -0.003226            -8.138e-05            -1.028e-06
     Bs7(surv):(Intercept) Bs1(surv):horThyes Bs2(surv):horThyes
[1,]            -3.378e-01           0.000000            0.00000
[2,]            -5.214e-01           0.004869            0.05679
[3,]            -6.172e-05           0.223090           -0.33135
[4,]            -3.103e-01           0.023454            0.17020
[5,]            -1.652e-04           0.000000            0.00000
[6,]            -5.199e-09           0.000000            0.00000
     Bs3(surv):horThyes Bs4(surv):horThyes Bs5(surv):horThyes
[1,]             0.0000             0.0000            0.00000
[2,]             0.2504             0.4754            0.19778
[3,]            -0.3627            -0.1291           -0.02204
[4,]             0.4430             0.3970           -0.23283
[5,]             0.0000             0.0000            0.00000
[6,]             0.0000             0.0000            0.00000
     Bs6(surv):horThyes Bs7(surv):horThyes
[1,]           0.000000          0.000e+00
[2,]          -0.516271         -5.214e-01
[3,]          -0.001851         -6.172e-05
[4,]          -0.637852         -3.103e-01
[5,]           0.000000          0.000e+00
[6,]           0.000000          0.000e+00
> plot(modCOLR, type = "survivor")
> plot(modCOLR, type = "density", K = 120)
> print(modCOLR)

Call:
tramnet(model = yCOLR, x = matrix(0, nrow = nrow(GBSG2)), lambda = 0, 
    alpha = 0)

Convergence:  optimal
Type:   Continuous Outcome Logistic Regression
Log-Likelihood:  -2621

Coefficients:
numeric(0)

Sparsity:  0 regression coefficients, 0 of which are non-zero 

Tuning parameters:
lambda  alpha 
     0      0 


> 
> 
> if (FALSE) {
+   ## interval censored
+   GBSG2$time2 <- GBSG2$time + 50
+   GBSG2$cens[which(GBSG2$cens == 1)[1:100]] <- 3
+ 
+   yCOLR <- Colr(Surv(time, time2, cens, type = "interval") ~ 1, data = GBSG2, log_first = TRUE, order = 10)
+   modCOLR <- tramnet(yCOLR, x, lambda = 0, alpha = 0)
+   yCOLRb <- Colr(Surv(time, time2, cens, type = "interval") ~ horTh, data = GBSG2, log_first = TRUE, order = 10)
+   max(abs(coef(yCOLRb, with_baseline = FALSE) -
+             coef(modCOLR, with_baseline = FALSE)))
+   logLik(yCOLRb)
+   logLik(modCOLR)
+ }
> 
> proc.time()
   user  system elapsed 
 18.940   0.312  19.249 
