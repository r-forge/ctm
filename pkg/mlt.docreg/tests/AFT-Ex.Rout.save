
R Under development (unstable) (2016-11-08 r71639) -- "Unsuffered Consequences"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library("mlt")
Loading required package: basefun
Loading required package: variables
> library("eha")
Loading required package: survival
> library("alabama")
Loading required package: numDeriv
> set.seed(29)
> 
> ## ************** Exponential - AFT *********************************
> 
> ### true dgp
> rY <- function(n, ...) rexp(n, ...)
> pY <- function(x, ...) pexp(x, ...)
> dY <- function(x, ...) dexp(x, ...)
> 
> gf <- gl(3, 1)
> g <- rep(gf, 100)
> y <- rY(length(g), rate = (1:nlevels(g))[g])
> mydata <- data.frame(y = y, g = g)
> 
> boxplot(y ~ g, data = mydata)
> 
> Bb <- log_basis(numeric_var("y", support = range(y)), ui = "increasing",
+                 remove_intercept = TRUE)
> Bx <- as.basis(~ g, data = mydata)
> m <- ctm(Bb, shifting = Bx, todist = "MinExtrVal")
> 
> ## Estimate coefficients
> coef(opt <- mlt(m, data = mydata, fixed = c("log(y)" = 1)))
     log(y) (Intercept)          g2          g3 
  1.0000000  -0.1230066   0.7915161   1.1190543 
> 
> coef(aft <- survreg(Surv(y, rep(TRUE, nrow(mydata))) ~ g, data = mydata,
+                     dist = "exponential"))
(Intercept)          g2          g3 
  0.1230066  -0.7915161  -1.1190543 
> 
> coef(cox <- coxph(Surv(y, rep(TRUE, nrow(mydata))) ~ g, data = mydata))
      g2       g3 
0.699808 1.022699 
> 
> coef(phreg <- phreg(Surv(y, rep(TRUE, nrow(mydata))) ~ g, data = mydata, 
+                     dist = "weibull", shape = 1))
        g2         g3 log(scale) 
 0.7915161  1.1190543  0.1230066 
> 
> ## Compare standard errors
> ## MLT
> sqrt(diag(vcov(opt)))[c("g2", "g3")]
       g2        g3 
0.1414214 0.1414214 
> ## Cox
> sqrt(diag(vcov(cox)))
       g2        g3 
0.1523056 0.1557383 
> ## phreg
> sqrt(diag(phreg$var))[c("g2", "g3")]
       g2        g3 
0.1414214 0.1414214 
> 
> ## Compare log-Likelihoods
> logLik(aft)
'log Lik.' -145.845 (df=3)
> logLik(opt)
'log Lik.' -145.845 (df=3)
> 
> 
> ## Use a Weibull-AFT for estimation (Weibull shape parameter should be nu = 1)
> 
> ## Estimate coefficients
> (cf <- coef(opt2 <- mlt(m, data = mydata)))
     log(y) (Intercept)          g2          g3 
 0.92384441 -0.07596598  0.72339973  1.02745353 
> cf[-1] / cf[1]
(Intercept)          g2          g3 
-0.08222811  0.78303199  1.11214996 
> 
> coef(aft2 <- survreg(Surv(y, rep(TRUE, nrow(mydata))) ~ g, data = mydata,
+                      dist = "weibull"))
(Intercept)          g2          g3 
  0.0822325  -0.7830360  -1.1121547 
> 
> ## Compare Weibull shape paramters
> 1 / cf[1]
  log(y) 
1.082433 
> aft2$scale
[1] 1.082433
> 
> ## Compare log-Likelihoods
> logLik(opt2)
'log Lik.' -144.2832 (df=4)
> logLik(aft2)
'log Lik.' -144.2832 (df=4)
> 
> sqrt(diag(vcov(opt2)))[c("g2", "g3")]
       g2        g3 
0.1462995 0.1502459 
> sqrt(diag(vcov(aft2)))[c("g2", "g3")]
       g2        g3 
0.1531531 0.1531334 
> 
> 
> ## *************** Right-censored
> 
> mydata <- data.frame(y = Surv(y, sample(0:1, length(y), replace = TRUE)), g = g)
> coef(opt <- mlt(m, data = mydata, fixed = c("log(y)" = 1)))
     log(y) (Intercept)          g2          g3 
  1.0000000  -0.7769336   0.7114732   0.9290106 
> 
> ## Estimate coefficients 
> coef(aft <- survreg(y ~ g, data = mydata, dist = "expo"))
(Intercept)          g2          g3 
  0.7769331  -0.7114734  -0.9290107 
> coef(cox <- coxph(y ~ g, data = mydata))
       g2        g3 
0.6417629 0.8665577 
> coef(phreg <- phreg(y ~ g, data = mydata, dist = "weibull", shape = 1))
        g2         g3 log(scale) 
 0.7114734  0.9290107  0.7769331 
> 
> ## Compare standard errors
> ## MLT
> sqrt(diag(vcov(opt)))[c("g2", "g3")]
       g2        g3 
0.2001603 0.2061228 
> ## Cox
> sqrt(diag(vcov(cox)))
       g2        g3 
0.2145765 0.2246662 
> ## phreg
> sqrt(diag(phreg$var))[c("g2", "g3")]
       g2        g3 
0.2001602 0.2061227 
> 
> 
> 
> ## ************** Left-censored
> 
> mydata <- data.frame(y = Surv(y, sample(0:1, length(y), replace = TRUE), 
+                      type = "left"), g = g)
> 
> ## Estimate coefficients
> coef(opt <- mlt(m, data = mydata,  fixed = c("log(y)" = 1)))
     log(y) (Intercept)          g2          g3 
  1.0000000   0.2539170   0.8049804   1.2275554 
> 
> coef(aft <- survreg(y ~ g, data = mydata, dist = "expo"))
(Intercept)          g2          g3 
 -0.2539170  -0.8049797  -1.2275561 
> 
> ## Compare standard errors
> ## MLT
> sqrt(diag(vcov(opt)))[c("g2", "g3")]
       g2        g3 
0.1480444 0.1489387 
> ## phreg
> sqrt(diag(phreg$var))[c("g2", "g3")]
       g2        g3 
0.2001602 0.2061227 
> 
> 
> try(coef(cox <- coxph(y ~ g, data = mydata)))
Error in coxph(y ~ g, data = mydata) : 
  Cox model doesn't support "left" survival data
> try(coef(phreg <- phreg(y ~ g, data = mydata, dist = "weibull", shape = 1)))
Error in phreg(y ~ g, data = mydata, dist = "weibull", shape = 1) : 
  This model doesn't support "left" survival data
> 
> 
> 
> ## *************** Intervall-censored
> mydata <- data.frame(y = Surv(y, y + 1, sample(0:3, length(y), replace = TRUE),
+                      type = "interval"), g = g)
> 
> coef(opt<- mlt(m, data = mydata, fixed = c("log(y)" = 1)))
     log(y) (Intercept)          g2          g3 
  1.0000000  -0.4439600   0.8668106   0.9058717 
> coef(aft <- survreg(y ~ g, data = mydata, dist = "expo"))
(Intercept)          g2          g3 
  0.4439603  -0.8668110  -0.9058720 
> 
> ## Compare standard errors
> ## MLT
> sqrt(diag(vcov(opt)))[c("g2", "g3")]
       g2        g3 
0.1658976 0.1738981 
> ## phreg
> sqrt(diag(phreg$var))[c("g2", "g3")]
       g2        g3 
0.2001602 0.2061227 
> 
> 
> try(coef(cox <- coxph(y ~ g, data = mydata)))
Error in coxph(y ~ g, data = mydata) : 
  Cox model doesn't support "interval" survival data
> try(coef(phreg <- phreg(y ~ g, data = mydata, dist = "weibull", shape = 1)))
Error in phreg(y ~ g, data = mydata, dist = "weibull", shape = 1) : 
  This model doesn't support "interval" survival data
> 
> 
> 
> 
> ## ************** Weibull - AFT *********************************
> 
> set.seed(196)
> 
> ### true dgp
> rY <- function(n, ...) rweibull(n, ...)
> pY <- function(x, ...) pweibull(x, ...)
> dY <- function(x, ...) dweibull(x, ...)
> 
> gf <- gl(3, 1)
> g <- rep(gf, 100)
> y <- rY(length(g), scale = (1:nlevels(g))[g], shape = 3)
> mydata <- data.frame(y = y, g = g)
> 
> boxplot(y ~ g, data = mydata)
> 
> Bb <- log_basis(numeric_var("y", support = range(y)), ui = "increasing", 
+                 remove_intercept = TRUE)
> Bx <- as.basis(~ g, data = mydata)
> m <- ctm(Bb, shifting = Bx, todist = "MinExtrVal")
> 
> ## Estimate coefficients
> 
> ## PH-scale
> (cf <- coef(opt <- mlt(m, data = mydata)))
     log(y) (Intercept)          g2          g3 
 3.10055012 -0.02641571 -2.12858193 -3.37418384 
> 
> (coef_cox <- coef(cox <- coxph(Surv(y, rep(TRUE, nrow(mydata))) ~ g, 
+                  	          data = mydata)))
       g2        g3 
-2.113511 -3.405349 
> 
> (coef_phreg <- coef(phreg <- phreg(Surv(y, rep(TRUE, nrow(mydata))) ~ g,
+                                    data = mydata, dist = "weibull")))
         g2          g3  log(scale)  log(shape) 
-2.12855989 -3.37407494  0.00851049  1.13153109 
> 
> ## AFT-scale
> coef(aft <- survreg(Surv(y, rep(TRUE, nrow(mydata))) ~ g, data = mydata,
+                     dist = "weibull"))
(Intercept)          g2          g3 
 0.00851049  0.68654367  1.08827090 
> 
> cf[-1] / cf[1]
 (Intercept)           g2           g3 
-0.008519685 -0.686517504 -1.088253279 
> coef_cox * aft$scale
        g2         g3 
-0.6816897 -1.0983578 
> coef_phreg[c("g2", "g3")] * aft$scale
        g2         g3 
-0.6865437 -1.0882709 
> 
> ## Compare shape parameters
> 1 / cf[1]
   log(y) 
0.3225234 
> 1 / exp(coef_phreg[c("log(shape)")])
log(shape) 
  0.322539 
> aft$scale
[1] 0.322539
> 
> ## Compare standard errors
> sqrt(diag(vcov(opt)))[c("g2", "g3")]
       g2        g3 
0.1695244 0.2038101 
> sqrt(diag(vcov(cox)))
       g2        g3 
0.1855397 0.2196354 
> sqrt(diag(phreg$var))[c("g2", "g3")]
       g2        g3 
0.1695251 0.2038084 
> 
> ## Compare log-Likelihoods
> logLik(aft)
'log Lik.' -259.0559 (df=4)
> logLik(opt)
'log Lik.' -259.0559 (df=4)
> 
> 
> ## ************************* Right-censored
> 
> mydata <- data.frame(y = Surv(y, sample(0:1, length(y), replace = TRUE)), g = g)
> 
> ## Estimate coefficients
> (cf <- coef(opt <- mlt(m, data = mydata)))
     log(y) (Intercept)          g2          g3 
  3.2532118  -0.6681301  -2.2493856  -3.4629079 
> cf[-1] / cf[1]
(Intercept)          g2          g3 
 -0.2053755  -0.6914353  -1.0644582 
> 
> coef(aft <- survreg(y ~ g, data = mydata, dist = "weibull"))
(Intercept)          g2          g3 
  0.2053755   0.6914353   1.0644582 
> 
> coef_cox <- coef(cox <- coxph(y ~ g, data = mydata))
> coef_cox * aft$scale
        g2         g3 
-0.6528209 -1.0510234 
> 
> coefs_phreg <- coef(phreg <- phreg(y ~ g, data = mydata, dist = "weibull"))
> coefs_phreg[c("g2", "g3")] * aft$scale
        g2         g3 
-0.6914353 -1.0644582 
> 
> ## Compare standard errors
> sqrt(diag(vcov(opt)))[c("g2", "g3")]
       g2        g3 
0.2330989 0.2783546 
> sqrt(diag(vcov(cox)))
       g2        g3 
0.2546303 0.3007458 
> sqrt(diag(phreg$var))[c("g2", "g3")]
       g2        g3 
0.2330989 0.2783546 
> 
> ## Compare log-Likelihoods
> logLik(opt)
'log Lik.' -234.0108 (df=4)
> logLik(aft)
'log Lik.' -234.0108 (df=4)
> 
> 
> ## ****************** Left-censored
> 
> mydata <- data.frame(y = Surv(y, sample(0:1, length(y), replace = TRUE), 
+                      type = "left"), g = g)
> 
> ## Estimate coefficients
> (cf <- coef(opt <- mlt(m, data = mydata)))
     log(y) (Intercept)          g2          g3 
  2.0678545   0.5413121  -1.4971426  -2.4559493 
> cf[-1] / cf[1]
(Intercept)          g2          g3 
  0.2617748  -0.7240077  -1.1876800 
> 
> coef(aft <- survreg(y ~ g, data = mydata, dist = "weibull"))
(Intercept)          g2          g3 
 -0.2617748   0.7240077   1.1876800 
> 
> ## Compare log-Likelihoods
> logLik(opt)
'log Lik.' -258.2656 (df=4)
> logLik(aft)
'log Lik.' -258.2656 (df=4)
> 
> 
> ## ************** Interval-censored
> 
> mydata <- data.frame(y = Surv(y, y + 1, sample(0:3, length(y), replace = TRUE),
+                      type = "interval"), g = g)
> 
> ## Estimate coefficients
> (cf <- coef(opt <- mlt(m, data = mydata)))
     log(y) (Intercept)          g2          g3 
  2.2737704  -0.4741015  -1.3075529  -2.1575728 
> cf[-1] / cf[1]
(Intercept)          g2          g3 
 -0.2085090  -0.5750593  -0.9488965 
> 
> coef(aft <- survreg(y ~ g, data = mydata, dist = "weibull"))
(Intercept)          g2          g3 
  0.2085090   0.5750594   0.9488965 
> 
> ## Compare log-Likelihoods
> logLik(opt)
'log Lik.' -303.5903 (df=4)
> logLik(aft)
'log Lik.' -303.5903 (df=4)
> 
> 
> proc.time()
   user  system elapsed 
  9.029   0.226   9.250 
