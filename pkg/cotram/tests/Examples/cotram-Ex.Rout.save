
R version 4.2.1 (2022-06-23) -- "Funny-Looking Kid"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "cotram"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> base::assign(".ExTimings", "cotram-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('cotram')
Loading required package: tram
Loading required package: mlt
Loading required package: basefun
Loading required package: variables
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("confband")
> ### * confband
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: confband
> ### Title: Confidence Bands
> ### Aliases: confband confband.cotram
> 
> ### ** Examples
> 
> 
>   op <- options(digits = 4)
> 
>   data("birds", package = "TH.data")
>   
>   ### fit count transformation model with cloglog link
>   m_birds <- cotram(SG5 ~ AOT + AFS + GST + DBH + DWC + LOG, data = birds,
+                     method = "cloglog")
>   
>   ### compute asymptotic confidence bands for the distribution function
>   ### for the first oberservation
>   confband(m_birds, newdata = birds[1, ], type = "distribution")
    q Estimate    lwr    upr
1   0   0.1493 0.0891 0.2444
1.1 1   0.3883 0.2710 0.5343
1.2 2   0.5863 0.4418 0.7371
1.3 3   0.7667 0.6227 0.8862
1.4 4   0.8930 0.7758 0.9646
1.5 5   0.9561 0.8744 0.9910
1.6 6   0.9829 0.9337 0.9978
1.7 7   0.9940 0.9642 0.9996
1.8 8   0.9981 0.9800 1.0000
1.9 9   0.9994 0.9886 1.0000
> 
>   options(op)
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("confband", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("cotram-methods")
> ### * cotram-methods
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: cotram-methods
> ### Title: Methods for Count Transformation Models
> ### Aliases: predict.cotram plot.cotram as.mlt.cotram logLik.cotram
> 
> ### ** Examples
> 
> 	
>   data("birds", package = "TH.data")
>   
>   ### fit count transformation model with cloglog link
>   m_birds <- cotram(SG5 ~ AOT + AFS + GST + DBH + DWC + LOG, data = birds,
+                     method = "cloglog")
>   logLik(m_birds)
'log Lik.' -504.3726 (df=13)
> 
>   ### classical likelihood inference
> ## IGNORE_RDIFF_BEGIN
>   summary(m_birds)

  Discrete Hazards Cox Count Transformation Model 

Call:
cotram(formula = SG5 ~ AOT + AFS + GST + DBH + DWC + LOG, data = birds, 
    method = "cloglog")

Coefficients:
      Estimate Std. Error z value Pr(>|z|)    
AOT -5.467e-03  2.263e-03  -2.415 0.015717 *  
AFS  9.397e-03  2.705e-03   3.473 0.000514 ***
GST -3.004e-04  5.043e-04  -0.596 0.551386    
DBH -4.065e-05  5.442e-03  -0.007 0.994039    
DWC  7.223e-03  5.778e-03   1.250 0.211289    
LOG -4.278e-03  2.402e-03  -1.781 0.074875 .  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Log-Likelihood:
 -504.3726 (df = 13)
Likelihood-ratio Test: Chisq = 20.08436 on 6 degrees of freedom; p = 0.002675

> ## IGNORE_RDIFF_END
> 
>   ### coefficients of the linear predictor (discrete hazard ratios)
>   exp(-coef(m_birds))
      AOT       AFS       GST       DBH       DWC       LOG 
1.0054823 0.9906471 1.0003004 1.0000407 0.9928034 1.0042873 
> 
>   ### compute predicted median along with 10% and 90% quantile for the first
>   ### three observations
>   nd <- birds[1:3,]
>   predict(m_birds, newdata = nd, type = "quantile", prob = c(.1, .5, .9), 
+           smooth = TRUE)
       
prob          [,1]       [,2]       [,3]
    0.1 0.08426339 0.07932403 0.08338537
    0.5 1.55649061 1.47866899 1.54279496
    0.9 4.07859135 3.96286368 4.05800712
> 
>   ### plot the predicted distribution for these observations
>   plot(m_birds, newdata = nd, type = "distribution",
+        col = c("skyblue", "grey", "seagreen"))
>     
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("cotram-methods", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("cotram")
> ### * cotram
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: cotram
> ### Title: Count Transformation Models
> ### Aliases: cotram
> ### Keywords: models regression
> 
> ### ** Examples
> 
> 
>   op <- options(digits = 3)
> 
>   data("birds", package = "TH.data")
>   cotram(SG5 ~ AOT + AFS + GST + DBH + DWC + LOG, data = birds)

  Discrete Odds Count Transformation Model 

Call:
cotram(formula = SG5 ~ AOT + AFS + GST + DBH + DWC + LOG, data = birds)

Coefficients:
     AOT      AFS      GST      DBH      DWC      LOG 
-0.00930  0.01743 -0.00188  0.00914  0.02082 -0.00411 

Log-Likelihood:
 -502 (df = 13)

> 
>   options(op)
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("cotram", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("mcotram")
> ### * mcotram
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: mcotram
> ### Title: Multivariate Count Conditional Transformation Models
> ### Aliases: mcotram
> ### Keywords: models
> 
> ### ** Examples
> 
> 
>   op <- options(digits = 2)
> 
>   data("spiders", package = "cotram")
> 
>   ## fit conditional marginal count transformation models
>   m_PF <- cotram(Pardosa_ferruginea ~ Elevation + Canopy_openess, 
+                  data = spiders, method = "probit")
>   m_HL <- cotram(Harpactea_lepida ~ Elevation + Canopy_openess,
+                  data = spiders, method = "probit")
>   m_CC <- cotram(Callobius_claustrarius ~ Elevation + Canopy_openess,
+                  data = spiders, method = "probit")
>   m_CT <- cotram(Coelotes_terrestris ~ Elevation + Canopy_openess,
+                  data = spiders, method = "probit")
>   m_PL <- cotram(Pardosa_lugubris ~ Elevation + Canopy_openess,
+                  data = spiders, method = "probit")
>   m_PR <- cotram(Pardosa_riparia ~ Elevation + Canopy_openess,
+                  data = spiders, method = "probit")
> 
>   ## fit multi-species count transformation model
>   ## with constant Cholesky factor of the precision matrix
>   ##
>   ## define starting values here (this is not necessary but leads
>   ## to diffs for ATLAS and OpenBlas)
>   cf1 <- c(0.415, 0.921, 0.921, 0.921, 1.257, 1.42, 1.654, 0, 0.001, 0.853,
+            1.365, 1.365, 1.365, 1.791, 2.094, 2.428, 0.002, 0, -1.219,
+            -1.218, -0.514, -0.403, -0.403, 0.078, 0.863, -0.001, 0, 0.326,
+            0.596, 0.91, 0.91, 0.91, 1.481, 2.137, -0.001, 0.001, -1.628,
+            -1.188, -1.188, -1.129, -0.434, -0.296, 0.395, 0, -0.001, -6.345,
+            -6.015, -5.291, -5.291, -5.291, -4.541, -3.554, -0.006, 0, 0.69,
+            -0.345, 0.28, -0.944, 0.787, 0.028, 0.322, -0.559, 0.263, 0.876,
+            0.006, -0.207, -0.481, -0.083, 0.161)
> 
>   m_all_1 <- mcotram(m_PF, m_HL, m_CC, m_CT, m_PL, m_PR, 
+                      theta = cf1, ## <- not really necessary, please CRAN timings
+                      formula = ~ 1, data = spiders)
> 
>   ## with covariate-dependent Cholesky factor of the precision matrix
>   cf2 <- c(1.649, 2.078, 2.078, 2.078, 2.391, 2.476, 2.694, 0.001, 0, 3.399,
+            3.862, 3.862, 3.862, 4.232, 4.593, 4.991, 0.005, -0.001, -3.646, -3.646,
+            -2.906, -2.777, -2.777, -2.256, -1.429, -0.003, 0.001, -1.257, -1.01,
+            -0.652, -0.652, -0.652, -0.093, 0.601, -0.002, 0.001, 2.294, 2.77, 2.77,
+             2.796, 3.593, 3.74, 4.473, 0.006, -0.003, -7.563, -7.173,
+            -6.384, -6.384, -6.384, -5.571, -4.509, -0.007, 0.001, -4.788,
+            0.007, -0.001, 3.914, -0.005, 0, 1.534, -0.001, 0, 1.098, -0.002,
+            -0.001, 2.196, -0.002, 0, -0.072, 0, 0, -0.222, 0.001, -0.001,
+            -2.876, 0.003, -0.001, -1.135, 0.002, -0.001, 0.07, 0.001,
+            -0.001, 3.279, -0.004, 0, -1.057, 0.001, 0, -0.953, 0.001, 0,
+            0.252, 0, 0, 2.443, -0.002, -0.001)
> 
>   m_all_2 <- mcotram(m_PF, m_HL, m_CC, m_CT, m_PL, m_PR, 
+                      theta = cf2, ## <- please CRAN timings
+                      formula = ~ Elevation + Canopy_openess, data = spiders)
> 
>   logLik(m_all_1)
'log Lik.' -2418 (df=69)
>   logLik(m_all_2)
'log Lik.' -2376 (df=99)
> 
>   ## lambda defining the Cholesky factor of the precision matrix
>   coef(m_all_1, newdata = spiders[1,], type = "Lambda")
  [,1]  [,2] [,3]  [,4] [,5]  [,6] [,7]  [,8] [,9] [,10]  [,11] [,12] [,13]
1 0.69 -0.34 0.28 -0.94 0.79 0.027 0.32 -0.56 0.26  0.88 0.0066 -0.21 -0.48
   [,14] [,15]
1 -0.083  0.16
>   coef(m_all_2, newdata = spiders[1,], type = "Lambda")
  [,1]  [,2] [,3] [,4] [,5] [,6]   [,7] [,8]  [,9] [,10] [,11] [,12] [,13]
1 -0.2 0.077 0.22 -1.2    1 0.19 -0.066 -1.1 -0.21  0.53  0.11 -0.33 -0.55
  [,14]  [,15]
1 0.033 -0.025
> 
>   ## linear correlation, ie Pearson correlation of the models after
>   ## transformation to bivariate normality
>   (r1 <- coef(m_all_1, newdata = spiders[1,], type = "Corr"))
      [,1] [,2] [,3] [,4]  [,5]  [,6]  [,7] [,8] [,9] [,10] [,11] [,12] [,13]
[1,] -0.57 0.32  0.3 -0.2 -0.35 -0.46 -0.59 0.35 0.34  0.25 -0.38  0.18 -0.68
     [,14]  [,15]
[1,]  -0.2 -0.071
>   (r2 <- coef(m_all_2, newdata = spiders[1,], type = "Corr"))
     [,1]  [,2] [,3] [,4]  [,5]  [,6]  [,7] [,8] [,9] [,10]  [,11] [,12] [,13]
[1,] 0.19 -0.11  0.7  0.1 -0.32 -0.16 -0.36 0.74  0.2  -0.1 -0.017  0.43 -0.46
     [,14] [,15]
[1,] -0.41  0.22
> 
>   options(op)
> 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("mcotram", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  5.019 0.032 5.077 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
