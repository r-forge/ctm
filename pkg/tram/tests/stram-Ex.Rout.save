
R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library("tram")
Loading required package: mlt
Loading required package: basefun
Loading required package: variables
> data("BostonHousing2", package = "mlbench")
> 
> m <- Lm(cmedv ~ nox 
+         # | rm, 
+         , data = BostonHousing2)
> 
> d <- predict(as.mlt(m), type = "density")
> ll <- sum(log(d))
> all.equal(c(logLik(m)), ll, check.attributes = FALSE)
[1] TRUE
> d1 <- predict(as.mlt(m), newdata = BostonHousing2[1:6,], type = "density")
> d2 <- diag(predict(as.mlt(m), newdata = BostonHousing2[1:6,-6], q =
+              BostonHousing2[1:6,6], type = "density"))
> all.equal(d1, d2, check.attributes = FALSE)
[1] TRUE
> prb <- 1:9 / 10
> q <- predict(as.mlt(m), newdata = BostonHousing2[1:2,-6], prob = prb,
+         type = "quantile")
> p1 <- round(predict(as.mlt(m), newdata = BostonHousing2[1:2,-6], q = q[,1], 
+         type = "distribution")[,1], 2)
> p2 <- round(predict(as.mlt(m), newdata = BostonHousing2[1:2,-6], q = q[,2], 
+         type = "distribution")[,2], 2)
> all.equal(p1, prb, check.attributes = FALSE)
[1] TRUE
> all.equal(p2, prb, check.attributes = FALSE)
[1] TRUE
> 
> m <- Lm(cmedv ~ nox 
+         | rm, 
+         , data = BostonHousing2)
> 
> d <- predict(as.mlt(m), type = "density")
> ll <- sum(log(d))
> all.equal(c(logLik(m)), ll, check.attributes = FALSE)
[1] TRUE
> d1 <- predict(as.mlt(m), newdata = BostonHousing2[1:6,], type = "density")
> d2 <- diag(predict(as.mlt(m), newdata = BostonHousing2[1:6,-6], q =
+              BostonHousing2[1:6,6], type = "density"))
> all.equal(d1, d2, check.attributes = FALSE)
[1] TRUE
> prb <- 1:9 / 10
> q <- predict(as.mlt(m), newdata = BostonHousing2[1:2,-6], prob = prb,
+         type = "quantile")
> p1 <- round(predict(as.mlt(m), newdata = BostonHousing2[1:2,-6], q = q[,1], 
+         type = "distribution")[,1], 2)
> p2 <- round(predict(as.mlt(m), newdata = BostonHousing2[1:2,-6], q = q[,2], 
+         type = "distribution")[,2], 2)
> all.equal(p1, prb, check.attributes = FALSE)
[1] TRUE
> all.equal(p2, prb, check.attributes = FALSE)
[1] TRUE
> 
> 
> proc.time()
   user  system elapsed 
  1.857   0.134   1.971 
