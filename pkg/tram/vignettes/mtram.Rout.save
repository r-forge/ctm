
> set.seed(290875)

> pkgs <- c("colorspace", "survival", "lme4", "tram", 
+     "gridExtra", "lattice", "latticeExtra", "mvtnorm", "ordinalCont", 
+     "tramME")

> pkgs <- sapply(pkgs, require, character.only = TRUE)
Loading required package: colorspace
Loading required package: survival
Loading required package: lme4
Loading required package: Matrix
Loading required package: tram
Loading required package: mlt
Loading required package: basefun
Loading required package: variables
Loading required package: mvtnorm
Loading required package: gridExtra
Loading required package: lattice
Loading required package: latticeExtra
Loading required package: ordinalCont
Loading required package: boot

Attaching package: ‘boot’

The following object is masked from ‘package:lattice’:

    melanoma

The following object is masked from ‘package:survival’:

    aml

Loading required package: splines
Loading required package: Deriv
Loading required package: tramME

> year <- substr(packageDescription("tram")$Date, 1, 
+     4)

> version <- packageDescription("tram")$Version

> if (any(!pkgs)) {
+     cat(paste("Package(s)", paste(names(pkgs)[!pkgs], collapse = ", "), 
+         "not available, stop processing.", "\\end{doc ..." ... [TRUNCATED] 

> if (!interactive() && .Platform$OS.type != "unix") {
+     cat(paste("Vignette only compiled under Unix alikes.", "\\end{document}\n"))
+     knitr: .... [TRUNCATED] 

> trellis.par.set(list(plot.symbol = list(col = 1, pch = 20, 
+     cex = 0.7), box.rectangle = list(col = 1), box.umbrella = list(lty = 1, 
+     col .... [TRUNCATED] 
Warning in trellis.par.set(list(plot.symbol = list(col = 1, pch = 20, cex = 0.7),  :
  Note: The default device has been opened to honour attempt to modify trellis settings

> ltheme <- canonical.theme(color = FALSE)

> ltheme$strip.background$col <- "transparent"

> lattice.options(default.theme = ltheme)

> knitr::opts_chunk$set(echo = TRUE, results = "markup", 
+     error = FALSE, warning = FALSE, message = FALSE, tidy = FALSE, 
+     cache = FALSE, s .... [TRUNCATED] 

> knitr::render_sweave()

> knitr::set_header(highlight = "")

> options(prompt = "R> ", continue = "+  ", useFancyQuotes = FALSE)

> options(width = 75)

> myprepanel <- function(x, y, f.value = NULL, ...) {
+     ans <- prepanel.default.qqmath(x, f.value = f.value, distribution = qunif)
+     with(ans, .... [TRUNCATED] 

> mypanel <- function(x, y, f.value = NULL, type = "s", 
+     groups = NULL, qtype = 7, ref = TRUE, ...) {
+     if (ref) {
+         reference.line  .... [TRUNCATED] 

> col <- diverge_hcl(2, h = c(246, 40), c = 120, l = c(65, 
+     90), alpha = 0.75)

> library("lme4")

> xyplot(Reaction ~ Days | Subject, data = sleepstudy, 
+     xlab = "Days of sleep deprivation", ylab = "Average reaction time (in ms)")

> sleep_lmer <- lmer(Reaction ~ Days + (Days | Subject), 
+     data = sleepstudy, REML = FALSE)

> library("tram")

> sleep_LM <- Lm(Reaction ~ Days, data = sleepstudy)

> sleep_LMmer <- mtram(sleep_LM, ~(Days | Subject), 
+     data = sleepstudy)

> logLik(sleep_lmer)
'log Lik.' -875.9697 (df=6)

> logLik(sleep_LMmer)
'log Lik.' -875.9697 (df=6)

> (sdinv <- 1/summary(sleep_lmer)$sigma)
[1] 0.03907485

> coef(sleep_LMmer)["Reaction"]
  Reaction 
0.03908086 

> fixef(sleep_lmer) * c(-1, 1) * sdinv
(Intercept)        Days 
 -9.8236175   0.4090077 

> coef(sleep_LMmer)[c("(Intercept)", "Days")]
(Intercept)        Days 
 -9.8252286   0.4091449 

> sleep_lmer@theta
[1] 0.92919061 0.01816575 0.22264321

> coef(sleep_LMmer)[-(1:3)]
    gamma1     gamma2     gamma3 
0.92896850 0.01792155 0.22290416 

> sleep_LMmer$G * (1/sdinv)^2
         [,1]     [,2]
[1,] 565.2067 10.90390
[2,]  10.9039 32.75216

> cov2cor(sleep_LMmer$G * (1/sdinv)^2)
           [,1]       [,2]
[1,] 1.00000000 0.08014162
[2,] 0.08014162 1.00000000

> unclass(VarCorr(sleep_lmer))$Subject
            (Intercept)     Days
(Intercept)   565.47697 11.05512
Days           11.05512 32.68179
attr(,"stddev")
(Intercept)        Days 
  23.779760    5.716799 
attr(,"correlation")
            (Intercept)       Days
(Intercept)  1.00000000 0.08132109
Days         0.08132109 1.00000000

> library("survival")

> sleepstudy$Reaction_I <- with(sleepstudy, Surv(Reaction - 
+     20, Reaction + 20, type = "interval2"))

> sleepstudy$Reaction_I[1:5]
[1] [229.5600, 269.5600] [238.7047, 278.7047] [230.8006, 270.8006]
[4] [301.4398, 341.4398] [336.8519, 376.8519]

> sleep_LM_I <- Lm(Reaction_I ~ Days, data = sleepstudy)

> sleep_LMmer_I <- mtram(sleep_LM_I, ~(Days | Subject), 
+     data = sleepstudy)

> logLik(sleep_LMmer_I)
'log Lik.' -213.4053 (df=6)

> coef(sleep_LMmer_I)
  (Intercept)    Reaction_I          Days        gamma1        gamma2 
-10.658245919   0.042214155   0.453828174   0.963560216   0.008524802 
       gamma3 
  0.237131485 

> coef(sleep_LMmer)
(Intercept)    Reaction        Days      gamma1      gamma2      gamma3 
-9.82522859  0.03908086  0.40914489  0.92896850  0.01792155  0.22290416 

> sleep_BC <- BoxCox(Reaction ~ Days, data = sleepstudy)

> sleep_BCmer <- mtram(sleep_BC, ~(Days | Subject), 
+     data = sleepstudy)

> logLik(sleep_BCmer)
'log Lik.' -859.5455 (df=11)

> tmp <- as.mlt(sleep_BC)

> cf <- coef(tmp)

> coef(tmp) <- coef(sleep_BCmer)[names(cf)]

> plot(tmp, newdata = data.frame(Days = 0), type = "trafo", 
+     col = "black", xlab = "Average reaction time (in ms)", ylab = expression(h(y)))

> rug(sleepstudy$Reaction, col = rgb(0.1, 0.1, 0.1, 
+     0.1))

> days <- 0:9

> q <- seq(from = min(sleepstudy$Reaction), to = max(sleepstudy$Reaction), 
+     length.out = 100)

> meth <- c("Normal linear mixed-effects model", "Non-normal linear transformation model")

> ex <- expand.grid(Reaction = q, Days = days, Method = factor(meth, 
+     levels = meth, labels = meth))

> U <- cbind(1, days)

> tmp <- as.mlt(sleep_LM)

> cf <- coef(tmp)

> coef(tmp) <- coef(sleep_LMmer)[names(cf)]

> SLM <- tcrossprod(U %*% as(sleep_BCmer$G, "matrix"), 
+     U) + diag(nrow(U))

> sd <- sqrt(diag(SLM))

> h <- predict(tmp, newdata = data.frame(Days = days), 
+     q = q, type = "trafo")

> prob_LM <- pnorm(t(t(h)/sd))

> tmp <- as.mlt(sleep_BC)

> cf <- coef(tmp)

> coef(tmp) <- coef(sleep_BCmer)[names(cf)]

> SBC <- tcrossprod(U %*% as(sleep_BCmer$G, "matrix"), 
+     U) + diag(nrow(U))

> sd <- sqrt(diag(SBC))

> h <- predict(tmp, newdata = data.frame(Days = days), 
+     q = q, type = "trafo")

> prob_BC <- pnorm(t(t(h)/sd))

> ex$prob <- c(prob_LM, prob_BC)

> plotfun <- function(prob, data, ...) {
+     fm <- as.formula(paste(prob, "~ Reaction | Days"))
+     xyplot(fm, data = data, type = "l", panel = fu .... [TRUNCATED] 

> grey <- rgb(0.75, 0.75, 0.75)

> nd <- ex

> plotfun("prob", ex, layout = c(5, 2), par.settings = simpleTheme(col = c(grey, 
+     col), lwd = 3), auto.key = list(text = c("Empirical cumulative ..." ... [TRUNCATED] 

> cov2cor(sleep_BCmer$G)
           [,1]       [,2]
[1,]  1.0000000 -0.1946338
[2,] -0.1946338  1.0000000

> library("mvtnorm")

> VC <- vcov(sleep_BCmer)

> idx <- (nrow(VC) - 2):nrow(VC)

> Rcoef <- rmvnorm(1000, mean = coef(sleep_BCmer), sigma = VC)[, 
+     idx]

> ret <- apply(Rcoef, 1, function(gamma) {
+     L <- matrix(c(gamma[1:2], 0, gamma[3]), nrow = 2)
+     V <- tcrossprod(L)
+     c(diag(V), cov2cor(V .... [TRUNCATED] 

> quantile(ret[1, ], c(0.025, 0.5, 0.975))
     2.5%       50%     97.5% 
0.8231869 2.5743472 5.2170115 

> quantile(ret[2, ], c(0.025, 0.5, 0.975))
      2.5%        50%      97.5% 
0.01696440 0.05198142 0.11156854 

> quantile(ret[3, ], c(0.025, 0.5, 0.975))
      2.5%        50%      97.5% 
-0.6379678 -0.1825300  0.4110025 

> sleep_C <- Colr(Reaction ~ Days, data = sleepstudy)

> sleep_Cmer <- mtram(sleep_C, ~(Days | Subject), data = sleepstudy)

> logLik(sleep_Cmer)
'log Lik.' -860.6377 (df=11)

> days <- 0:9

> q <- seq(from = min(sleepstudy$Reaction), to = max(sleepstudy$Reaction), 
+     length.out = 100)

> meth <- c("Normal linear mixed-effects model", "Probit transformation model", 
+     "Marginal logit transformation model")

> ex <- expand.grid(Reaction = q, Days = days, Method = factor(meth, 
+     levels = meth, labels = meth))

> U <- cbind(1, days)

> tmp <- as.mlt(sleep_LM)

> cf <- coef(tmp)

> coef(tmp) <- coef(sleep_LMmer)[names(cf)]

> SLM <- tcrossprod(U %*% as(sleep_BCmer$G, "matrix"), 
+     U) + diag(nrow(U))

> sd <- sqrt(diag(SLM))

> h <- predict(tmp, newdata = data.frame(Days = days), 
+     q = q, type = "trafo")

> prob_LM <- pnorm(t(t(h)/sd))

> tmp <- as.mlt(sleep_BC)

> cf <- coef(tmp)

> coef(tmp) <- coef(sleep_BCmer)[names(cf)]

> SBC <- tcrossprod(U %*% as(sleep_BCmer$G, "matrix"), 
+     U) + diag(nrow(U))

> sd <- sqrt(diag(SBC))

> h <- predict(tmp, newdata = data.frame(Days = days), 
+     q = q, type = "trafo")

> prob_BC <- pnorm(t(t(h)/sd))

> tmp <- as.mlt(sleep_C)

> cf <- coef(tmp)

> coef(tmp) <- coef(sleep_Cmer)[names(cf)]

> SBC <- tcrossprod(U %*% as(sleep_Cmer$G, "matrix"), 
+     U) + diag(nrow(U))

> sd <- sqrt(diag(SBC))

> h <- predict(tmp, newdata = data.frame(Days = days), 
+     q = q, type = "trafo")

> prob_C <- plogis(t(t(h)/sd))

> ex$prob <- c(prob_LM, prob_BC, prob_C)

> plotfun <- function(prob, data, ...) {
+     fm <- as.formula(paste(prob, "~ Reaction | Days"))
+     xyplot(fm, data = data, type = "l", panel = fu .... [TRUNCATED] 

> grey <- rgb(0.75, 0.75, 0.75)

> nd <- ex

> plotfun("prob", ex, layout = c(5, 2), par.settings = simpleTheme(col = c(grey, 
+     col, col[2]), lwd = 3, lty = c(1, 1, 1, 3)), auto.key = list(t .... [TRUNCATED] 

> data("toenail", package = "HSAUR3")

> layout(matrix(1:2, ncol = 2))

> trt <- levels(toenail$treatment)

> cdplot(outcome ~ time, data = subset(toenail, treatment == 
+     trt[1]), main = trt[1], xlab = "Time", ylab = "Toe nail infection")

> cdplot(outcome ~ time, data = subset(toenail, treatment == 
+     trt[2]), main = trt[2], xlab = "Time", ylab = "")

> toenail_glmer_RI_1 <- glmer(outcome ~ treatment * 
+     time + (1 | patientID), data = toenail, family = binomial(link = "probit"), 
+     nAGQ = 1 .... [TRUNCATED] 

> summary(toenail_glmer_RI_1)
Generalized linear mixed model fit by maximum likelihood (Laplace
  Approximation) [glmerMod]
 Family: binomial  ( probit )
Formula: outcome ~ treatment * time + (1 | patientID)
   Data: toenail

      AIC       BIC    logLik -2*log(L)  df.resid 
   1286.1    1313.9    -638.1    1276.1      1903 

Scaled residuals: 
   Min     1Q Median     3Q    Max 
-3.519 -0.017 -0.004  0.000 54.237 

Random effects:
 Groups    Name        Variance Std.Dev.
 patientID (Intercept) 20.93    4.575   
Number of obs: 1908, groups:  patientID, 294

Fixed effects:
                          Estimate Std. Error z value Pr(>|z|)    
(Intercept)               -3.39483    0.21921 -15.487   <2e-16 ***
treatmentterbinafine      -0.02874    0.25202  -0.114   0.9092    
time                      -0.21797    0.02257  -9.657   <2e-16 ***
treatmentterbinafine:time -0.07135    0.03425  -2.083   0.0372 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Correlation of Fixed Effects:
            (Intr) trtmnt time  
trtmnttrbnf -0.591              
time        -0.008  0.099       
trtmnttrbn:  0.093 -0.141 -0.630

> toenail_glmer_RI_1@theta
[1] 4.57486

> toenail_glmer_RI_2 <- glmer(outcome ~ treatment * 
+     time + (1 | patientID), data = toenail, family = binomial(link = "probit"), 
+     nAGQ = 2 .... [TRUNCATED] 

> summary(toenail_glmer_RI_2)
Generalized linear mixed model fit by maximum likelihood (Adaptive
  Gauss-Hermite Quadrature, nAGQ = 20) [glmerMod]
 Family: binomial  ( probit )
Formula: outcome ~ treatment * time + (1 | patientID)
   Data: toenail

      AIC       BIC    logLik -2*log(L)  df.resid 
   1284.6    1312.3    -637.3    1274.6      1903 

Scaled residuals: 
   Min     1Q Median     3Q    Max 
-2.857 -0.191 -0.078 -0.001 33.862 

Random effects:
 Groups    Name        Variance Std.Dev.
 patientID (Intercept) 4.486    2.118   
Number of obs: 1908, groups:  patientID, 294

Fixed effects:
                          Estimate Std. Error z value Pr(>|z|)    
(Intercept)               -0.91050    0.22880  -3.980  6.9e-05 ***
treatmentterbinafine      -0.10726    0.30730  -0.349    0.727    
time                      -0.19128    0.02058  -9.293  < 2e-16 ***
treatmentterbinafine:time -0.06331    0.03098  -2.044    0.041 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Correlation of Fixed Effects:
            (Intr) trtmnt time  
trtmnttrbnf -0.650              
time        -0.185  0.212       
trtmnttrbn:  0.192 -0.285 -0.611

> toenail_glmer_RI_2@theta
[1] 2.117954

> library("glmmTMB")

> toenail_glmmTMB_RI_3 <- glmmTMB(outcome ~ treatment * 
+     time + (1 | patientID), data = toenail, family = binomial(link = "probit"))

> summary(toenail_glmmTMB_RI_3)
 Family: binomial  ( probit )
Formula:          outcome ~ treatment * time + (1 | patientID)
Data: toenail

      AIC       BIC    logLik -2*log(L)  df.resid 
   1298.1    1325.9    -644.0    1288.1      1903 

Random effects:

Conditional model:
 Groups    Name        Variance Std.Dev.
 patientID (Intercept) 4.417    2.102   
Number of obs: 1908, groups:  patientID, 294

Conditional model:
                          Estimate Std. Error z value Pr(>|z|)    
(Intercept)               -1.10073    0.32274  -3.411 0.000648 ***
treatmentterbinafine      -0.17391    0.35387  -0.491 0.623101    
time                      -0.18933    0.02073  -9.134  < 2e-16 ***
treatmentterbinafine:time -0.06106    0.03093  -1.974 0.048340 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

> m <- ctm(as.basis(~outcome, data = toenail), shifting = ~treatment * 
+     time, data = toenail, todistr = "Normal", negative = TRUE)

> toenail_probit <- mlt(m, data = toenail, fixed = c(`outcomemoderate or severe` = 0))

> toenail_mtram_RI <- mtram(toenail_probit, ~(1 | patientID), 
+     data = toenail)

> coef(toenail_mtram_RI)
              (Intercept)      treatmentterbinafine 
               0.91008159               -0.10710388 
                     time treatmentterbinafine:time 
              -0.19125241               -0.06331944 
                   gamma1 
               2.11701418 

> vcov(toenail_glmer_RI_2)
4 x 4 Matrix of class "dpoMatrix"
                            (Intercept) treatmentterbinafine          time
(Intercept)                0.0523476843         -0.045690768 -0.0008721303
treatmentterbinafine      -0.0456907682          0.094430590  0.0013397965
time                      -0.0008721303          0.001339797  0.0004236654
treatmentterbinafine:time  0.0013600467         -0.002716134 -0.0003893867
                          treatmentterbinafine:time
(Intercept)                            0.0013600467
treatmentterbinafine                  -0.0027161344
time                                  -0.0003893867
treatmentterbinafine:time              0.0009595152

> vcov(toenail_mtram_RI)[1:4, 1:4]
                            (Intercept) treatmentterbinafine          time
(Intercept)                0.0522671032          0.045693346  0.0008720033
treatmentterbinafine       0.0456933463          0.094460326  0.0013347660
time                       0.0008720033          0.001334766  0.0004235916
treatmentterbinafine:time -0.0013559040         -0.002708974 -0.0003895272
                          treatmentterbinafine:time
(Intercept)                           -0.0013559040
treatmentterbinafine                  -0.0027089745
time                                  -0.0003895272
treatmentterbinafine:time              0.0009597717

> cf <- coef(toenail_mtram_RI)

> cf[2:4]/sqrt(1 + cf["gamma1"]^2)
     treatmentterbinafine                      time 
              -0.04574521               -0.08168594 
treatmentterbinafine:time 
              -0.02704441 

> library("geepack")

> gin <- geeglm(I((0:1)[outcome]) ~ treatment * time, 
+     id = patientID, data = toenail, corstr = "independence", 
+     family = binomial(link =  .... [TRUNCATED] 

> gex <- geeglm(I((0:1)[outcome]) ~ treatment * time, 
+     id = patientID, data = toenail, cor = "exchangeable", family = binomial(link = "probit"))

> gun <- geeglm(I((0:1)[outcome]) ~ treatment * time, 
+     id = patientID, data = toenail, cor = "unstructured", family = binomial(link = "probit"))

> cbind(mtram = cf[2:4]/sqrt(1 + cf["gamma1"]^2), indep = coef(gin)[-1], 
+     excha = coef(gex)[-1], unstr = coef(gun)[-1])
                                mtram       indep       excha       unstr
treatmentterbinafine      -0.04574521 -0.01100164 -0.01476371  0.01635082
time                      -0.08168594 -0.09278168 -0.09289552 -0.06893793
treatmentterbinafine:time -0.02704441 -0.03198835 -0.03717801 -0.04468491

> gin <- geeglm(I((0:1)[outcome]) ~ treatment * time, 
+     id = patientID, data = toenail, corstr = "independence", 
+     family = binomial())

> gex <- geeglm(I((0:1)[outcome]) ~ treatment * time, 
+     id = patientID, data = toenail, cor = "exchangeable", family = binomial())

> gun <- geeglm(I((0:1)[outcome]) ~ treatment * time, 
+     id = patientID, data = toenail, cor = "unstructured", family = binomial())

> coef(gin)
              (Intercept)      treatmentterbinafine 
            -0.5566272539             -0.0005816551 
                     time treatmentterbinafine:time 
            -0.1703077912             -0.0672216238 

> coef(gex)
              (Intercept)      treatmentterbinafine 
             -0.581922602               0.007180366 
                     time treatmentterbinafine:time 
             -0.171280029              -0.077733152 

> coef(gun)
              (Intercept)      treatmentterbinafine 
              -0.73961933                0.03730057 
                     time treatmentterbinafine:time 
              -0.13189562               -0.08960660 

> m <- ctm(as.basis(~outcome, data = toenail), shifting = ~treatment * 
+     time, data = toenail, todistr = "Logistic", negative = TRUE)

> toenail_logit <- mlt(m, data = toenail, fixed = c(`outcomemoderate or severe` = 0))

> toenail_mtram_logit <- mtram(toenail_logit, ~(1 | 
+     patientID), data = toenail)

> cf <- coef(toenail_mtram_logit)

> cf[2:4]/sqrt(1 + cf["gamma1"]^2)
     treatmentterbinafine                      time 
              -0.05943863               -0.14916330 
treatmentterbinafine:time 
              -0.05914692 

> S <- rmvnorm(10000, mean = coef(toenail_mtram_logit), 
+     sigma = vcov(toenail_mtram_logit))

> (ci <- quantile(S[, "treatmentterbinafine:time"]/sqrt(1 + 
+     S[, "gamma1"]^2), prob = c(0.025, 0.975)))
       2.5%       97.5% 
-0.11296704 -0.00630125 

> cbind(mtram = cf[2:4]/sqrt(1 + cf["gamma1"]^2), indep = coef(gin)[-1], 
+     excha = coef(gex)[-1], unstr = coef(gun)[-1])
                                mtram         indep        excha
treatmentterbinafine      -0.05943863 -0.0005816551  0.007180366
time                      -0.14916330 -0.1703077912 -0.171280029
treatmentterbinafine:time -0.05914692 -0.0672216238 -0.077733152
                                unstr
treatmentterbinafine       0.03730057
time                      -0.13189562
treatmentterbinafine:time -0.08960660

> exp(coef(gun)["treatmentterbinafine:time"] + c(-1, 
+     1) * qnorm(0.975) * sqrt(diag(vcov(gun)))["treatmentterbinafine:time"])
[1] 0.8318745 1.0048723

> tmp <- toenail_logit

> cf <- coef(tmp)

> cf <- cf[names(cf) != "outcomemoderate or severe"]

> sdrf <- rev(coef(toenail_mtram_logit))[1]

> cf <- coef(toenail_mtram_logit)[names(cf)]/sqrt(sdrf^2 + 
+     1)

> cf <- c(cf[1], `outcomemoderate or severe` = 0, cf[-1])

> coef(tmp) <- cf

> time <- 0:180/10

> treatment <- sort(unique(toenail$treatment))

> nd <- expand.grid(time = time, treatment = treatment)

> nd$prob_logit <- predict(tmp, newdata = nd, type = "distribution")[1, 
+     ]

> nd$odds <- exp(predict(tmp, newdata = nd, type = "trafo")[1, 
+     ])

> X <- model.matrix(~treatment * time, data = nd)

> rbeta <- rmvnorm(10000, mean = coef(toenail_mtram_logit), 
+     sigma = vcov(toenail_mtram_logit))

> s <- rbeta[, ncol(rbeta)]

> rbeta <- rbeta[, -ncol(rbeta)]/sqrt(s^2 + 1)

> odds <- exp(-X %*% t(rbeta))

> OR <- odds[1:length(time), ]/odds[-(1:length(time)), 
+     ]

> plot(time, rep(0, length(time)), ylim = range(OR), 
+     type = "n", xlab = "Time", ylab = "Odds ratio")

> colgrey <- rgb(0.1, 0.1, 0.1, 0.01)

> out <- apply(OR, 2, function(x) lines(time, x, col = colgrey))

> ORest <- nd$odds[1:length(time)]/nd$odds[-(1:length(time))]

> lines(time, ORest, col = col[1], lwd = 2)

> tmp <- toenail_logit

> cf <- coef(tmp)

> cf <- cf[names(cf) != "outcomemoderate or severe"]

> sdrf <- rev(coef(toenail_mtram_logit))[1]

> cf <- coef(toenail_mtram_logit)[names(cf)]

> cf <- c(cf[1], `outcomemoderate or severe` = 0, cf[-1])

> coef(tmp) <- cf

> pr <- predict(tmp, newdata = nd, type = "distribution")[1, 
+     ]

> nd$prob_logit <- pnorm(qnorm(pr)/sdrf)

> tmp <- toenail_probit

> cf <- coef(tmp)

> cf <- cf[names(cf) != "outcomemoderate or severe"]

> sdrf <- rev(coef(toenail_mtram_RI))[1]

> cf <- coef(toenail_mtram_RI)[names(cf)]/sqrt(sdrf^2 + 
+     1)

> cf <- c(cf[1], `outcomemoderate or severe` = 0, cf[-1])

> coef(tmp) <- cf

> nd$prob_probit <- predict(tmp, newdata = nd, type = "distribution")[1, 
+     ]

> nd2 <- nd[rep(1:nrow(nd), 2), ]

> nd2$prob <- c(nd$prob_probit, nd$prob_logit)

> lev <- c("Probit", "Logit")

> nd2$model <- rep(factor(lev, labels = lev, levels = lev), 
+     each = nrow(nd))

> xyplot(prob ~ time | model, data = nd2, group = treatment, 
+     ylim = c(0, 1), xlab = "Time", par.settings = simpleTheme(col = col), 
+     auto. .... [TRUNCATED] 

> data("neck_pain", package = "ordinalCont")

> pain_df <- neck_pain

> idt <- xtabs(~id, data = pain_df)

> miss <- names(idt)[idt < 3]

> pain_df <- subset(pain_df, !id %in% miss)

> pain_df$id <- factor(pain_df$id)

> levels(pain_df$laser) <- c("Placebo", "Active")

> levels(pain_df$time) <- c("Baseline", "7 weeks", "12 weeks")

> pain <- rbind(subset(pain_df, laser == levels(pain_df$laser)[1]), 
+     subset(pain_df, laser == levels(pain_df$laser)[2]))

> p1 <- xyplot(vas ~ time | laser, data = pain, groups = id, 
+     type = "l", col = rgb(0.1, 0.1, 0.1, 0.1), lwd = 2, layout = c(2, 
+         1), y .... [TRUNCATED] 

> plot(p1)

> library("ordinalCont")

> neck_ocm <- ocm(vas ~ laser * time + (1 | id), data = pain_df, 
+     scale = c(0, 1))
Ext.iters	Int.iters	lambda				Convergence (<0.01)
1 		 19 		 0.0001049346 0.4680693 		 1.0001 1.4681 		 
2 		 9 		 0.0001578678 0.2517747 		 0.5044 0.4621 		 
3 		 12 		 0.0001750753 0.1606074 		 0.109 0.3621 		 
4 		 26 		 0.0001880323 0.1194356 		 0.074 0.2564 		 
5 		 13 		 0.000186145 0.1010497 		 0.01 0.1539 		 
6 		 8 		 0.0001814009 0.09335728 		 0.0255 0.0761 		 
7 		 6 		 0.000178035 0.08972454 		 0.0186 0.0389 		 
8 		 5 		 0.0001756494 0.0877903 		 0.0134 0.0216 		 
9 		 3 		 0.0001743548 0.0868759 		 0.0074 0.0104 		 
10 		 2 		 0.0001735541 0.08638227 		 0.0046 0.0057 		 

> summary(neck_ocm)
Call:
ocm(formula = vas ~ laser * time + (1 | id), data = pain_df, 
    scale = c(0, 1))

Random effects:
         Name Variance Std.Dev.
 Intercept|id    5.755    2.399

Coefficients:
                         Estimate   StdErr t.value   p.value    
laserActive              -2.07922  0.65055 -3.1961  0.001918 ** 
time7 weeks              -0.60366  0.35744 -1.6889  0.094689 .  
time12 weeks             -0.23804  0.36365 -0.6546  0.514395    
laserActive:time7 weeks   4.40817  0.56073  7.8615 7.604e-12 ***
laserActive:time12 weeks  3.38593  0.53925  6.2790 1.159e-08 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

> exp(cbind(coef(neck_ocm)[2:6], confint(neck_ocm)[2:6, 
+     ]))
                                          2.5 %      97.5 %
laserActive               0.1250278  0.03493482   0.4474608
time7 weeks               0.5468040  0.27137954   1.1017581
time12 weeks              0.7881704  0.38643700   1.6075391
laserActive:time7 weeks  82.1194073 27.36208405 246.4577275
laserActive:time12 weeks 29.5454666 10.26785879  85.0162253

> library("tramME")

> neck_ColrME <- ColrME(vas ~ laser * time + (1 | id), 
+     data = pain_df, bounds = c(0, 1), support = c(0, 1))

> exp(coef(neck_ColrME))
             laserActive              time7 weeks             time12 weeks 
               0.1040042                0.5184702                0.7806349 
 laserActive:time7 weeks laserActive:time12 weeks 
             130.6997515               41.9851549 

> neck_Colr <- Colr(vas ~ laser * time, data = pain_df, 
+     bounds = c(0, 1), support = c(0, 1), extrapolate = TRUE)

> neck_Colrmer <- mtram(neck_Colr, ~(1 | id), data = pain_df)

> nd <- expand.grid(laser = unique(pain_df$laser), time = unique(pain_df$time))

> tmp <- as.mlt(neck_Colr)

> coef(tmp)[] <- coef(neck_Colrmer)[1:12]

> q <- 1:99/100

> nd2 <- expand.grid(vas = q, laser = unique(pain_df$laser), 
+     time = unique(pain_df$time))

> sd <- sqrt(coef(neck_Colrmer)[13]^2 + 1)

> prb <- predict(tmp, newdata = nd, type = "distribution", 
+     q = q)

> nd2$prob <- c(pnorm(qnorm(prb)/sd))

> p2 <- xyplot(prob ~ vas | time, data = nd2, groups = laser, 
+     type = "l", col = col, layout = c(3, 1), xlab = "Neck pain (on visual analog scal ..." ... [TRUNCATED] 

> plot(p2)

> S <- vcov(neck_Colrmer)

> rbeta <- rmvnorm(10000, mean = coef(neck_Colrmer), 
+     sigma = S)

> s <- rbeta[, ncol(rbeta)]

> rbeta <- rbeta[, -ncol(rbeta)]/sqrt(s^2 + 1)

> t(apply(rbeta[, 8:12], 2, function(x) {
+     quantile(exp(x), prob = c(0.025, 0.5, 0.975))
+ }))
                              2.5%        50%      97.5%
laserActive              0.1136343  0.2444975  0.5149586
time7 weeks              0.4534637  0.6898295  1.0443928
time12 weeks             0.5540432  0.8534327  1.3152380
laserActive:time7 weeks  7.9314043 15.6454379 33.7752873
laserActive:time12 weeks 4.3892576  8.4367941 17.2169604

> beta <- coef(neck_Colrmer)[8:12]

> alpha <- coef(neck_Colrmer)[13]

> (std_beta <- cbind(beta/sqrt(1 + alpha^2)))
                               [,1]
laserActive              -1.4103256
time7 weeks              -0.3700969
time12 weeks             -0.1603120
laserActive:time7 weeks   2.7556741
laserActive:time12 weeks  2.1411193

> ctr_mat <- matrix(c(1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 
+     1, 0, 0, 0, 1), nrow = 3, byrow = TRUE)

> ctr_mat %*% std_beta
           [,1]
[1,] -1.4103256
[2,]  1.3453485
[3,]  0.7307938

> (ci_emp <- t(apply(ctr_mat %*% t(rbeta[, 8:12]), 1, 
+     function(x) {
+         quantile(x, prob = c(0.025, 0.5, 0.975))
+     })))
           2.5%        50%      97.5%
[1,] -2.1747698 -1.4085503 -0.6636688
[2,]  0.6001684  1.3460249  2.1439143
[3,] -0.0272141  0.7305299  1.5064512

> PI(-ci_emp, link = "logistic")
          2.5%       50%     97.5%
[1,] 0.8136473 0.7202646 0.6090127
[2,] 0.4011577 0.2883843 0.1896415
[3,] 0.5045356 0.3803704 0.2664870

> nd <- expand.grid(time = unique(pain_df$time), laser = unique(pain_df$laser))

> neck_Colr_marg <- neck_Colr

> neck_Colr_marg$coef <- coef(neck_Colrmer)[1:12]/sqrt(coef(neck_Colrmer)[13]^2 + 
+     1)

> (neck_Colr_PI <- PI(neck_Colr_marg, newdata = nd[1:3, 
+     ], reference = nd[4:6, ], one2one = TRUE, conf.level = 0.95))[1:3, 
+     1:3]
     Estimate       lwr       upr
4-1 0.7205080 0.5840648 0.8277773
5-2 0.2884786 0.1749473 0.4327294
6-3 0.3803287 0.2446178 0.5354260

> dir <- system.file("rda", package = "TH.data")

> load(file.path(dir, "Primary_endpoint_data.rda"))

> ra <- sort(unique(CAOsurv$randarm))

> st <- sort(unique(CAOsurv$strat_t))

> sn <- sort(unique(CAOsurv$strat_n))

> su <- c(1, 1700)

> add <- c(0, max(CAOsurv$iDFS[, "time2"]) - su[2])

> ylim <- c(-0.05, 1.05)

> tmp <- as.mlt(Coxph(iDFS | 0 + strat_n:strat_t:randarm ~ 
+     1, data = CAOsurv, support = su, add = add, log_first = TRUE))

> nd <- expand.grid(strat_n = sn, strat_t = st, randarm = ra)

> q <- mkgrid(tmp, 100)[[1]]

> surv <- predict(tmp, newdata = nd, type = "survivor", 
+     q = q)

> nd <- nd[rep(1:nrow(nd), each = nrow(surv)), ]

> nd$time <- q

> nd$surv <- c(surv)

> xyplot(surv ~ time | strat_t + strat_n, data = nd, 
+     groups = randarm, type = "l", ylim = c(0, 1), col = col, 
+     ylab = "Probability", xlab .... [TRUNCATED] 

> tmp <- CAOsurv$iDFS

> exact <- tmp[, 3] == 1

> tmp[exact, 2] <- tmp[exact, 1] + 2

> tmp[exact, 1] <- pmax(tmp[exact, 1] - 2, 0)

> tmp[exact, 3] <- 3

> CAOsurv$iDFS2 <- tmp

> CAO_SR <- Survreg(iDFS2 ~ randarm, data = CAOsurv)

> CAO_SR_mtram <- mtram(CAO_SR, ~(1 | Block), data = CAOsurv)

> logLik(CAO_SR_mtram)
'log Lik.' -2081.541 (df=4)

> (cf <- coef(CAO_SR_mtram))
              (Intercept)                log(iDFS2) 
               -6.3072094                 0.7423852 
randarm5-FU + Oxaliplatin                    gamma1 
                0.2331123                 0.1696022 

> (OR <- exp(-cf["randarm5-FU + Oxaliplatin"]/sqrt(cf["gamma1"]^2 + 
+     1)))
randarm5-FU + Oxaliplatin 
                0.7946685 

> S <- vcov(CAO_SR_mtram)

> rbeta <- rmvnorm(10000, mean = coef(CAO_SR_mtram), 
+     sigma = S)

> s <- rbeta[, ncol(rbeta)]

> rbeta <- rbeta[, -ncol(rbeta)]/sqrt(s^2 + 1)

> quantile(exp(-rbeta[, ncol(rbeta)]), prob = c(0.025, 
+     0.5, 0.975))
     2.5%       50%     97.5% 
0.6436099 0.7968730 0.9805680 

> CAO_SR_2 <- Survreg(iDFS2 | 0 + strat_n:strat_t ~ 
+     randarm, data = CAOsurv)

> CAO_SR_2_mtram <- mtram(CAO_SR_2, ~(1 | Block), data = CAOsurv)

> logLik(CAO_SR_2_mtram)
'log Lik.' -2067.794 (df=10)

> (cf <- coef(CAO_SR_2_mtram))
(Intercept):strat_ncN0:strat_tcT1-3  log(iDFS2):strat_ncN0:strat_tcT1-3 
                         -7.8971973                           0.9603566 
(Intercept):strat_ncN+:strat_tcT1-3  log(iDFS2):strat_ncN+:strat_tcT1-3 
                         -6.2305579                           0.7210080 
  (Intercept):strat_ncN0:strat_tcT4    log(iDFS2):strat_ncN0:strat_tcT4 
                         -3.0492786                           0.3715060 
  (Intercept):strat_ncN+:strat_tcT4    log(iDFS2):strat_ncN+:strat_tcT4 
                         -4.8260186                           0.6222404 
          randarm5-FU + Oxaliplatin                              gamma1 
                          0.2242830                           0.1490976 

> (OR_2 <- exp(-cf["randarm5-FU + Oxaliplatin"]/sqrt(cf["gamma1"]^2 + 
+     1)))
randarm5-FU + Oxaliplatin 
                0.8010508 

> S <- vcov(CAO_SR_2_mtram)

> rbeta <- rmvnorm(10000, mean = coef(CAO_SR_2_mtram), 
+     sigma = S)

> s <- rbeta[, ncol(rbeta)]

> rbeta <- rbeta[, -ncol(rbeta)]/sqrt(s^2 + 1)

> quantile(exp(-rbeta[, ncol(rbeta)]), prob = c(0.025, 
+     0.5, 0.975))
     2.5%       50%     97.5% 
0.6529842 0.8040055 0.9834471 

> CAO_Cox_2 <- Coxph(iDFS2 | 0 + strat_n:strat_t ~ randarm, 
+     data = CAOsurv, support = c(1, 1700), log_first = TRUE, order = 4)

> logLik(CAO_Cox_2)
'log Lik.' -2021.878 (df=21)

> CAO_Cox_2_mtram <- mtram(CAO_Cox_2, ~(1 | Block), 
+     data = CAOsurv)

> logLik(CAO_Cox_2_mtram)
'log Lik.' -2021.633 (df=22)

> coef(CAO_Cox_2_mtram)
Bs1(iDFS2):strat_ncN0:strat_tcT1-3 Bs2(iDFS2):strat_ncN0:strat_tcT1-3 
                       -68.9198590                         -3.4017279 
Bs3(iDFS2):strat_ncN0:strat_tcT1-3 Bs4(iDFS2):strat_ncN0:strat_tcT1-3 
                        -3.4008716                         -2.3298802 
Bs5(iDFS2):strat_ncN0:strat_tcT1-3 Bs1(iDFS2):strat_ncN+:strat_tcT1-3 
                        -0.7869216                        -31.2171273 
Bs2(iDFS2):strat_ncN+:strat_tcT1-3 Bs3(iDFS2):strat_ncN+:strat_tcT1-3 
                        -3.8729261                         -3.8711276 
Bs4(iDFS2):strat_ncN+:strat_tcT1-3 Bs5(iDFS2):strat_ncN+:strat_tcT1-3 
                        -1.4414211                         -0.9327611 
  Bs1(iDFS2):strat_ncN0:strat_tcT4   Bs2(iDFS2):strat_ncN0:strat_tcT4 
                        -2.7924639                         -2.7924563 
  Bs3(iDFS2):strat_ncN0:strat_tcT4   Bs4(iDFS2):strat_ncN0:strat_tcT4 
                        -1.8191229                         -0.6361198 
  Bs5(iDFS2):strat_ncN0:strat_tcT4   Bs1(iDFS2):strat_ncN+:strat_tcT4 
                        -0.3167125                        -40.8902142 
  Bs2(iDFS2):strat_ncN+:strat_tcT4   Bs3(iDFS2):strat_ncN+:strat_tcT4 
                        -2.2279587                         -2.2279584 
  Bs4(iDFS2):strat_ncN+:strat_tcT4   Bs5(iDFS2):strat_ncN+:strat_tcT4 
                        -0.3415698                         -0.3351074 
         randarm5-FU + Oxaliplatin                             gamma1 
                        -0.2364857                          0.1617533 

> S <- vcov(CAO_Cox_2_mtram)

> rbeta <- rmvnorm(10000, mean = coef(CAO_Cox_2_mtram), 
+     sigma = S)

> s <- rbeta[, ncol(rbeta)]

> rbeta <- rbeta[, -ncol(rbeta)]/sqrt(s^2 + 1)

> quantile(exp(rbeta[, ncol(rbeta)]), prob = c(0.025, 
+     0.5, 0.975))
     2.5%       50%     97.5% 
0.6423020 0.7942520 0.9729294 

> nd <- CAOsurv[1:2, ]

> tmp <- CAO_Cox_2

> tmp$coef <- coef(CAO_Cox_2_mtram)[-22]/sqrt(coef(CAO_Cox_2_mtram)[22]^2 + 
+     1)

> (CAO_Cox_PI <- PI(tmp, newdata = nd[2, ], reference = nd[1, 
+     ], one2one = TRUE, conf.level = 0.95))[1, ]
 Estimate       lwr       upr 
0.5580992 0.5061012 0.6088538 

> ci_man <- quantile(-rbeta[, ncol(rbeta)], prob = c(0.025, 
+     0.5, 0.975))

> (CAO_Cox_PIm <- PI(ci_man, link = "minimum extreme value"))
     2.5%       50%     97.5% 
0.5068605 0.5573353 0.6089014 

> CAO_Cox_2_tramME <- CoxphME(iDFS2 | 0 + strat_n:strat_t ~ 
+     randarm + (1 | Block), data = CAOsurv, log_first = TRUE)

> exp(coef(CAO_Cox_2_tramME))
randarm5-FU + Oxaliplatin 
                0.7906066 

> exp(confint(CAO_Cox_2_tramME, parm = "randarm5-FU + Oxaliplatin", 
+     estimate = TRUE))
                                lwr       upr       est
randarm5-FU + Oxaliplatin 0.6406377 0.9756823 0.7906066

> sessionInfo()
R version 4.5.1 (2025-06-13)
Platform: x86_64-pc-linux-gnu
Running under: Debian GNU/Linux 12 (bookworm)

Matrix products: default
BLAS:   /usr/local/lib/R/lib/libRblas.so 
LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.11.0  LAPACK version 3.11.0

locale:
 [1] LC_CTYPE=en_GB.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_GB.UTF-8        LC_COLLATE=C              
 [5] LC_MONETARY=en_GB.UTF-8    LC_MESSAGES=en_GB.UTF-8   
 [7] LC_PAPER=en_GB.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C       

time zone: Europe/Berlin
tzcode source: system (glibc)

attached base packages:
[1] splines   stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
 [1] geepack_1.3.12      glmmTMB_1.1.11      tramME_1.0.8       
 [4] ordinalCont_2.0.2   Deriv_4.2.0         boot_1.3-31        
 [7] latticeExtra_0.6-30 lattice_0.22-7      gridExtra_2.3      
[10] tram_1.2-4          mvtnorm_1.3-4       mlt_1.6-6          
[13] basefun_1.2-3       variables_1.1-2     lme4_1.1-37        
[16] Matrix_1.7-3        survival_3.8-3      colorspace_2.1-1   

loaded via a namespace (and not attached):
 [1] gtable_0.3.6         TMB_1.9.17           xfun_0.52           
 [4] numDeriv_2016.8-1.1  quadprog_1.5-8       vctrs_0.6.5         
 [7] tools_4.5.1          Rdpack_2.6.4         generics_0.1.4      
[10] SparseGrid_0.8.2     sandwich_3.1-1       tibble_3.3.0        
[13] coneproj_1.20        pkgconfig_2.0.3      RColorBrewer_1.1-3  
[16] alabama_2023.1.0     lifecycle_1.0.4      compiler_4.5.1      
[19] deldir_2.0-4         codetools_0.2-20     Formula_1.2-5       
[22] tidyr_1.3.1          pillar_1.11.0        nloptr_2.2.1        
[25] MASS_7.3-65          reformulas_0.4.1     multcomp_1.4-28     
[28] nlme_3.1-168         tidyselect_1.2.1     purrr_1.1.0         
[31] dplyr_1.1.4          grid_4.5.1           cli_3.6.5           
[34] magrittr_2.0.3       broom_1.0.9          orthopolynom_1.0-6.1
[37] TH.data_1.1-4        backports_1.5.0      jpeg_0.1-11         
[40] interp_1.1-6         BB_2019.10-1         zoo_1.8-14          
[43] png_0.1-8            evaluate_1.0.4       knitr_1.50          
[46] rbibutils_2.3        mgcv_1.9-3           rlang_1.1.6         
[49] Rcpp_1.1.0           glue_1.8.0           polynom_1.4-1       
[52] minqa_1.2.8          R6_2.6.1            

> if (file.exists("packages.bib")) file.remove("packages.bib")

> pkgversion <- function(pkg) {
+     pkgbib(pkg)
+     packageDescription(pkg)$Version
+ }

> pkgbib <- function(pkg) {
+     x <- citation(package = pkg, auto = TRUE)[[1]]
+     b <- toBibtex(x)
+     b <- gsub("Buehlmann", "B{\\\\\"u}hlmann .... [TRUNCATED] 

> pkg <- function(pkg) {
+     vrs <- try(pkgversion(pkg))
+     if (inherits(vrs, "try-error")) 
+         return(NA)
+     paste("\\\\pkg{", pkg, "} ..." ... [TRUNCATED] 

> pkg("mlt")
[1] "\\\\pkg{mlt} \\\\citep[version~1.6-6,][]{pkg:mlt}"

> pkg("tram")
[1] "\\\\pkg{tram} \\\\citep[version~1.2-4,][]{pkg:tram}"

> pkg("SparseGrid")
[1] "\\\\pkg{SparseGrid} \\\\citep[version~0.8.2,][]{pkg:SparseGrid}"

> cat(c("@Manual{vign:mlt.docreg,", "    title = {Most Likely Transformations: The mlt Package},", 
+     "    author = {Torsten Hothorn},", paste("   ..." ... [TRUNCATED] 

 *** Run successfully completed ***
> proc.time()
   user  system elapsed 
 74.800   0.398  75.248 
