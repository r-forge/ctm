
> pkgs <- c("mlt", "tram", "trtf", "SparseGrid", "ATR", 
+     "tramME", "multcomp", "coin", "TH.data", "survival", "colorspace", 
+     "xtable", "en ..." ... [TRUNCATED] 

> pkgs <- sapply(pkgs, require, character.only = TRUE)
Loading required package: mlt
Loading required package: basefun
Loading required package: variables
Loading required package: tram
Loading required package: mvtnorm
Loading required package: trtf
Loading required package: partykit
Loading required package: grid

Attaching package: ‘grid’

The following object is masked from ‘package:variables’:

    unit

Loading required package: libcoin
Loading required package: SparseGrid
Loading required package: ATR
Loading required package: tramME
Loading required package: multcomp
Loading required package: survival
Loading required package: TH.data
Loading required package: MASS

Attaching package: ‘TH.data’

The following object is masked from ‘package:MASS’:

    geyser

Loading required package: coin

Attaching package: ‘coin’

The following object is masked from ‘package:variables’:

    support

Loading required package: colorspace
Loading required package: xtable
Loading required package: english

> if (any(!pkgs)) {
+     cat(paste("Package(s)", paste(names(pkgs)[!pkgs], collapse = ", "), 
+         "not available, stop processing.", "\\end{doc ..." ... [TRUNCATED] 

> if (!interactive() && .Platform$OS.type != "unix") {
+     cat(paste("Vignette only compiled under Unix alikes.", "\\end{document}\n"))
+     knitr: .... [TRUNCATED] 

> set.seed(290875)

> xlab <- "Time (in days)"

> lxlab <- paste0(xlab, " on log-scale")

> ylabS <- "Probability of survival"

> ylablHaz <- "Log-cumulative hazard"

> ylabcumHR <- expression(Lambda[1](t)/Lambda[0](t))

> ylimS <- c(0, 1)

> ylimHR <- c(0, 1.6)

> q <- 0:2204

> xlim <- c(0, max(q))

> lwd <- 1.3

> acol <- sequential_hcl(6, "BluYl")[1:5]

> col <- acol[c(2, (length(acol)) - 1)]

> lcol <- lighten(col, amount = 0.4)

> perm_test_biv.stram <- function(object, seed = 1) {
+     stopifnot(inherits(object, "stram"))
+     fixed <- c(trt = 0, scl = 0)
+     lhs <- objec .... [TRUNCATED] 

> big.mark <- "'"

> frmt0 <- round

> frmt <- function(digits, x, math = FALSE) {
+     if (!is.numeric(x)) 
+         return(x)
+     ret <- formatC(round(x, digits), digits = digits, f .... [TRUNCATED] 

> frmt1 <- function(x, math = FALSE) frmt(1, x = x, 
+     math = math)

> frmt2 <- function(x, math = FALSE) frmt(2, x = x, 
+     math = math)

> frmt3 <- function(x, math = FALSE) frmt(3, x = x, 
+     math = math)

> frmtll <- function(x, math = FALSE, mark = FALSE) {
+     if (!inherits(x, "logLik") && !is.numeric(x) && all(!is.na(x))) 
+         x <- logLik(x)
 .... [TRUNCATED] 

> load(system.file("rda", "Primary_endpoint_data.rda", 
+     package = "TH.data"))

> levs <- levels(CAOsurv$randarm)

> trt <- with(CAOsurv, paste0("randarm", levs[2], collapse = ""))

> nd1 <- data.frame(randarm = factor(levs, levels = levs))

> CAOsurv$strat <- with(CAOsurv, interaction(strat_t, 
+     strat_n))

> slevs <- levels(CAOsurv$strat)

> nd2 <- data.frame(randarm = nd1$randarm[1], strat = factor(slevs, 
+     levels = slevs))

> lslevs <- gsub("\\.", " : ", slevs)

> lslevs <- gsub("cT4", "cT4    ", lslevs)

> CAOsurv$id <- factor(1:nrow(CAOsurv))

> library("knitr")

> knitr::opts_chunk$set(results = "hide", echo = FALSE, 
+     purl = TRUE, tidy = FALSE, size = "small", error = FALSE, 
+     warning = FALSE, messa .... [TRUNCATED] 

> opts_knit$set(global.par = TRUE)

> knitr::render_sweave()

> knitr::set_header(highlight = "")

> options(prompt = "R> ", continue = "+  ", useFancyQuotes = FALSE)

> options(width = 74)

> frmtI <- function(x, math = FALSE) {
+     if (is.character(x)) 
+         return(x)
+     ret <- trimws(formatC(x, format = "fg", width = 7, big.ma .... [TRUNCATED] 

> frmtN <- function(x, bound = 10, all = TRUE) {
+     ret <- round(x)
+     if (all | x <= bound) 
+         return(as.character(english::english(ret .... [TRUNCATED] 

> frmtd <- function(date) format(date, format = "%b~%-d")

> frmtD <- function(date) format(date, format = "%B~%-d")

> toUpper <- function(x) gsub("\\b([[:lower:]])([[:lower:]]+)", 
+     "\\U\\1\\L\\2", x, perl = TRUE)

> frmtp <- function(pv) paste("$p$ =", frmt3(pv))

> frmtCI <- function(x, phantom = FALSE, math = FALSE) {
+     if (!isTRUE(nrow(x) > 1)) 
+         phantom <- FALSE
+     if (phantom) 
+         pha .... [TRUNCATED] 

> ret.tram <- function(object, seed = 25, math = TRUE) {
+     mod0 <- object
+     if (inherits(object, "Survreg")) 
+         object <- as.mlt(objec .... [TRUNCATED] 

> print.tram <- function(object) {
+     ret <- ret.tram(object)
+     cat("\\begin{center}")
+     cat("\n")
+     cat("\n")
+     print(xtable(ret,  .... [TRUNCATED] 

> is.neg <- function(x) x < 0

> lHR <- function(model, frmt = function(x) {
+     frmt3(x, math = FALSE)
+ }) {
+     stopifnot(inherits(model, c("tram", "mlt", "tramME")))
+     c .... [TRUNCATED] 

> HR <- function(model, frmt = function(x) {
+     frmt3(x, math = FALSE)
+ }) frmt(exp(lHR(model, frmt = function(x) {
+     x
+ })))

> par_main <- expression(par(mgp = c(2.5, 1, 0), mar = c(4, 
+     4, 1.5, 4), las = 1))

> par_surv <- expression(par(mgp = c(2.5, 1, 0), mar = c(6, 
+     6, 0.5, 4), las = 1))

> library("tram")

> risktab <- function(ti, st) {
+     nrisk <- NULL
+     for (t in ti) nrisk <- c(nrisk, sum(st >= t))
+     return(nrisk)
+ }

> plot.risktab <- function(tvar, ti = seq(min(q), max(q), 
+     by = 500), cex = 0.8, at = -450) {
+     mtext(levs[1], 1, line = 4, at = at, cex = c .... [TRUNCATED] 

> surv_OS <- survfit(OS ~ randarm, data = CAOsurv)

> surv_iDFS <- survfit(iDFS ~ randarm, data = CAOsurv)

> tab <- xtabs(~strat + randarm, data = CAOsurv)

> tab <- rbind(tab, Total = colSums(tab))

> eval(par_surv)

> plot(surv_iDFS, ylim = ylimS, xlim = xlim, col = lcol, 
+     lwd = lwd, xlab = xlab, ylab = ylabS)

> legend("bottomright", legend = levs, col = col, bty = "n", 
+     lty = 1, lwd = 1, cex = 0.8)

> plot.risktab(tvar = "iDFStime")

> plot(surv_OS, ylim = ylimS, xlim = xlim, col = lcol, 
+     lwd = lwd, xlab = xlab, ylab = ylabS)

> legend("bottomright", legend = levs, col = col, bty = "n", 
+     lty = 1, lwd = 1, cex = 0.8)

> plot.risktab(tvar = "OStime")

> mw <- Survreg(iDFS ~ randarm, data = CAOsurv, dist = "weibull")

> summary(mw)

  Weibull Linear Regression Model 

Call:
Survreg(formula = iDFS ~ randarm, data = CAOsurv, dist = "weibull")

Coefficients:
                          Estimate Std. Error z value Pr(>|z|)  
randarm5-FU + Oxaliplatin   0.2290     0.1065    2.15   0.0315 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Log-Likelihood:
 -2281.171 (df = 3)
Likelihood-ratio Test: Chisq = 4.651917 on 1 degrees of freedom; p = 0.03102


> coef(mw, as.survreg = TRUE)
              (Intercept) randarm5-FU + Oxaliplatin 
                8.5021487                 0.3124241 
attr(,"scale")
log(iDFS) 
 1.364408 

> score_test(mw)

	Transformation Score Test

data:  Survreg(formula = iDFS ~ randarm, data = CAOsurv, dist = "weibull")
Z = -2.1549, p-value = 0.03117
alternative hypothesis: true  for randarm5-FU + Oxaliplatin is not equal to 0
95 percent confidence interval:
 0.02063428 0.43733189
sample estimates:
 for randarm5-FU + Oxaliplatin 
                     0.2289814 


> perm_test(mw)

	Asymptotic Permutation Transformation Score Test

data:  Survreg(formula = iDFS ~ randarm, data = CAOsurv, dist = "weibull")
Z = -2.1105, p-value = 0.03482
alternative hypothesis: true  for randarm5-FU + Oxaliplatin is not equal to 0
95 percent confidence interval:
 0.01605798 0.44169988
sample estimates:
 for randarm5-FU + Oxaliplatin 
                     0.2289814 


> mc <- Coxph(iDFS ~ randarm, data = CAOsurv, log_first = TRUE)

> summary(mc)

  Parametric Linear Cox Regression Model 

Call:
Coxph(formula = iDFS ~ randarm, data = CAOsurv, log_first = TRUE)

Coefficients:
                          Estimate Std. Error z value Pr(>|z|)  
randarm5-FU + Oxaliplatin  -0.2336     0.1065  -2.193   0.0283 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Log-Likelihood:
 -2255.852 (df = 8)
Likelihood-ratio Test: Chisq = 4.838503 on 1 degrees of freedom; p = 0.02783


> score_test(mc)

	Transformation Score Test

data:  Coxph(formula = iDFS ~ randarm, data = CAOsurv, log_first = TRUE)
Z = 2.1977, p-value = 0.02797
alternative hypothesis: true log-hazard ratio for randarm5-FU + Oxaliplatin is not equal to 0
95 percent confidence interval:
 -0.44190273 -0.02516834
sample estimates:
log-hazard ratio for randarm5-FU + Oxaliplatin 
                                    -0.2335505 


> perm_test(mc)

	Asymptotic Permutation Transformation Score Test

data:  Coxph(formula = iDFS ~ randarm, data = CAOsurv, log_first = TRUE)
Z = 2.1922, p-value = 0.02837
alternative hypothesis: true log-hazard ratio for randarm5-FU + Oxaliplatin is not equal to 0
95 percent confidence interval:
 -0.44262104 -0.02464719
sample estimates:
log-hazard ratio for randarm5-FU + Oxaliplatin 
                                    -0.2335505 


> object <- as.mlt(mc)

> newdata <- nd1[1, , drop = FALSE]

> K <- 20

> cheat <- 200

> y <- variable.names(object, "response")

> q <- mkgrid(object, n = K)[[y]]

> q[1] <- q[1] + 1

> nd <- newdata[rep(1, length(q)), , drop = FALSE]

> nd[[y]] <- q

> X <- model.matrix(object$model$model, data = nd)

> cb <- confint(multcomp::glht(multcomp::parm(coef(object), 
+     vcov(object)), linfct = X))$confint

> q <- mkgrid(object, n = cheat)[[y]]

> q[1] <- q[1] + 1

> nd <- newdata[rep(1, length(q)), , drop = FALSE]

> nd[[y]] <- q

> X <- model.matrix(object$model$model, data = nd)

> cb <- confint(multcomp::glht(multcomp::parm(coef(object), 
+     vcov(object)), linfct = X), calpha = attr(cb, "calpha"))$confint

> cb <- cbind(q, cb)

> eval(par_main)

> plot(cb[, "q"], cb[, "Estimate"], log = "x", type = "n", 
+     xlab = lxlab, ylab = ylablHaz, xlim = xlimlHaz <- range(cb[, 
+         "q"]), ylim  .... [TRUNCATED] 

> polygon(c(cb[, "q"], rev(cb[, "q"])), c(cb[, "lwr"], 
+     rev(cb[, "upr"])), border = NA, col = rgb(0.1, 0.1, 0.1, 
+     0.1))

> lines(cb[, "q"], cb[, "Estimate"], lwd = lwd)

> mcst <- Coxph(iDFS | strat ~ randarm, data = CAOsurv, 
+     log_first = TRUE)

> summary(mcst)

 (Stratified) Parametric Linear Cox Regression Model 

Call:
Coxph(formula = iDFS | strat ~ randarm, data = CAOsurv, log_first = TRUE)

Coefficients:
                          Estimate Std. Error z value Pr(>|z|)  
randarm5-FU + Oxaliplatin  -0.2312     0.1069  -2.163   0.0305 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Log-Likelihood:
 -2231.848 (df = 29)
Likelihood-ratio Test: Chisq = 4.75183 on 1 degrees of freedom; p = 0.02927


> score_test(mcst)

	Transformation Score Test

data:  Coxph(formula = iDFS | strat ~ randarm, data = CAOsurv, log_first = TRUE)
Z = 2.1783, p-value = 0.02938
alternative hypothesis: true log-hazard ratio for randarm5-FU + Oxaliplatin is not equal to 0
95 percent confidence interval:
 -0.4396970 -0.0236895
sample estimates:
log-hazard ratio for randarm5-FU + Oxaliplatin 
                                    -0.2312035 


> perm_test(mcst)

	Asymptotic Permutation Transformation Score Test

data:  Coxph(formula = iDFS | strat ~ randarm, data = CAOsurv, log_first = TRUE)
Z = 2.1652, p-value = 0.03037
alternative hypothesis: true log-hazard ratio for randarm5-FU + Oxaliplatin is not equal to 0
95 percent confidence interval:
 -0.4419796 -0.0219237
sample estimates:
log-hazard ratio for randarm5-FU + Oxaliplatin 
                                    -0.2312035 


> plot(as.mlt(mcst), newdata = nd2, q = q, type = "trafo", 
+     log = "x", lty = lty <- 1:4, xlab = lxlab, ylab = ylablHaz, 
+     xlim = xlimlHaz,  .... [TRUNCATED] 

> legend("bottomright", legend = lslevs, title = "Stratum", 
+     lty = lty, lwd = lwd, col = 1, bty = "n")

> mcs <- Coxph(iDFS ~ randarm | randarm, data = CAOsurv, 
+     log_first = TRUE)

> summary(mcs)

  Shift-Scale Transformation Model 

Call:
Coxph(formula = iDFS ~ randarm | randarm, data = CAOsurv, log_first = TRUE)

Coefficients:
                              Estimate Std. Error z value Pr(>|z|)
randarm5-FU + Oxaliplatin      -0.0756     0.1644  -0.460    0.646
scl_randarm5-FU + Oxaliplatin   0.2893     0.2017   1.434    0.152

Log-Likelihood:
 -2254.831 (df = 9)
Likelihood-ratio Test: Chisq = 6.882043 on 2 degrees of freedom; p = 0.03203


> confint(mcs)
                                   2.5 %    97.5 %
randarm5-FU + Oxaliplatin     -0.3977818 0.2465750
scl_randarm5-FU + Oxaliplatin -0.1060296 0.6845534

> perm_test_biv.stram(mcs)
[1] 0.0138706
99 percent confidence interval:
 0.0138706 0.0138706 


> eval(par_surv)

> plot(surv_iDFS, ylim = ylimS, xlim = xlim, col = lcol, 
+     lwd = lwd, xlab = xlab, ylab = ylabS)

> legend("bottomright", legend = levs, col = col, bty = "n", 
+     lty = 1, lwd = 1, cex = 0.8)

> plot.risktab(tvar = "iDFStime")

> plot(as.mlt(mcs), type = "survivor", newdata = nd1, 
+     col = col, add = TRUE)

> qHR <- seq(50, max(q), by = 1)

> cumhaz <- predict(mcs, type = "cumhazard", newdata = nd1, 
+     q = qHR)

> cumhr <- unname(cumhaz[, 2]/cumhaz[, 1])

> plot(qHR, cumhr, type = "l", ylab = ylabcumHR, xlab = xlab, 
+     ylim = ylimHR, xlim = xlimHR <- range(qHR), lwd = lwd)

> abline(h = exp(coef(mc)), lty = 2, lwd = 1)

> abline(h = 1, lty = 3)

> mcv <- Coxph(iDFS | randarm ~ 1, data = CAOsurv, log_first = TRUE)

> logLik(mcv)
'log Lik.' -2252.38 (df=14)

> mcv <- as.mlt(mcv)

> s <- mkgrid(mcv, 39)

> s$iDFS <- s$iDFS[s$iDFS >= min(xlimHR) & s$iDFS <= 
+     max(xlimHR)]

> nd3 <- expand.grid(s)

> K <- model.matrix(mcv$model, data = nd3)

> Kyes <- K[nd3$randarm == levels(nd3$randarm)[2], ]

> Kyes[, grep("Intercept", colnames(Kyes))] <- 0

> gh <- glht(parm(coef(mcv), vcov(mcv)), Kyes)

> ci <- exp(confint(gh)$confint)

> coxy <- s$iDFS

> ci2 <- exp(confint(mc))

> plot(coxy, ci[, "Estimate"], ylim = ylimHR, type = "n", 
+     xlim = xlimHR, xlab = xlab, ylab = ylabcumHR)

> polygon(c(coxy, rev(coxy)), c(ci[, "lwr"], rev(ci[, 
+     "upr"])), border = NA, col = rgb(0.1, 0.1, 0.1, 0.1))

> lines(coxy, ci[, "Estimate"], lty = 1, lwd = lwd)

> polygon(c(coxy[c(1, length(coxy))], rev(coxy[c(1, 
+     length(coxy))])), rep(ci2, c(2, 2)), border = NA, col = rgb(0.1, 
+     0.1, 0.1, 0.1))

> abline(h = exp(coef(mc)), lty = 2, lwd = 1)

> abline(h = 1, lty = 3)

> patnr_lofu <- c(1012, 2003, 3002, 3003, 6018, 7001, 
+     7003, 7005, 7008, 7012, 10003, 10012, 11018, 12003, 12014, 
+     13028, 14002, 15001, 16 .... [TRUNCATED] 

> ilofu <- with(CAOsurv, which(patnr %in% patnr_lofu))

> CAOsurv$DepCevent <- CAOsurv$OSevent

> CAOsurv$DepCevent <- factor(as.numeric(CAOsurv$DepCevent), 
+     levels = 0:2, labels = c("AdminC", "EoI", "DepC"))

> CAOsurv$DepCevent[ilofu] <- "DepC"

> CAOsurv$nDepCevent <- factor(as.character(CAOsurv$DepCevent), 
+     levels = c("AdminC", "EoI", "DepC"), labels = c("Administrative censoring", 
+  .... [TRUNCATED] 

> tab <- xtabs(~nDepCevent + randarm, data = CAOsurv)

> tab
                          randarm
nDepCevent                 5-FU 5-FU + Oxaliplatin
  Administrative censoring  469                466
  Event of interest         106                 96
  Loss of follow-up          48                 51

> md <- Coxph(Surv(OStime, event = DepCevent) ~ randarm, 
+     data = CAOsurv, log_first = TRUE)

> summary(md)

 

Call:
Coxph(formula = Surv(OStime, event = DepCevent) ~ randarm, data = CAOsurv, 
    log_first = TRUE)

Coefficients:
                                                 Estimate Std. Error
Event_EoI.Event_EoI.Bs1(Event_EoI)               -2.21652    0.13534
Event_EoI.Event_EoI.Bs2(Event_EoI)               -2.05996    0.13953
Event_EoI.Event_EoI.Bs3(Event_EoI)               -1.79585    0.18029
Event_EoI.Event_EoI.Bs4(Event_EoI)               -1.42008    0.15019
Event_EoI.Event_EoI.Bs5(Event_EoI)               -1.42008    0.15018
Event_EoI.Event_EoI.Bs6(Event_EoI)               -1.42008    0.15019
Event_EoI.Event_EoI.Bs7(Event_EoI)               -0.92178    0.22833
Event_EoI.Event_EoI.randarm5-FU + Oxaliplatin    -0.04431    0.14210
Event_DepC.Event_DepC.(Intercept)               -12.31711    1.00126
Event_DepC.Event_DepC.log(Event_DepC)             1.36283    0.15565
Event_DepC.Event_DepC.randarm5-FU + Oxaliplatin  -0.10052    0.20227
Event_DepC.Event_EoI.(Intercept)                 -0.16407    0.65409
                                                z value Pr(>|z|)    
Event_EoI.Event_EoI.Bs1(Event_EoI)              -16.377  < 2e-16 ***
Event_EoI.Event_EoI.Bs2(Event_EoI)              -14.763  < 2e-16 ***
Event_EoI.Event_EoI.Bs3(Event_EoI)               -9.961  < 2e-16 ***
Event_EoI.Event_EoI.Bs4(Event_EoI)               -9.455  < 2e-16 ***
Event_EoI.Event_EoI.Bs5(Event_EoI)               -9.456  < 2e-16 ***
Event_EoI.Event_EoI.Bs6(Event_EoI)               -9.455  < 2e-16 ***
Event_EoI.Event_EoI.Bs7(Event_EoI)               -4.037 5.41e-05 ***
Event_EoI.Event_EoI.randarm5-FU + Oxaliplatin    -0.312    0.755    
Event_DepC.Event_DepC.(Intercept)               -12.302  < 2e-16 ***
Event_DepC.Event_DepC.log(Event_DepC)             8.756  < 2e-16 ***
Event_DepC.Event_DepC.randarm5-FU + Oxaliplatin  -0.497    0.619    
Event_DepC.Event_EoI.(Intercept)                 -0.251    0.802    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Log-Likelihood:
 -3058.342 (df = 12)


> confint(md)
                                                      2.5 %      97.5 %
Event_EoI.Event_EoI.Bs1(Event_EoI)               -2.4817898  -1.9512492
Event_EoI.Event_EoI.Bs2(Event_EoI)               -2.3334353  -1.7864831
Event_EoI.Event_EoI.Bs3(Event_EoI)               -2.1492159  -1.4424910
Event_EoI.Event_EoI.Bs4(Event_EoI)               -1.7144439  -1.1257242
Event_EoI.Event_EoI.Bs5(Event_EoI)               -1.7144391  -1.1257290
Event_EoI.Event_EoI.Bs6(Event_EoI)               -1.7144442  -1.1257238
Event_EoI.Event_EoI.Bs7(Event_EoI)               -1.3693059  -0.4742558
Event_EoI.Event_EoI.randarm5-FU + Oxaliplatin    -0.3228171   0.2341997
Event_DepC.Event_DepC.(Intercept)               -14.2795450 -10.3546674
Event_DepC.Event_DepC.log(Event_DepC)             1.0577649   1.6678987
Event_DepC.Event_DepC.randarm5-FU + Oxaliplatin  -0.4969602   0.2959141
Event_DepC.Event_EoI.(Intercept)                 -1.4460664   1.1179192

> library("tramME")

> mcME <- CoxphME(iDFS ~ randarm + (1 | Block), data = CAOsurv, 
+     log_first = TRUE)

> summary(mcME)

Mixed-Effects Parametric Cox Regression Model

	Formula:
iDFS ~ randarm + (1 | Block)

	Fitted to dataset CAOsurv  

	Fixed effects parameters:
	=========================

                          Estimate Std. Error z value Pr(>|z|)  
randarm5-FU + Oxaliplatin -0.23903    0.10709  -2.232  0.02561 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

	Random effects:
	===============

Grouping factor: Block (362 levels)
Standard deviation:
(Intercept) 
    0.27916 


	Log-likelihood: -2255.537 (npar = 9)


> confint(mcME)
                                 lwr         upr
Bs1(iDFS)                 -2.4005713 -1.97823306
Bs2(iDFS)                 -1.9933789 -1.55085340
Bs3(iDFS)                 -1.9953670 -1.06463968
Bs4(iDFS)                 -1.9086996 -0.74669209
Bs5(iDFS)                 -1.5193709 -0.74550909
Bs6(iDFS)                 -1.0905884 -0.71557561
Bs7(iDFS)                 -0.9676973 -0.66001090
randarm5-FU + Oxaliplatin -0.4489287 -0.02913714
Block|(Intercept)         -2.5353231 -0.01664409

> tmp <- CAOsurv$iDFS

> exact <- tmp[, 3] == 1

> tmp[exact, 2] <- tmp[exact, 1] + 2

> tmp[exact, 1] <- pmax(tmp[exact, 1] - 2, 0)

> tmp[exact, 3] <- 3

> CAOsurv$iDFS2 <- tmp

> mmc <- mtram(Coxph(iDFS2 ~ randarm, data = CAOsurv, 
+     log_first = TRUE), formula = ~(1 | Block), data = CAOsurv)

> mHR.mtram <- function(object, with_confint = FALSE, 
+     seed = 1) {
+     stopifnot(inherits(object, "mtram"))
+     cf <- coef(object)
+     cf  .... [TRUNCATED] 

> coef(mmc)
               Bs1(iDFS2)                Bs2(iDFS2) 
               -2.1352629                -1.7251909 
               Bs3(iDFS2)                Bs4(iDFS2) 
               -1.5101020                -1.3062956 
               Bs5(iDFS2)                Bs6(iDFS2) 
               -1.1114883                -0.8931230 
               Bs7(iDFS2) randarm5-FU + Oxaliplatin 
               -0.8064784                -0.2386023 
                   gamma1 
                0.1739306 

> sqrt(diag(vcov(mmc)))
               Bs1(iDFS2)                Bs2(iDFS2) 
               0.10665981                0.10980651 
               Bs3(iDFS2)                Bs4(iDFS2) 
               0.23130416                0.29286851 
               Bs5(iDFS2)                Bs6(iDFS2) 
               0.19529970                0.09328078 
               Bs7(iDFS2) randarm5-FU + Oxaliplatin 
               0.07616954                0.10736281 
                   gamma1 
               0.12087479 

> (ci_MCOX <- mHR.mtram(mmc, with_confint = TRUE))
     randarm5-FU + Oxaliplatin      2.5%     97.5%
[1,]                 0.7905131 0.6447848 0.9743401

> ma <- CoxphME(iDFS ~ randarm + s(age, by = as.ordered(randarm), 
+     fx = TRUE, k = 6), data = CAOsurv, log_first = TRUE)

> nd <- model.frame(ma)[rep(2, 100), ]

> nd$age <- seq(min(CAOsurv$age), max(CAOsurv$age), 
+     length.out = 100)

> xx <- model.matrix(ma, data = nd, type = "X", keep_sign = FALSE)$X

> ip <- grep("randarm", names(bb <- coef(ma, with_baseline = TRUE)))

> vc <- vcov(ma, parm = names(bb)[ip])

> bb <- bb[ip]

> cb <- exp(confint(multcomp::glht(multcomp::parm(bb, 
+     vc), linfct = xx), calpha = univariate_calpha())$confint)

> summary(ma)

Additive Parametric Cox Regression Model

	Formula:
iDFS ~ randarm + s(age, by = as.ordered(randarm), fx = TRUE, 
    k = 6)

	Fitted to dataset CAOsurv  

	Fixed effects parameters:
	=========================

                          Estimate Std. Error z value Pr(>|z|)  
randarm5-FU + Oxaliplatin -0.24926    0.10743 -2.3202  0.02033 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

	Smooth shift terms:
	===================

                                             edf
s(age):as.ordered(randarm)5-FU + Oxaliplatin   5

	Log-likelihood: -2251.245 (npar = 13)


> plot(nd$age, cb[, "Estimate"], type = "n", ylab = "Hazard ratio", 
+     xlab = "Age (in years)", ylim = ylimHR)

> polygon(c(nd$age, rev(nd$age)), c(cb[, "lwr"], rev(cb[, 
+     "upr"])), border = NA, col = rgb(0.1, 0.1, 0.1, 0.1))

> lines(nd$age, cb[, "Estimate"], lwd = lwd)

> abline(h = 1, lty = 3)

> rug(CAOsurv$age, lwd = 2, col = rgb(0.1, 0.1, 0.1, 
+     0.1))

> library("trtf")

> set.seed(4)

> tr <- trafotree(Coxph(iDFS ~ randarm, data = CAOsurv, 
+     log_first = TRUE), formula = iDFS ~ randarm | age, data = CAOsurv, 
+     control = ctr .... [TRUNCATED] 

> logLik(tr)
'log Lik.' -2250.417 (df=16)

> library("ATR")

> plot(rotate(tr), tp_args = list(newdata = nd1, type = "survivor", 
+     col = col, lwd = lwd), terminal_panel = trtf:::node_mlt)

> mf <- Coxph(iDFS ~ randarm, data = CAOsurv, log_first = TRUE, 
+     frailty = "Gamma")

> logLik(mf)
'log Lik.' -2245.205 (df=8)

> coef(mf)[trt]
randarm5-FU + Oxaliplatin 
               -0.5827938 

> coef(mf, addparm = TRUE)
  logrho 
3.461317 

> confint(mf, parm = c(trt, "logrho"))
                              2.5 %    97.5 %
randarm5-FU + Oxaliplatin -1.446267 0.2806789
logrho                           NA        NA

> ml <- Colr(iDFS ~ randarm, data = CAOsurv, log_first = TRUE)

> m <- as.mlt(Survreg(OS ~ randarm + age, data = CAOsurv, 
+     dist = "weibull", support = c(0.1, 80 * 365)))

> N <- 500

> nd <- with(CAOsurv, data.frame(randarm = gl(2, N, 
+     labels = levels(randarm)), age = rnorm(N, mean = mean(age), 
+     sd = sd(age))))

> `coef<-` <- mlt::`coef<-`

> cf <- coef(m)

> cf["randarm5-FU + Oxaliplatin"] <- 0.25

> coef(m) <- cf

> nd$T <- as.Surv(simulate(m, newdata = nd, K = 1000))

> cf["(Intercept)"] <- cf["(Intercept)"] + qlogis(0.8)

> coef(m) <- cf

> nd$C <- as.Surv(simulate(m, newdata = nd, K = 1000))

> nd$nOS <- with(nd, Surv(time = pmin(T[, "time"], C[, 
+     "time"]), event = T[, "time"] < C[, "time"]))

 *** Run successfully completed ***
> proc.time()
   user  system elapsed 
 99.880   0.244 100.655 
