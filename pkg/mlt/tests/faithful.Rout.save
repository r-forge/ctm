
R version 3.1.3 (2015-03-09) -- "Smooth Sidewalk"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library("mlt")
Loading required package: basefun
Loading required package: Matrix

Attaching package: 'Matrix'

The following objects are masked from 'package:base':

    crossprod, tcrossprod

Loading required package: polynom
Loading required package: numDeriv
> library("lattice")
> 
> data("faithful")
> 
> aic <- numeric(20)
> 
> for (o in 2:(length(aic) + 1)) {
+ Bs <- Bernstein_basis(order = o, var = "waiting", ui = "incre", 
+                       support = range(faithful$waiting) + c(-5, 5))
+ m <- model(Bs)
+ mod <- mlt(m, data = faithful)
+ 
+ aic[o - 1] <- AIC(mod)
+ 
+ plot(mod, ~ waiting, what = "prob",  
+      col = "red", pch = 21, main = paste("order", o, "aic", aic[o - 1]))
+ lines(ecdf(faithful$waiting))
+ 
+ }
Gradient[1] "Mean relative difference: 0.000466985"
Hessian:[1] TRUE
Gradient[1] TRUE
Hessian:[1] TRUE
Gradient[1] TRUE
Hessian:[1] TRUE
Gradient[1] TRUE
Hessian:[1] TRUE
Gradient[1] TRUE
Hessian:[1] TRUE
Gradient[1] TRUE
Hessian:[1] TRUE
Gradient[1] TRUE
Hessian:[1] TRUE
Gradient[1] TRUE
Hessian:[1] TRUE
Gradient[1] TRUE
Hessian:[1] TRUE
Gradient[1] "Mean relative difference: 3.501953e-08"
Hessian:[1] TRUE
Gradient[1] TRUE
Hessian:[1] TRUE
Gradient[1] TRUE
Hessian:[1] TRUE
Gradient[1] TRUE
Hessian:[1] TRUE
Gradient[1] TRUE
Hessian:[1] TRUE
Gradient[1] TRUE
Hessian:[1] TRUE
Gradient[1] TRUE
Hessian:[1] TRUE
Gradient[1] "Mean relative difference: 1.691633e-08"
Hessian:[1] TRUE
Gradient[1] "Mean relative difference: 4.124017e-08"
Hessian:[1] TRUE
Gradient[1] "Mean relative difference: 3.355881e-08"
Hessian:[1] TRUE
Gradient[1] "Mean relative difference: 2.828994e-08"
Hessian:[1] TRUE
Warning message:
In spg(par = theta, fn = loglikfct, gr = scorefct, project = "projectLinear",  :
  Unsuccessful convergence.
> 
> plot(aic)
> 
> o <- which.min(aic) + 1
> Bs <- Bernstein_basis(order = o, var = "waiting", ui = "incre",
+                       support = range(faithful$waiting) + c(-5, 5))
> m <- model(Bs)
> mod <- mlt(m, data = faithful)
Gradient[1] TRUE
Hessian:[1] TRUE
> 
> abline(h = AIC(mod))
> 
> p <- predict(mod, newdata = data.frame(1))
> 
> y <- generate(mod, 100)$waiting
> 
> tr <- p[[1]](y)
> tr1 <- p[[1]](y, deriv = c(waiting = 1))
> plot(y, mod$todistr$d(tr) * tr1, type = "l", col = "red", lwd = 3)
> lines(density(faithful$waiting))
> lines(rug(faithful$waiting))
> abline(h = 0)
> 
> d <- predict(mod, newdata = data.frame(1))
> 
> y <- generate(mod, 100)$waiting
> 
> tr <- d[[1]](y, type = "density")
> lines(y, tr, type = "l", col = "blue", lwd = 1)
> 
> p <- 1:99 / 100
> 
> plot(p, d[[1]](p, type = "quantile"))
> lines(p, quantile(faithful$waiting, p))
> 
> Bs <- Bernstein_basis(order = o, var = "waiting", ui = "incre", # normal = TRUE,
+                       support = range(faithful$waiting) + c(-5, 5))
> m <- model(Bs)
> mod <- mlt(m, data = faithful)
Gradient[1] TRUE
Hessian:[1] TRUE
> 
> # H1 <- mod$optim(coef(mod), hessian = TRUE)$hessian
> H2 <- mod$hessian(coef(mod))
> 
> X <- model.matrix(m, faithful)
> Xprime <- model.matrix(m, faithful, deriv = c(waiting = 1))
> w <- drop((Xprime %*% coef(mod))^2)
> H3 <- crossprod(X) + crossprod(Xprime * w, Xprime)
> max(abs(H3 - H2))
[1] 9.885592
> 
> cov2cor(vcov(mod))
             Bs1(waiting) Bs2(waiting) Bs3(waiting) Bs4(waiting) Bs5(waiting)
Bs1(waiting)    1.0000000   -0.9652656    0.9032053   -0.8310317    0.7513995
Bs2(waiting)   -0.9652656    1.0000000   -0.9793104    0.9309906   -0.8628108
Bs3(waiting)    0.9032053   -0.9793104    1.0000000   -0.9835441    0.9383219
Bs4(waiting)   -0.8310317    0.9309906   -0.9835441    1.0000000   -0.9837278
Bs5(waiting)    0.7513995   -0.8628108    0.9383219   -0.9837278    1.0000000
Bs6(waiting)   -0.6649918    0.7788034   -0.8677581    0.9357829   -0.9824465
Bs7(waiting)    0.5741523   -0.6830278    0.7767008   -0.8583342    0.9286162
Bs8(waiting)   -0.4756211    0.5730197   -0.6625697    0.7479342   -0.8313483
Bs9(waiting)    0.3573296   -0.4341439    0.5079553   -0.5821468    0.6606656
             Bs6(waiting) Bs7(waiting) Bs8(waiting) Bs9(waiting)
Bs1(waiting)   -0.6649918    0.5741523   -0.4756211    0.3573296
Bs2(waiting)    0.7788034   -0.6830278    0.5730197   -0.4341439
Bs3(waiting)   -0.8677581    0.7767008   -0.6625697    0.5079553
Bs4(waiting)    0.9357829   -0.8583342    0.7479342   -0.5821468
Bs5(waiting)   -0.9824465    0.9286162   -0.8313483    0.6606656
Bs6(waiting)    1.0000000   -0.9794871    0.9079639   -0.7427120
Bs7(waiting)   -0.9794871    1.0000000   -0.9699965    0.8292216
Bs8(waiting)    0.9079639   -0.9699965    1.0000000   -0.9214160
Bs9(waiting)   -0.7427120    0.8292216   -0.9214160    1.0000000
> 
> if (FALSE) {
+ library("multcomp")
+ 
+ mp <- parm(coef(mod), vcov(mod))
+ y <- generate(mod, 30)$waiting
+ g <- glht(mp, linfct = model.matrix(mod$model,
+     data = data.frame(waiting = y)))
+ 
+ mc <- confint(g)
+ umc <- confint(glht(mp, linfct = model.matrix(mod$model, 
+     data = data.frame(waiting = y))), calpha = qnorm(.975))
+ p <- mod$model$todistr$p
+ plot(y, p(mc$confint[, "Estimate"]), type = "l")
+ lines(y, p(mc$confint[, "lwr"]))
+ lines(y, p(mc$confint[, "upr"]))
+ lines(y, p(umc$confint[, "lwr"]))
+ lines(y, p(umc$confint[, "upr"]))
+ 
+ library("survival")
+ cm <- coxph(Surv(waiting, rep(TRUE, nrow(faithful))) ~ 1, data = faithful)
+ plot(survfit(cm))
+ lines(y, 1 - p(mc$confint[, "Estimate"]), col = "red")
+ lines(y, 1 - p(mc$confint[, "lwr"]), col = "red")
+ lines(y, 1 - p(mc$confint[, "upr"]), col = "red")
+ }
> 
> proc.time()
   user  system elapsed 
  9.796   0.069   9.856 
