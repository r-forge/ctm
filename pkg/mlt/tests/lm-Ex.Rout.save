
R version 3.1.3 (2015-03-09) -- "Smooth Sidewalk"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library("mlt")
Loading required package: basefun
Loading required package: Matrix

Attaching package: 'Matrix'

The following objects are masked from 'package:base':

    crossprod, tcrossprod

Loading required package: polynom
Loading required package: numDeriv
> 
> set.seed(29)
> n <- 1000	
> y <- rnorm(n, 2, 1.5)
> d <- data.frame(y = y)
> 
> lin <- polynomial_basis(c(1, 1), var = "y", support = range(y), ci = c(-Inf, 0))
> m <- model(lin)
> 
> o <- mlt(m, data = d)
Gradient[1] "Mean relative difference: 1.995157e-05"
Hessian:[1] TRUE
> 
> s2ml <- sqrt(var(y) * (n - 1) / n)
> 1 / coef(o)[2] - s2ml
           y 
4.224584e-07 
> 
> -coef(o)[1] / coef(o)[2] - mean(y)
  (Intercept) 
-6.265283e-07 
> 
> x <- runif(n, max = 2 * pi)
> y <- rnorm(n, sin(x), .25)
> d <- data.frame(y = y, x = x)
> 
> plot(x, y)
> 
> Bb <- Bernstein_basis(order = 10, support = c(0, 2*pi), var = "x", ui = "zero")
> m <- model(lin, shift = Bb)
Warning message:
In c.basis(bresponse = response, bshifting = shifting) :
  more than one basis contains an intercept term
> 
> o <- mlt(m, data = d)
Gradient[1] "Mean relative difference: 5.306913e-08"
Hessian:[1] TRUE
Warning messages:
1: In spg(par = theta, fn = loglikfct, gr = scorefct, project = "projectLinear",  :
  Unsuccessful convergence.
2: In spg(par = theta, fn = loglikfct, gr = scorefct, project = "projectLinear",  :
  Unsuccessful convergence.
3: In .mlt_fit(object = list(theta = c(-0.0511955668758649, 1.32011355247084,  :
  algorithm did not converge
> 1 / coef(o)[2]
        y 
0.2609474 
> p <- predict(Bb,
+              newdata = data.frame(x = x), coef = coef(o)[-(1:2)])
> plot(x, y)
> lines(sort(x), -p[order(x)] / coef(o)[2], lwd = 2, col = "red")
> 
> x <- runif(n, max = 2 * pi)
> y <- rnorm(n, 2, 1.1 + sin(x) / 2)
> d <- data.frame(y = y, x = x)
> 
> plot(x, y)
> 
> Bb <- Bernstein_basis(order = 10, support = c(0, 2*pi), var = "x")
> m <- model(lin, interacting = Bb)
> 
> o <- mlt(m, data = d)
Note: method with signature 'diagonalMatrix#Matrix' chosen for function 'kronecker',
 target signature 'ddiMatrix#ddiMatrix'.
 "Matrix#diagonalMatrix" would also be valid
Note: method with signature 'TsparseMatrix#sparseMatrix' chosen for function 'kronecker',
 target signature 'dtTMatrix#ddiMatrix'.
 "Matrix#diagonalMatrix" would also be valid
Note: method with signature 'Matrix#numLike' chosen for function '%*%',
 target signature 'dgTMatrix#numeric'.
 "TsparseMatrix#ANY" would also be valid
Note: method with signature 'sparseMatrix#matrix' chosen for function '%*%',
 target signature 'dgTMatrix#matrix'.
 "TsparseMatrix#ANY" would also be valid
Gradient[1] "Mean relative difference: 1.662573e-07"
Hessian:[1] "Mean relative difference: 3.570103e-07"
Warning messages:
1: In spg(par = theta, fn = loglikfct, gr = scorefct, project = "projectLinear",  :
  Unsuccessful convergence.
2: In spg(par = theta, fn = loglikfct, gr = scorefct, project = "projectLinear",  :
  Unsuccessful convergence.
3: In .mlt_fit(object = list(theta = c(-1.81598676005645, 0.888463104798363,  :
  algorithm did not converge
> 
> nd <- data.frame(x = sort(x))
> layout(matrix(1:2, nr = 2))
> tmp <- matrix(coef(o), nrow = 2)
> plot(nd$x, predict(Bb, nd, coef = tmp[1,]))
> plot(nd$x, predict(Bb, nd, coef = tmp[2,]))
> lines(nd$x, 1.1 + sin(nd$x) / 2, col = "red")
> 
> proc.time()
   user  system elapsed 
  9.172   0.091   9.255 
