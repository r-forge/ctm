
R version 3.1.3 (2015-03-09) -- "Smooth Sidewalk"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library("mlt")
Loading required package: basefun
> set.seed(29)
> 
> n <- 20
> d <- data.frame(x1 = 1:n, x2 = 1:n + 1, y = rnorm(n))
> m <- model(polynomial_basis(c(TRUE, TRUE), varname = "y",
+            ci = c(-Inf, 0), support = range(d$y)),
+            shift = ~ x1 + x2)
> mod <- mlt(m, data = d)
Gradient[1] "Mean relative difference: 0.0007853802"
Hessian:[1] TRUE
Warning message:
In .findstart(model, y, data, ui, ci, fix, fixed) :
  cannot determine some starting values
> 
> p <- tmlt(mod, newdata = d)
> 
> system.time(p0 <- predict(mod$model$model, 
+     newdata = expand.grid(d), coef = coef(mod)))
   user  system elapsed 
  0.012   0.000   0.012 
> system.time(p1 <- tmlt(mod, newdata = as.list(d)))
   user  system elapsed 
  0.005   0.000   0.005 
> system.time(p2 <- tmlt(mod, newdata = d, q = d$y[1]))
   user  system elapsed 
  0.004   0.000   0.004 
> 
> max(abs(p0 - as.vector(p1)))
[1] 0
> 
> all.equal(p1[cbind(1:n, 1:n, 1), drop = TRUE],
+           drop(p2))
[1] TRUE
> 
> all.equal(p1[cbind(1:n, 1:n, 1:n), drop = TRUE],
+           drop(p), check.attributes = FALSE)
[1] TRUE
> 
> qmlt(mod, newdata = list(x1 = 1:3, x2 = 2:3), p = c(.25, .5))
, , x2 =     2

       x1
p                1           2           3
   0.25 -0.8374140 -0.72946583 -0.62177772
    0.5 -0.1534156 -0.04559379  0.06220496

, , x2 =     3

       x1
p                1          2           3
   0.25 -0.9189783 -0.8112467 -0.70333119
    0.5 -0.2350766 -0.1272570 -0.01945554

> 
> simulate(mod, nsim = 1, seed = 291, interpolate = FALSE)
           left       right
1          -Inf -1.44201141
2   0.587961900  0.66046095
3  -1.297013314 -1.22451427
4   0.805459040  0.87795809
5   0.297965713  0.37046476
6   0.370464760  0.44296381
7   2.110441880         Inf
8   1.312952366  1.38545141
9  -0.137028567 -0.06452952
10  1.167954273  1.24045332
11 -1.369512361 -1.29701331
12  0.007969526  0.08046857
13  0.732959993  0.80545904
14  0.297965713  0.37046476
15  0.805459040  0.87795809
16  1.022956180  1.09545523
17 -1.224514267 -1.15201522
18  0.515462853  0.58796190
19  0.370464760  0.44296381
20  1.892944740  1.96544379
> 
> d$y <- gl(3, 1, ordered = TRUE)[rep(1:3, length = n)]
> 
> r <- as.basis(~ y, data = d, remove_intercept = TRUE,
+               contrasts.arg = list(y = function(n)
+                   contr.treatment(n, base = 3)),
+               ui = diff(diag(2)), ci = 0)
> 
> mod2 <- mlt(model(r, shift = ~ x1 + x2), data = d)
Gradient[1] "Mean relative difference: 0.0006783188"
Hessian:[1] "Mean relative difference: 3.361219e-05"
Warning message:
In .log(.dealinf(mmr, beta, offset, d$p, 1) - .dealinf(mml, beta,  :
  negative contribution to likelihood; constraints violated!
> 
> tmlt(mod2, q = unique(d$y))
   
y         [,1]       [,2]       [,3]       [,4]       [,5]       [,6]
  1 -0.3152270 -0.3226046 -0.3299823 -0.3373599 -0.3447376 -0.3521152
  2  0.5952991  0.5879214  0.5805438  0.5731661  0.5657885  0.5584108
  3        Inf        Inf        Inf        Inf        Inf        Inf
   
y         [,7]       [,8]       [,9]      [,10]      [,11]      [,12]
  1 -0.3594929 -0.3668705 -0.3742482 -0.3816258 -0.3890035 -0.3963811
  2  0.5510331  0.5436555  0.5362778  0.5289002  0.5215225  0.5141449
  3        Inf        Inf        Inf        Inf        Inf        Inf
   
y        [,13]      [,14]      [,15]      [,16]      [,17]      [,18]
  1 -0.4037588 -0.4111364 -0.4185141 -0.4258917 -0.4332694 -0.4406471
  2  0.5067672  0.4993896  0.4920119  0.4846343  0.4772566  0.4698790
  3        Inf        Inf        Inf        Inf        Inf        Inf
   
y        [,19]      [,20]
  1 -0.4480247 -0.4554024
  2  0.4625013  0.4551237
  3        Inf        Inf
> 
> qmlt(mod2, p = 1:9 / 10)
  [1] 1 1 1 2 2 2 2 3 3 1 1 1 2 2 2 2 3 3 1 1 1 2 2 2 2 3 3 1 1 1 2 2 2 2 3 3 1
 [38] 1 1 2 2 2 2 3 3 1 1 1 2 2 2 2 3 3 1 1 1 2 2 2 2 3 3 1 1 1 2 2 2 2 3 3 1 1
 [75] 1 2 2 2 2 3 3 1 1 1 2 2 2 2 3 3 1 1 1 2 2 2 3 3 3 1 1 1 2 2 2 3 3 3 1 1 1
[112] 2 2 2 3 3 3 1 1 1 2 2 2 3 3 3 1 1 1 2 2 2 3 3 3 1 1 1 2 2 2 3 3 3 1 1 1 2
[149] 2 2 3 3 3 1 1 1 2 2 2 3 3 3 1 1 1 2 2 2 3 3 3 1 1 1 2 2 2 3 3 3
Levels: 1 < 2 < 3
> 
> simulate(mod2, nsim = 3, seed = 29)
[[1]]
 [1] 1 1 1 1 2 1 3 3 1 1 3 2 1 2 1 3 2 2 3 2
Levels: 1 < 2 < 3

[[2]]
 [1] 2 2 3 3 2 1 2 3 2 1 2 1 1 3 2 1 3 1 2 1
Levels: 1 < 2 < 3

[[3]]
 [1] 2 1 3 2 1 3 3 3 2 2 2 3 1 2 2 2 2 3 2 1
Levels: 1 < 2 < 3

> 
> dmlt(mod2, q = unique(d$y))
          [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]
[1,] 0.3762947 0.3734974 0.3707067 0.3679228 0.3651458 0.3623759 0.3596132
[2,] 0.3478835 0.3482101 0.3485193 0.3488111 0.3490854 0.3493421 0.3495813
[3,] 0.2758218 0.2782925 0.2807740 0.2832661 0.2857688 0.2882819 0.2908055
          [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14]
[1,] 0.3568578 0.3541098 0.3513695 0.3486368 0.3459119 0.3431951 0.3404862
[2,] 0.3498029 0.3500069 0.3501932 0.3503618 0.3505127 0.3506459 0.3507613
[3,] 0.2933393 0.2958833 0.2984373 0.3010014 0.3035753 0.3061591 0.3087525
         [,15]     [,16]     [,17]     [,18]     [,19]     [,20]
[1,] 0.3377856 0.3350934 0.3324095 0.3297343 0.3270677 0.3244099
[2,] 0.3508589 0.3509387 0.3510008 0.3510450 0.3510714 0.3510800
[3,] 0.3113555 0.3139679 0.3165897 0.3192207 0.3218609 0.3245101
> 
> dmlt(mod2, list(y = unique(d$y), x1 = 1:3, x2 = 2:3))
, ,     2

          1          2            3
1 0.3762947 0.02626043 0.0001837032
2 0.3478835 0.12564072 0.0038179958
3 0.2758218 0.84809885 0.9959983009

, ,     3

           1         2          3
1 0.90337216 0.3734974 0.02581432
2 0.08312840 0.3482101 0.12435877
3 0.01349943 0.2782925 0.84982692

> 
> 
> proc.time()
   user  system elapsed 
  2.013   0.052   2.053 
