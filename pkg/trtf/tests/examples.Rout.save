
R version 3.3.2 (2016-10-31) -- "Sincere Pumpkin Patch"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library("trtf")
Loading required package: mlt
Loading required package: basefun
Loading required package: variables
Loading required package: partykit
Loading required package: grid

Attaching package: 'grid'

The following object is masked from 'package:variables':

    unit

Loading required package: libcoin
Loading required package: mvtnorm
> library("survival")
> data("GBSG2", package = "TH.data")
> set.seed(290875)
> 
> yvar <- numeric_var("y", support = c(100, 2000), bounds = c(0, Inf))
> By <- Bernstein_basis(yvar, order = 5, ui = "incre")
> m <- ctm(response = By, todistr = "MinExt")
> GBSG2$y <- with(GBSG2, Surv(time, cens))
> 
> ctrl <- ctree_control(splitstat = "quad", teststat = "quad", minsplit = 40, minbucket = 20)
> st2 <- trafotree(m, formula = y ~ horTh + age + menostat + tsize + tgrade +
+     pnodes + progrec + estrec, control = ctrl, data = GBSG2)
> 
> coef(st2)
     Bs1(y)     Bs2(y)     Bs3(y)     Bs4(y)     Bs5(y)     Bs6(y)
3 -3.720037 -0.6037044 -0.6037044 -0.3614308 -0.1331501 -0.1331501
4 -6.147858 -1.2194534 -1.2194535 -1.2194536 -0.8490830 -0.5917292
6 -4.236228 -0.4246556 -0.4246556 -0.1697198 -0.1697198  0.1522876
7 -2.930137  0.2252798  0.2252798  0.2252797  0.4153924  0.6296275
> logLik(st2)
'log Lik.' -2571.124 (df=24)
> logLik(st2, newdata = GBSG2)
'log Lik.' -2571.124 (df=24)
> 
> predict(st2, newdata = GBSG2[1:3,], type = "node")
1 2 3 
4 6 6 
> predict(st2, newdata = GBSG2[1:3,], type = "coef")
     Bs1(y)     Bs2(y)     Bs3(y)     Bs4(y)     Bs5(y)     Bs6(y)
3 -3.720037 -0.6037044 -0.6037044 -0.3614308 -0.1331501 -0.1331501
4 -6.147858 -1.2194534 -1.2194535 -1.2194536 -0.8490830 -0.5917292
4 -6.147858 -1.2194534 -1.2194535 -1.2194536 -0.8490830 -0.5917292
> predict(st2, newdata = GBSG2[1:3,], type = "hazard")
              [,1]         [,2]         [,3]
 [1,] 7.580265e-06 5.320261e-05 5.320261e-05
 [2,] 2.934976e-05 1.511935e-04 1.511935e-04
 [3,] 7.817709e-05 3.068468e-04 3.068468e-04
 [4,] 1.595505e-04 5.078580e-04 5.078580e-04
 [5,] 2.601189e-04 7.088839e-04 7.088839e-04
 [6,] 3.516790e-04 8.593687e-04 8.593687e-04
 [7,] 4.078605e-04 9.284151e-04 9.284151e-04
 [8,] 4.186826e-04 9.145090e-04 9.145090e-04
 [9,] 3.922474e-04 8.386719e-04 8.386719e-04
[10,] 3.463810e-04 7.306962e-04 7.306962e-04
[11,] 2.989679e-04 6.177746e-04 6.177746e-04
[12,] 2.624561e-04 5.191161e-04 5.191161e-04
[13,] 2.428734e-04 4.456088e-04 4.456088e-04
[14,] 2.412576e-04 4.021136e-04 4.021136e-04
[15,] 2.555140e-04 3.904489e-04 3.904489e-04
[16,] 2.816931e-04 4.121245e-04 4.121245e-04
[17,] 3.144729e-04 4.706765e-04 4.706765e-04
[18,] 3.470378e-04 5.739447e-04 5.739447e-04
[19,] 3.707084e-04 7.369811e-04 7.369811e-04
[20,] 3.747678e-04 9.867788e-04 9.867788e-04
> 
> plot(st2, tp_args = list(type = "survivor"))
> 
> class(st2) <- class(st2)[-1L]
> plot(st2)
> 
> st1 <- ctree(y ~ horTh + age + menostat + tsize + tgrade +
+     pnodes + progrec + estrec, data = GBSG2, control = ctrl)
> plot(st1)
> 
> n1 <- predict(st1, type = "node")
> n2 <- predict(st2, type = "node")
> 
> table(n1, n2)
   n2
n1    3   4   6   7
  3  21 227   0   0
  4   5 123   0   0
  6   2  19  69  54
  7   3  33 110  20
> 
> tf <- traforest(m, formula = y ~ horTh + age + menostat + tsize + tgrade +
+     pnodes + progrec + estrec, data = GBSG2, 
+     control = ctree_control(splitstat = "quad", teststat = "quad",
+                     testtype = "Teststatistic", mincriterion = 1, minbucket = 50), 
+     ntree = 50, trace = FALSE, cores = 4)
> 
> w <- predict(tf, newdata = GBSG2[1:3,], type = "weights")
> 
> cf <- coef(mlt(m, data = GBSG2))
> coef(m1 <- mlt(m, data = GBSG2, weights = w[,1], theta = cf))
    Bs1(y)     Bs2(y)     Bs3(y)     Bs4(y)     Bs5(y)     Bs6(y) 
-6.3571477 -0.9456291 -0.9456291 -0.9456291 -0.7655336 -0.3855950 
> coef(m2 <- mlt(m, data = GBSG2, weights = w[,2], theta = cf))
     Bs1(y)      Bs2(y)      Bs3(y)      Bs4(y)      Bs5(y)      Bs6(y) 
-4.33839592 -0.59256959 -0.59256959 -0.36757050 -0.36757051  0.01385066 
> coef(m3 <- mlt(m, data = GBSG2, weights = w[,3], theta = cf))
    Bs1(y)     Bs2(y)     Bs3(y)     Bs4(y)     Bs5(y)     Bs6(y) 
-4.2833653 -0.4573252 -0.4573251 -0.2303488 -0.2303487  0.1129139 
> 
> layout(matrix(1:3, nr = 1))
> plot(m1, newdata = data.frame(1), type = "survivor")
> plot(m2, newdata = data.frame(1), type = "survivor", add = TRUE)
> plot(m3, newdata = data.frame(1), type = "survivor", add = TRUE)
> 
> 
> cmod <- coxph(Surv(time, cens) ~ horTh + age + menostat + tsize + tgrade +
+     pnodes + progrec + estrec, data = GBSG2)
> 
> plot(survfit(cmod, newdata = GBSG2[1:3,]))
> 
> sf <-  cforest(formula = y ~ horTh + age + menostat + tsize + tgrade +
+     pnodes + progrec + estrec, data = GBSG2, 
+     control = ctree_control(splitstat = "quad", teststat = "quad",
+                     testtype = "Teststatistic", mincriterion = 1, minbucket = 50),
+     ntree = 50, trace = FALSE)
> 
> w <- predict(sf, newdata = GBSG2[1:3,], type = "weights")
> 
> cf <- coef(mlt(m, data = GBSG2))
> coef(m1 <- mlt(m, data = GBSG2, weights = w[,1], theta = cf))
    Bs1(y)     Bs2(y)     Bs3(y)     Bs4(y)     Bs5(y)     Bs6(y) 
-5.4444495 -0.9975822 -0.9975822 -0.9975823 -0.4418903 -0.2563665 
> coef(m2 <- mlt(m, data = GBSG2, weights = w[,2], theta = cf))
    Bs1(y)     Bs2(y)     Bs3(y)     Bs4(y)     Bs5(y)     Bs6(y) 
-4.8475984 -0.7959367 -0.7959362 -0.4773143 -0.4773143 -0.1005801 
> coef(m3 <- mlt(m, data = GBSG2, weights = w[,3], theta = cf))
     Bs1(y)      Bs2(y)      Bs3(y)      Bs4(y)      Bs5(y)      Bs6(y) 
-4.33245111 -0.55842916 -0.55842917 -0.29153269 -0.29153265  0.04124619 
> 
> plot(m1, newdata = data.frame(1), type = "survivor")
> plot(m2, newdata = data.frame(1), type = "survivor", add = TRUE)
> plot(m3, newdata = data.frame(1), type = "survivor", add = TRUE)
> 
> proc.time()
   user  system elapsed 
106.588   0.460  30.909 
